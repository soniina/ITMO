import { CommonModule } from '@angular/common';
import { Component, inject, Input, NgModule } from '@angular/core';
import { SharedModule } from 'primeng/api';
import { BaseComponent } from 'primeng/basecomponent';
import { InputGroupStyle } from './style/inputgroupstyle';
import * as i0 from "@angular/core";
const _c0 = ["*"];
/**
 * InputGroup displays text, icon, buttons and other content can be grouped next to an input.
 * @group Components
 */
export class InputGroup extends BaseComponent {
    /**
     * Inline style of the element.
     * @group Props
     */
    style;
    /**
     * Class of the element.
     * @group Props
     */
    styleClass;
    _componentStyle = inject(InputGroupStyle);
    static ɵfac = /*@__PURE__*/ (() => { let ɵInputGroup_BaseFactory; return function InputGroup_Factory(__ngFactoryType__) { return (ɵInputGroup_BaseFactory || (ɵInputGroup_BaseFactory = i0.ɵɵgetInheritedFactory(InputGroup)))(__ngFactoryType__ || InputGroup); }; })();
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputGroup, selectors: [["p-inputgroup"], ["p-inputGroup"], ["p-input-group"]], hostAttrs: [1, "p-inputgroup"], hostVars: 5, hostBindings: function InputGroup_HostBindings(rf, ctx) { if (rf & 2) {
            i0.ɵɵattribute("data-pc-name", "inputgroup");
            i0.ɵɵstyleMap(ctx.style);
            i0.ɵɵclassMap(ctx.styleClass);
        } }, inputs: { style: "style", styleClass: "styleClass" }, standalone: true, features: [i0.ɵɵProvidersFeature([InputGroupStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroup_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵprojection(0);
        } }, dependencies: [CommonModule, SharedModule], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(InputGroup, [{
        type: Component,
        args: [{
                selector: 'p-inputgroup, p-inputGroup, p-input-group',
                standalone: true,
                imports: [CommonModule, SharedModule],
                template: ` <ng-content></ng-content> `,
                providers: [InputGroupStyle],
                host: {
                    class: 'p-inputgroup',
                    '[attr.data-pc-name]': '"inputgroup"',
                    '[class]': 'styleClass',
                    '[style]': 'style'
                }
            }]
    }], null, { style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(InputGroup, { className: "InputGroup" }); })();
export class InputGroupModule {
    static ɵfac = function InputGroupModule_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || InputGroupModule)(); };
    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: InputGroupModule });
    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [InputGroup, SharedModule, SharedModule] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(InputGroupModule, [{
        type: NgModule,
        args: [{
                imports: [InputGroup, SharedModule],
                exports: [InputGroup, SharedModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(InputGroupModule, { imports: [InputGroup, SharedModule], exports: [InputGroup, SharedModule] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRncm91cC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9pbnB1dGdyb3VwL2lucHV0Z3JvdXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMzQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7QUFFMUQ7OztHQUdHO0FBY0gsTUFBTSxPQUFPLFVBQVcsU0FBUSxhQUFhO0lBQ3pDOzs7T0FHRztJQUNNLEtBQUssQ0FBOEM7SUFDNUQ7OztPQUdHO0lBQ00sVUFBVSxDQUFxQjtJQUV4QyxlQUFlLEdBQUcsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDO3FOQVpqQyxVQUFVLHlCQUFWLFVBQVU7NkRBQVYsVUFBVTsyQ0FBVixZQUFZO1lBQVosd0JBQVU7WUFBViw2QkFBVTtzSEFSUixDQUFDLGVBQWUsQ0FBQzs7WUFEaEIsa0JBQXlCOzRCQUQzQixZQUFZLEVBQUUsWUFBWTs7aUZBVTNCLFVBQVU7Y0FidEIsU0FBUztlQUFDO2dCQUNQLFFBQVEsRUFBRSwyQ0FBMkM7Z0JBQ3JELFVBQVUsRUFBRSxJQUFJO2dCQUNoQixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsWUFBWSxDQUFDO2dCQUNyQyxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2QyxTQUFTLEVBQUUsQ0FBQyxlQUFlLENBQUM7Z0JBQzVCLElBQUksRUFBRTtvQkFDRixLQUFLLEVBQUUsY0FBYztvQkFDckIscUJBQXFCLEVBQUUsY0FBYztvQkFDckMsU0FBUyxFQUFFLFlBQVk7b0JBQ3ZCLFNBQVMsRUFBRSxPQUFPO2lCQUNyQjthQUNKO2dCQU1ZLEtBQUs7a0JBQWIsS0FBSztZQUtHLFVBQVU7a0JBQWxCLEtBQUs7O2tGQVZHLFVBQVU7QUFtQnZCLE1BQU0sT0FBTyxnQkFBZ0I7MEdBQWhCLGdCQUFnQjs0REFBaEIsZ0JBQWdCO2dFQUhmLFVBQVUsRUFBRSxZQUFZLEVBQ1osWUFBWTs7aUZBRXpCLGdCQUFnQjtjQUo1QixRQUFRO2VBQUM7Z0JBQ04sT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQztnQkFDbkMsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLFlBQVksQ0FBQzthQUN0Qzs7d0ZBQ1ksZ0JBQWdCLGNBbkJoQixVQUFVLEVBZ0JHLFlBQVksYUFoQnpCLFVBQVUsRUFpQkcsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDb21wb25lbnQsIGluamVjdCwgSW5wdXQsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaGFyZWRNb2R1bGUgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBCYXNlQ29tcG9uZW50IH0gZnJvbSAncHJpbWVuZy9iYXNlY29tcG9uZW50JztcbmltcG9ydCB7IElucHV0R3JvdXBTdHlsZSB9IGZyb20gJy4vc3R5bGUvaW5wdXRncm91cHN0eWxlJztcblxuLyoqXG4gKiBJbnB1dEdyb3VwIGRpc3BsYXlzIHRleHQsIGljb24sIGJ1dHRvbnMgYW5kIG90aGVyIGNvbnRlbnQgY2FuIGJlIGdyb3VwZWQgbmV4dCB0byBhbiBpbnB1dC5cbiAqIEBncm91cCBDb21wb25lbnRzXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAncC1pbnB1dGdyb3VwLCBwLWlucHV0R3JvdXAsIHAtaW5wdXQtZ3JvdXAnLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgU2hhcmVkTW9kdWxlXSxcbiAgICB0ZW1wbGF0ZTogYCA8bmctY29udGVudD48L25nLWNvbnRlbnQ+IGAsXG4gICAgcHJvdmlkZXJzOiBbSW5wdXRHcm91cFN0eWxlXSxcbiAgICBob3N0OiB7XG4gICAgICAgIGNsYXNzOiAncC1pbnB1dGdyb3VwJyxcbiAgICAgICAgJ1thdHRyLmRhdGEtcGMtbmFtZV0nOiAnXCJpbnB1dGdyb3VwXCInLFxuICAgICAgICAnW2NsYXNzXSc6ICdzdHlsZUNsYXNzJyxcbiAgICAgICAgJ1tzdHlsZV0nOiAnc3R5bGUnXG4gICAgfVxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dEdyb3VwIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogSW5saW5lIHN0eWxlIG9mIHRoZSBlbGVtZW50LlxuICAgICAqIEBncm91cCBQcm9wc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIHN0eWxlOiB7IFtrbGFzczogc3RyaW5nXTogYW55IH0gfCBudWxsIHwgdW5kZWZpbmVkO1xuICAgIC8qKlxuICAgICAqIENsYXNzIG9mIHRoZSBlbGVtZW50LlxuICAgICAqIEBncm91cCBQcm9wc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIHN0eWxlQ2xhc3M6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICAgIF9jb21wb25lbnRTdHlsZSA9IGluamVjdChJbnB1dEdyb3VwU3R5bGUpO1xufVxuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtJbnB1dEdyb3VwLCBTaGFyZWRNb2R1bGVdLFxuICAgIGV4cG9ydHM6IFtJbnB1dEdyb3VwLCBTaGFyZWRNb2R1bGVdXG59KVxuZXhwb3J0IGNsYXNzIElucHV0R3JvdXBNb2R1bGUge31cbiJdfQ==