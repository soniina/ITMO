import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-skeleton {
    overflow: hidden;
    background: ${dt('skeleton.background')};
    border-radius: ${dt('skeleton.border.radius')};
}

.p-skeleton::after {
    content: "";
    animation: p-skeleton-animation 1.2s infinite;
    height: 100%;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    transform: translateX(-100%);
    z-index: 1;
    background: linear-gradient(90deg, rgba(255, 255, 255, 0), ${dt('skeleton.animation.background')}, rgba(255, 255, 255, 0));
}

[dir='rtl'] .p-skeleton::after {
    animation-name: p-skeleton-animation-rtl;
}

.p-skeleton-circle {
    border-radius: 50%;
}

.p-skeleton-animation-none::after {
    animation: none;
}

@keyframes p-skeleton-animation {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(100%);
    }
}

@keyframes p-skeleton-animation-rtl {
    from {
        transform: translateX(100%);
    }
    to {
        transform: translateX(-100%);
    }
}
`;
const inlineStyles = {
    root: { position: 'relative' }
};
const classes = {
    root: ({ props }) => [
        'p-skeleton p-component',
        {
            'p-skeleton-circle': props.shape === 'circle',
            'p-skeleton-animation-none': props.animation === 'none'
        }
    ]
};
export class SkeletonStyle extends BaseStyle {
    name = 'skeleton';
    theme = theme;
    classes = classes;
    inlineStyles = inlineStyles;
    static ɵfac = /*@__PURE__*/ (() => { let ɵSkeletonStyle_BaseFactory; return function SkeletonStyle_Factory(__ngFactoryType__) { return (ɵSkeletonStyle_BaseFactory || (ɵSkeletonStyle_BaseFactory = i0.ɵɵgetInheritedFactory(SkeletonStyle)))(__ngFactoryType__ || SkeletonStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: SkeletonStyle, factory: SkeletonStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(SkeletonStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * Skeleton is a placeholder to display instead of the actual content.
 *
 * [Live Demo](https://www.primeng.org/skeleton/)
 *
 * @module skeletonstyle
 *
 */
export var SkeletonClasses;
(function (SkeletonClasses) {
    /**
     * Class name of the root element
     */
    SkeletonClasses["root"] = "p-skeleton";
})(SkeletonClasses || (SkeletonClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tlbGV0b25zdHlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9za2VsZXRvbi9zdHlsZS9za2VsZXRvbnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7O2tCQUdSLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQztxQkFDdEIsRUFBRSxDQUFDLHdCQUF3QixDQUFDOzs7Ozs7Ozs7Ozs7O2lFQWFnQixFQUFFLENBQUMsK0JBQStCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBZ0NuRyxDQUFDO0FBRUYsTUFBTSxZQUFZLEdBQUc7SUFDakIsSUFBSSxFQUFFLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRTtDQUNqQyxDQUFDO0FBRUYsTUFBTSxPQUFPLEdBQUc7SUFDWixJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUNqQix3QkFBd0I7UUFDeEI7WUFDSSxtQkFBbUIsRUFBRSxLQUFLLENBQUMsS0FBSyxLQUFLLFFBQVE7WUFDN0MsMkJBQTJCLEVBQUUsS0FBSyxDQUFDLFNBQVMsS0FBSyxNQUFNO1NBQzFEO0tBQ0o7Q0FDSixDQUFDO0FBR0YsTUFBTSxPQUFPLGFBQWMsU0FBUSxTQUFTO0lBQ3hDLElBQUksR0FBRyxVQUFVLENBQUM7SUFFbEIsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUVkLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFFbEIsWUFBWSxHQUFHLFlBQVksQ0FBQztpT0FQbkIsYUFBYSx5QkFBYixhQUFhO2dFQUFiLGFBQWEsV0FBYixhQUFhOztpRkFBYixhQUFhO2NBRHpCLFVBQVU7O0FBV1g7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLENBQU4sSUFBWSxlQUtYO0FBTEQsV0FBWSxlQUFlO0lBQ3ZCOztPQUVHO0lBQ0gsc0NBQW1CLENBQUE7QUFDdkIsQ0FBQyxFQUxXLGVBQWUsS0FBZixlQUFlLFFBSzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZVN0eWxlIH0gZnJvbSAncHJpbWVuZy9iYXNlJztcblxuY29uc3QgdGhlbWUgPSAoeyBkdCB9KSA9PiBgXG4ucC1za2VsZXRvbiB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCdza2VsZXRvbi5iYWNrZ3JvdW5kJyl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZHQoJ3NrZWxldG9uLmJvcmRlci5yYWRpdXMnKX07XG59XG5cbi5wLXNrZWxldG9uOjphZnRlciB7XG4gICAgY29udGVudDogXCJcIjtcbiAgICBhbmltYXRpb246IHAtc2tlbGV0b24tYW5pbWF0aW9uIDEuMnMgaW5maW5pdGU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGxlZnQ6IDA7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAwO1xuICAgIHRvcDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIHotaW5kZXg6IDE7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDApLCAke2R0KCdza2VsZXRvbi5hbmltYXRpb24uYmFja2dyb3VuZCcpfSwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwKSk7XG59XG5cbltkaXI9J3J0bCddIC5wLXNrZWxldG9uOjphZnRlciB7XG4gICAgYW5pbWF0aW9uLW5hbWU6IHAtc2tlbGV0b24tYW5pbWF0aW9uLXJ0bDtcbn1cblxuLnAtc2tlbGV0b24tY2lyY2xlIHtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi5wLXNrZWxldG9uLWFuaW1hdGlvbi1ub25lOjphZnRlciB7XG4gICAgYW5pbWF0aW9uOiBub25lO1xufVxuXG5Aa2V5ZnJhbWVzIHAtc2tlbGV0b24tYW5pbWF0aW9uIHtcbiAgICBmcm9tIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbiAgICB9XG4gICAgdG8ge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoMTAwJSk7XG4gICAgfVxufVxuXG5Aa2V5ZnJhbWVzIHAtc2tlbGV0b24tYW5pbWF0aW9uLXJ0bCB7XG4gICAgZnJvbSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDAlKTtcbiAgICB9XG4gICAgdG8ge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwMCUpO1xuICAgIH1cbn1cbmA7XG5cbmNvbnN0IGlubGluZVN0eWxlcyA9IHtcbiAgICByb290OiB7IHBvc2l0aW9uOiAncmVsYXRpdmUnIH1cbn07XG5cbmNvbnN0IGNsYXNzZXMgPSB7XG4gICAgcm9vdDogKHsgcHJvcHMgfSkgPT4gW1xuICAgICAgICAncC1za2VsZXRvbiBwLWNvbXBvbmVudCcsXG4gICAgICAgIHtcbiAgICAgICAgICAgICdwLXNrZWxldG9uLWNpcmNsZSc6IHByb3BzLnNoYXBlID09PSAnY2lyY2xlJyxcbiAgICAgICAgICAgICdwLXNrZWxldG9uLWFuaW1hdGlvbi1ub25lJzogcHJvcHMuYW5pbWF0aW9uID09PSAnbm9uZSdcbiAgICAgICAgfVxuICAgIF1cbn07XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTa2VsZXRvblN0eWxlIGV4dGVuZHMgQmFzZVN0eWxlIHtcbiAgICBuYW1lID0gJ3NrZWxldG9uJztcblxuICAgIHRoZW1lID0gdGhlbWU7XG5cbiAgICBjbGFzc2VzID0gY2xhc3NlcztcblxuICAgIGlubGluZVN0eWxlcyA9IGlubGluZVN0eWxlcztcbn1cblxuLyoqXG4gKlxuICogU2tlbGV0b24gaXMgYSBwbGFjZWhvbGRlciB0byBkaXNwbGF5IGluc3RlYWQgb2YgdGhlIGFjdHVhbCBjb250ZW50LlxuICpcbiAqIFtMaXZlIERlbW9dKGh0dHBzOi8vd3d3LnByaW1lbmcub3JnL3NrZWxldG9uLylcbiAqXG4gKiBAbW9kdWxlIHNrZWxldG9uc3R5bGVcbiAqXG4gKi9cbmV4cG9ydCBlbnVtIFNrZWxldG9uQ2xhc3NlcyB7XG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgcm9vdCBlbGVtZW50XG4gICAgICovXG4gICAgcm9vdCA9ICdwLXNrZWxldG9uJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNrZWxldG9uU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge31cbiJdfQ==