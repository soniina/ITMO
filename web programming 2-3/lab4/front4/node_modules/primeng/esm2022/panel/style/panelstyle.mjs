import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-panel {
    border: 1px solid ${dt('panel.border.color')};
    border-radius: ${dt('panel.border.radius')};
    background: ${dt('panel.background')};
    color: ${dt('panel.color')};
}

.p-panel-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: ${dt('panel.header.padding')};
    background: ${dt('panel.header.background')};
    color: ${dt('panel.header.color')};
    border-style: solid;
    border-width: ${dt('panel.header.border.width')};
    border-color: ${dt('panel.header.border.color')};
    border-radius: ${dt('panel.header.border.radius')};
}

.p-panel-toggleable .p-panel-header {
    padding: ${dt('panel.toggleable.header.padding')};
}

.p-panel-title {
    line-height: 1;
    font-weight: ${dt('panel.title.font.weight')};
}

.p-panel-content {
    padding: ${dt('panel.content.padding')};
}

.p-panel-footer {
    padding: ${dt('panel.footer.padding')};
}

/* For PrimeNG */
.p-panel-toggleable.p-panel-expanded > .p-panel-content-container:not(.ng-animating) {
    overflow: visible
}

.p-panel-toggleable .p-panel-content-container {
    overflow: hidden;
}
`;
const classes = {
    root: ({ props }) => [
        'p-panel p-component',
        {
            'p-panel-toggleable': props.toggleable
        }
    ],
    header: 'p-panel-header',
    title: 'p-panel-title',
    headerActions: 'p-panel-header-actions',
    pcToggleButton: 'p-panel-toggle-button',
    contentContainer: 'p-panel-content-container',
    content: 'p-panel-content',
    footer: 'p-panel-footer'
};
export class PanelStyle extends BaseStyle {
    name = 'panel';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵPanelStyle_BaseFactory; return function PanelStyle_Factory(__ngFactoryType__) { return (ɵPanelStyle_BaseFactory || (ɵPanelStyle_BaseFactory = i0.ɵɵgetInheritedFactory(PanelStyle)))(__ngFactoryType__ || PanelStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PanelStyle, factory: PanelStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PanelStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * Panel is a container with the optional content toggle feature.
 *
 * [Live Demo](https://www.primeng.org/panel/)
 *
 * @module panelstyle
 *
 */
export var PanelClasses;
(function (PanelClasses) {
    /**
     * Class name of the root element
     */
    PanelClasses["root"] = "p-panel";
    /**
     * Class name of the header element
     */
    PanelClasses["header"] = "p-panel-header";
    /**
     * Class name of the title element
     */
    PanelClasses["title"] = "p-panel-title";
    /**
     * Class name of the header actions element
     */
    PanelClasses["headerActions"] = "p-panel-header-actions";
    /**
     * Class name of the toggle button element
     */
    PanelClasses["pcToggleButton"] = "p-panel-toggle-button";
    /**
     * Class name of the content container element
     */
    PanelClasses["contentContainer"] = "p-panel-content-container";
    /**
     * Class name of the content element
     */
    PanelClasses["content"] = "p-panel-content";
    /**
     * Class name of the footer element
     */
    PanelClasses["footer"] = "p-panel-footer";
})(PanelClasses || (PanelClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWxzdHlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wYW5lbC9zdHlsZS9wYW5lbHN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7d0JBRUYsRUFBRSxDQUFDLG9CQUFvQixDQUFDO3FCQUMzQixFQUFFLENBQUMscUJBQXFCLENBQUM7a0JBQzVCLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQzthQUMzQixFQUFFLENBQUMsYUFBYSxDQUFDOzs7Ozs7O2VBT2YsRUFBRSxDQUFDLHNCQUFzQixDQUFDO2tCQUN2QixFQUFFLENBQUMseUJBQXlCLENBQUM7YUFDbEMsRUFBRSxDQUFDLG9CQUFvQixDQUFDOztvQkFFakIsRUFBRSxDQUFDLDJCQUEyQixDQUFDO29CQUMvQixFQUFFLENBQUMsMkJBQTJCLENBQUM7cUJBQzlCLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQzs7OztlQUl0QyxFQUFFLENBQUMsaUNBQWlDLENBQUM7Ozs7O21CQUtqQyxFQUFFLENBQUMseUJBQXlCLENBQUM7Ozs7ZUFJakMsRUFBRSxDQUFDLHVCQUF1QixDQUFDOzs7O2VBSTNCLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQzs7Ozs7Ozs7Ozs7Q0FXeEMsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFHO0lBQ1osSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUM7UUFDakIscUJBQXFCO1FBQ3JCO1lBQ0ksb0JBQW9CLEVBQUUsS0FBSyxDQUFDLFVBQVU7U0FDekM7S0FDSjtJQUNELE1BQU0sRUFBRSxnQkFBZ0I7SUFDeEIsS0FBSyxFQUFFLGVBQWU7SUFDdEIsYUFBYSxFQUFFLHdCQUF3QjtJQUN2QyxjQUFjLEVBQUUsdUJBQXVCO0lBQ3ZDLGdCQUFnQixFQUFFLDJCQUEyQjtJQUM3QyxPQUFPLEVBQUUsaUJBQWlCO0lBQzFCLE1BQU0sRUFBRSxnQkFBZ0I7Q0FDM0IsQ0FBQztBQUVGLE1BQU0sT0FBTyxVQUFXLFNBQVEsU0FBUztJQUNyQyxJQUFJLEdBQUcsT0FBTyxDQUFDO0lBRWYsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUVkLE9BQU8sR0FBRyxPQUFPLENBQUM7cU5BTFQsVUFBVSx5QkFBVixVQUFVO2dFQUFWLFVBQVUsV0FBVixVQUFVOztpRkFBVixVQUFVO2NBRHRCLFVBQVU7O0FBU1g7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLENBQU4sSUFBWSxZQWlDWDtBQWpDRCxXQUFZLFlBQVk7SUFDcEI7O09BRUc7SUFDSCxnQ0FBZ0IsQ0FBQTtJQUNoQjs7T0FFRztJQUNILHlDQUF5QixDQUFBO0lBQ3pCOztPQUVHO0lBQ0gsdUNBQXVCLENBQUE7SUFDdkI7O09BRUc7SUFDSCx3REFBd0MsQ0FBQTtJQUN4Qzs7T0FFRztJQUNILHdEQUF3QyxDQUFBO0lBQ3hDOztPQUVHO0lBQ0gsOERBQThDLENBQUE7SUFDOUM7O09BRUc7SUFDSCwyQ0FBMkIsQ0FBQTtJQUMzQjs7T0FFRztJQUNILHlDQUF5QixDQUFBO0FBQzdCLENBQUMsRUFqQ1csWUFBWSxLQUFaLFlBQVksUUFpQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZVN0eWxlIH0gZnJvbSAncHJpbWVuZy9iYXNlJztcblxuY29uc3QgdGhlbWUgPSAoeyBkdCB9KSA9PiBgXG4ucC1wYW5lbCB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJHtkdCgncGFuZWwuYm9yZGVyLmNvbG9yJyl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZHQoJ3BhbmVsLmJvcmRlci5yYWRpdXMnKX07XG4gICAgYmFja2dyb3VuZDogJHtkdCgncGFuZWwuYmFja2dyb3VuZCcpfTtcbiAgICBjb2xvcjogJHtkdCgncGFuZWwuY29sb3InKX07XG59XG5cbi5wLXBhbmVsLWhlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAke2R0KCdwYW5lbC5oZWFkZXIucGFkZGluZycpfTtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCdwYW5lbC5oZWFkZXIuYmFja2dyb3VuZCcpfTtcbiAgICBjb2xvcjogJHtkdCgncGFuZWwuaGVhZGVyLmNvbG9yJyl9O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXdpZHRoOiAke2R0KCdwYW5lbC5oZWFkZXIuYm9yZGVyLndpZHRoJyl9O1xuICAgIGJvcmRlci1jb2xvcjogJHtkdCgncGFuZWwuaGVhZGVyLmJvcmRlci5jb2xvcicpfTtcbiAgICBib3JkZXItcmFkaXVzOiAke2R0KCdwYW5lbC5oZWFkZXIuYm9yZGVyLnJhZGl1cycpfTtcbn1cblxuLnAtcGFuZWwtdG9nZ2xlYWJsZSAucC1wYW5lbC1oZWFkZXIge1xuICAgIHBhZGRpbmc6ICR7ZHQoJ3BhbmVsLnRvZ2dsZWFibGUuaGVhZGVyLnBhZGRpbmcnKX07XG59XG5cbi5wLXBhbmVsLXRpdGxlIHtcbiAgICBsaW5lLWhlaWdodDogMTtcbiAgICBmb250LXdlaWdodDogJHtkdCgncGFuZWwudGl0bGUuZm9udC53ZWlnaHQnKX07XG59XG5cbi5wLXBhbmVsLWNvbnRlbnQge1xuICAgIHBhZGRpbmc6ICR7ZHQoJ3BhbmVsLmNvbnRlbnQucGFkZGluZycpfTtcbn1cblxuLnAtcGFuZWwtZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAke2R0KCdwYW5lbC5mb290ZXIucGFkZGluZycpfTtcbn1cblxuLyogRm9yIFByaW1lTkcgKi9cbi5wLXBhbmVsLXRvZ2dsZWFibGUucC1wYW5lbC1leHBhbmRlZCA+IC5wLXBhbmVsLWNvbnRlbnQtY29udGFpbmVyOm5vdCgubmctYW5pbWF0aW5nKSB7XG4gICAgb3ZlcmZsb3c6IHZpc2libGVcbn1cblxuLnAtcGFuZWwtdG9nZ2xlYWJsZSAucC1wYW5lbC1jb250ZW50LWNvbnRhaW5lciB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cbmA7XG5cbmNvbnN0IGNsYXNzZXMgPSB7XG4gICAgcm9vdDogKHsgcHJvcHMgfSkgPT4gW1xuICAgICAgICAncC1wYW5lbCBwLWNvbXBvbmVudCcsXG4gICAgICAgIHtcbiAgICAgICAgICAgICdwLXBhbmVsLXRvZ2dsZWFibGUnOiBwcm9wcy50b2dnbGVhYmxlXG4gICAgICAgIH1cbiAgICBdLFxuICAgIGhlYWRlcjogJ3AtcGFuZWwtaGVhZGVyJyxcbiAgICB0aXRsZTogJ3AtcGFuZWwtdGl0bGUnLFxuICAgIGhlYWRlckFjdGlvbnM6ICdwLXBhbmVsLWhlYWRlci1hY3Rpb25zJyxcbiAgICBwY1RvZ2dsZUJ1dHRvbjogJ3AtcGFuZWwtdG9nZ2xlLWJ1dHRvbicsXG4gICAgY29udGVudENvbnRhaW5lcjogJ3AtcGFuZWwtY29udGVudC1jb250YWluZXInLFxuICAgIGNvbnRlbnQ6ICdwLXBhbmVsLWNvbnRlbnQnLFxuICAgIGZvb3RlcjogJ3AtcGFuZWwtZm9vdGVyJ1xufTtcbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQYW5lbFN0eWxlIGV4dGVuZHMgQmFzZVN0eWxlIHtcbiAgICBuYW1lID0gJ3BhbmVsJztcblxuICAgIHRoZW1lID0gdGhlbWU7XG5cbiAgICBjbGFzc2VzID0gY2xhc3Nlcztcbn1cblxuLyoqXG4gKlxuICogUGFuZWwgaXMgYSBjb250YWluZXIgd2l0aCB0aGUgb3B0aW9uYWwgY29udGVudCB0b2dnbGUgZmVhdHVyZS5cbiAqXG4gKiBbTGl2ZSBEZW1vXShodHRwczovL3d3dy5wcmltZW5nLm9yZy9wYW5lbC8pXG4gKlxuICogQG1vZHVsZSBwYW5lbHN0eWxlXG4gKlxuICovXG5leHBvcnQgZW51bSBQYW5lbENsYXNzZXMge1xuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIHJvb3QgZWxlbWVudFxuICAgICAqL1xuICAgIHJvb3QgPSAncC1wYW5lbCcsXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgaGVhZGVyIGVsZW1lbnRcbiAgICAgKi9cbiAgICBoZWFkZXIgPSAncC1wYW5lbC1oZWFkZXInLFxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIHRpdGxlIGVsZW1lbnRcbiAgICAgKi9cbiAgICB0aXRsZSA9ICdwLXBhbmVsLXRpdGxlJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBoZWFkZXIgYWN0aW9ucyBlbGVtZW50XG4gICAgICovXG4gICAgaGVhZGVyQWN0aW9ucyA9ICdwLXBhbmVsLWhlYWRlci1hY3Rpb25zJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSB0b2dnbGUgYnV0dG9uIGVsZW1lbnRcbiAgICAgKi9cbiAgICBwY1RvZ2dsZUJ1dHRvbiA9ICdwLXBhbmVsLXRvZ2dsZS1idXR0b24nLFxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIGNvbnRlbnQgY29udGFpbmVyIGVsZW1lbnRcbiAgICAgKi9cbiAgICBjb250ZW50Q29udGFpbmVyID0gJ3AtcGFuZWwtY29udGVudC1jb250YWluZXInLFxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIGNvbnRlbnQgZWxlbWVudFxuICAgICAqL1xuICAgIGNvbnRlbnQgPSAncC1wYW5lbC1jb250ZW50JyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBmb290ZXIgZWxlbWVudFxuICAgICAqL1xuICAgIGZvb3RlciA9ICdwLXBhbmVsLWZvb3Rlcidcbn1cbiJdfQ==