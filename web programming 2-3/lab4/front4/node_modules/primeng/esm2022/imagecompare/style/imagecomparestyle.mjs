import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-imagecompare {
    position: relative;
    overflow: hidden;
    width: 100%;
    aspect-ratio: 16 / 9;
}

.p-imagecompare img {
    width: 100%;
    height: 100%;
    position: absolute;
}

.p-imagecompare img + img {
    clip-path: polygon(0 0, 50% 0, 50% 100%, 0 100%);
}

.p-imagecompare:dir(rtl) img + img {
    clip-path: polygon(50% 0, 100% 0, 100% 100%, 50% 100%);
}

.p-imagecompare-slider {
    position: relative;
    -webkit-appearance: none;
    width: calc(100% + ${dt('imagecompare.handle.size')});
    height: 100%;
    margin-inline-start: calc(-1 * calc(${dt('imagecompare.handle.size')} / 2));
    background-color: transparent;
    outline: none;
    transition: all ${dt('imagecompare.handle.transition.duration')};
}

.p-imagecompare-slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    height: ${dt('imagecompare.handle.size')};
    width: ${dt('imagecompare.handle.size')};
    background: ${dt('imagecompare.handle.background')};
    border: ${dt('imagecompare.handle.border.width')} solid ${dt('imagecompare.handle.border.color')};
    border-radius: ${dt('imagecompare.handle.border.radius')};
    background-size: contain;
    cursor: ew-resize;
    transition: all ${dt('imagecompare.handle.transition.duration')};
}

.p-imagecompare-slider::-moz-range-thumb {
    height: ${dt('imagecompare.handle.size')};
    width: ${dt('imagecompare.handle.size')};
    background: ${dt('imagecompare.handle.background')};
    border: ${dt('imagecompare.handle.border.width')} ${dt('imagecompare.handle.border.style')} ${dt('imagecompare.handle.border.color')};
    border-radius: ${dt('imagecompare.handle.border.radius')};
    background-size: contain;
    cursor: ew-resize;
}

.p-imagecompare-slider:focus-visible::-webkit-slider-thumb {
    box-shadow: ${dt('imagecompare.handle.focus.ring.shadow')};
    outline: ${dt('imagecompare.handle.focus.ring.width')} ${dt('imagecompare.handle.focus.ring.style')} ${dt('imagecompare.handle.focus.ring.color')};
    outline-offset: ${dt('imagecompare.handle.focus.ring.offset')};
}

.p-imagecompare-slider:focus-visible::-moz-range-thumb {
    box-shadow: ${dt('imagecompare.handle.focus.ring.shadow')};
    outline: ${dt('imagecompare.handle.focus.ring.width')} ${dt('imagecompare.handle.focus.ring.style')} ${dt('imagecompare.handle.focus.ring.color')};
    outline-offset: ${dt('imagecompare.handle.focus.ring.offset')};
}

.p-imagecompare-slider:hover {
    width: calc(100% + ${dt('imagecompare.handle.hover.size')});
    margin-inline-start: calc(-1 * calc(${dt('imagecompare.handle.hover.size')} / 2));
}

.p-imagecompare-slider:hover::-webkit-slider-thumb {
    background: ${dt('imagecompare.handle.hover.background')};
    border-color: ${dt('imagecompare.handle.hover.border.color')};
    height: ${dt('imagecompare.handle.hover.size')};
    width: ${dt('imagecompare.handle.hover.size')};
}

.p-imagecompare-slider:hover::-moz-range-thumb {
    background: ${dt('imagecompare.handle.hover.background')};
    border-color: ${dt('imagecompare.handle.hover.border.color')};
    height: ${dt('imagecompare.handle.hover.size')};
    width: ${dt('imagecompare.handle.hover.size')};
}
`;
const classes = {
    root: 'p-imagecompare',
    slider: 'p-imagecompare-slider'
};
export class ImageCompareStyle extends BaseStyle {
    name = 'imagecompare';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵImageCompareStyle_BaseFactory; return function ImageCompareStyle_Factory(__ngFactoryType__) { return (ɵImageCompareStyle_BaseFactory || (ɵImageCompareStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ImageCompareStyle)))(__ngFactoryType__ || ImageCompareStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ImageCompareStyle, factory: ImageCompareStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ImageCompareStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * ImageCompare compares two images side by side with a slider.
 *
 * [Live Demo](https://www.primeng.org/imagecompare/)
 *
 * @module imagecomparestyle
 *
 */
export var ImageCompareClasses;
(function (ImageCompareClasses) {
    /**
     * Class name of the root element
     */
    ImageCompareClasses["root"] = "p-imagecompare";
    /**
     * Class name of the slider element
     */
    ImageCompareClasses["slider"] = "p-imagecompare-slider";
})(ImageCompareClasses || (ImageCompareClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2Vjb21wYXJlc3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvaW1hZ2Vjb21wYXJlL3N0eWxlL2ltYWdlY29tcGFyZXN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt5QkF5QkQsRUFBRSxDQUFDLDBCQUEwQixDQUFDOzswQ0FFYixFQUFFLENBQUMsMEJBQTBCLENBQUM7OztzQkFHbEQsRUFBRSxDQUFDLHlDQUF5QyxDQUFDOzs7OztjQUtyRCxFQUFFLENBQUMsMEJBQTBCLENBQUM7YUFDL0IsRUFBRSxDQUFDLDBCQUEwQixDQUFDO2tCQUN6QixFQUFFLENBQUMsZ0NBQWdDLENBQUM7Y0FDeEMsRUFBRSxDQUFDLGtDQUFrQyxDQUFDLFVBQVUsRUFBRSxDQUFDLGtDQUFrQyxDQUFDO3FCQUMvRSxFQUFFLENBQUMsbUNBQW1DLENBQUM7OztzQkFHdEMsRUFBRSxDQUFDLHlDQUF5QyxDQUFDOzs7O2NBSXJELEVBQUUsQ0FBQywwQkFBMEIsQ0FBQzthQUMvQixFQUFFLENBQUMsMEJBQTBCLENBQUM7a0JBQ3pCLEVBQUUsQ0FBQyxnQ0FBZ0MsQ0FBQztjQUN4QyxFQUFFLENBQUMsa0NBQWtDLENBQUMsSUFBSSxFQUFFLENBQUMsa0NBQWtDLENBQUMsSUFBSSxFQUFFLENBQUMsa0NBQWtDLENBQUM7cUJBQ25ILEVBQUUsQ0FBQyxtQ0FBbUMsQ0FBQzs7Ozs7O2tCQU0xQyxFQUFFLENBQUMsdUNBQXVDLENBQUM7ZUFDOUMsRUFBRSxDQUFDLHNDQUFzQyxDQUFDLElBQUksRUFBRSxDQUFDLHNDQUFzQyxDQUFDLElBQUksRUFBRSxDQUFDLHNDQUFzQyxDQUFDO3NCQUMvSCxFQUFFLENBQUMsdUNBQXVDLENBQUM7Ozs7a0JBSS9DLEVBQUUsQ0FBQyx1Q0FBdUMsQ0FBQztlQUM5QyxFQUFFLENBQUMsc0NBQXNDLENBQUMsSUFBSSxFQUFFLENBQUMsc0NBQXNDLENBQUMsSUFBSSxFQUFFLENBQUMsc0NBQXNDLENBQUM7c0JBQy9ILEVBQUUsQ0FBQyx1Q0FBdUMsQ0FBQzs7Ozt5QkFJeEMsRUFBRSxDQUFDLGdDQUFnQyxDQUFDOzBDQUNuQixFQUFFLENBQUMsZ0NBQWdDLENBQUM7Ozs7a0JBSTVELEVBQUUsQ0FBQyxzQ0FBc0MsQ0FBQztvQkFDeEMsRUFBRSxDQUFDLHdDQUF3QyxDQUFDO2NBQ2xELEVBQUUsQ0FBQyxnQ0FBZ0MsQ0FBQzthQUNyQyxFQUFFLENBQUMsZ0NBQWdDLENBQUM7Ozs7a0JBSS9CLEVBQUUsQ0FBQyxzQ0FBc0MsQ0FBQztvQkFDeEMsRUFBRSxDQUFDLHdDQUF3QyxDQUFDO2NBQ2xELEVBQUUsQ0FBQyxnQ0FBZ0MsQ0FBQzthQUNyQyxFQUFFLENBQUMsZ0NBQWdDLENBQUM7O0NBRWhELENBQUM7QUFFRixNQUFNLE9BQU8sR0FBRztJQUNaLElBQUksRUFBRSxnQkFBZ0I7SUFDdEIsTUFBTSxFQUFFLHVCQUF1QjtDQUNsQyxDQUFDO0FBR0YsTUFBTSxPQUFPLGlCQUFrQixTQUFRLFNBQVM7SUFDNUMsSUFBSSxHQUFHLGNBQWMsQ0FBQztJQUV0QixLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsT0FBTyxHQUFHLE9BQU8sQ0FBQztpUEFMVCxpQkFBaUIseUJBQWpCLGlCQUFpQjtnRUFBakIsaUJBQWlCLFdBQWpCLGlCQUFpQjs7aUZBQWpCLGlCQUFpQjtjQUQ3QixVQUFVOztBQVNYOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxDQUFOLElBQVksbUJBU1g7QUFURCxXQUFZLG1CQUFtQjtJQUMzQjs7T0FFRztJQUNILDhDQUF1QixDQUFBO0lBQ3ZCOztPQUVHO0lBQ0gsdURBQWdDLENBQUE7QUFDcEMsQ0FBQyxFQVRXLG1CQUFtQixLQUFuQixtQkFBbUIsUUFTOUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlU3R5bGUgfSBmcm9tICdwcmltZW5nL2Jhc2UnO1xuXG5jb25zdCB0aGVtZSA9ICh7IGR0IH0pID0+IGBcbi5wLWltYWdlY29tcGFyZSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYXNwZWN0LXJhdGlvOiAxNiAvIDk7XG59XG5cbi5wLWltYWdlY29tcGFyZSBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG59XG5cbi5wLWltYWdlY29tcGFyZSBpbWcgKyBpbWcge1xuICAgIGNsaXAtcGF0aDogcG9seWdvbigwIDAsIDUwJSAwLCA1MCUgMTAwJSwgMCAxMDAlKTtcbn1cblxuLnAtaW1hZ2Vjb21wYXJlOmRpcihydGwpIGltZyArIGltZyB7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDUwJSAwLCAxMDAlIDAsIDEwMCUgMTAwJSwgNTAlIDEwMCUpO1xufVxuXG4ucC1pbWFnZWNvbXBhcmUtc2xpZGVyIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgKyAke2R0KCdpbWFnZWNvbXBhcmUuaGFuZGxlLnNpemUnKX0pO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXJnaW4taW5saW5lLXN0YXJ0OiBjYWxjKC0xICogY2FsYygke2R0KCdpbWFnZWNvbXBhcmUuaGFuZGxlLnNpemUnKX0gLyAyKSk7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS50cmFuc2l0aW9uLmR1cmF0aW9uJyl9O1xufVxuXG4ucC1pbWFnZWNvbXBhcmUtc2xpZGVyOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAgIGhlaWdodDogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5zaXplJyl9O1xuICAgIHdpZHRoOiAke2R0KCdpbWFnZWNvbXBhcmUuaGFuZGxlLnNpemUnKX07XG4gICAgYmFja2dyb3VuZDogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5iYWNrZ3JvdW5kJyl9O1xuICAgIGJvcmRlcjogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5ib3JkZXIud2lkdGgnKX0gc29saWQgJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5ib3JkZXIuY29sb3InKX07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5ib3JkZXIucmFkaXVzJyl9O1xuICAgIGJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcbiAgICBjdXJzb3I6IGV3LXJlc2l6ZTtcbiAgICB0cmFuc2l0aW9uOiBhbGwgJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS50cmFuc2l0aW9uLmR1cmF0aW9uJyl9O1xufVxuXG4ucC1pbWFnZWNvbXBhcmUtc2xpZGVyOjotbW96LXJhbmdlLXRodW1iIHtcbiAgICBoZWlnaHQ6ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuc2l6ZScpfTtcbiAgICB3aWR0aDogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5zaXplJyl9O1xuICAgIGJhY2tncm91bmQ6ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuYmFja2dyb3VuZCcpfTtcbiAgICBib3JkZXI6ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuYm9yZGVyLndpZHRoJyl9ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuYm9yZGVyLnN0eWxlJyl9ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuYm9yZGVyLmNvbG9yJyl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuYm9yZGVyLnJhZGl1cycpfTtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47XG4gICAgY3Vyc29yOiBldy1yZXNpemU7XG59XG5cbi5wLWltYWdlY29tcGFyZS1zbGlkZXI6Zm9jdXMtdmlzaWJsZTo6LXdlYmtpdC1zbGlkZXItdGh1bWIge1xuICAgIGJveC1zaGFkb3c6ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuZm9jdXMucmluZy5zaGFkb3cnKX07XG4gICAgb3V0bGluZTogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5mb2N1cy5yaW5nLndpZHRoJyl9ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuZm9jdXMucmluZy5zdHlsZScpfSAke2R0KCdpbWFnZWNvbXBhcmUuaGFuZGxlLmZvY3VzLnJpbmcuY29sb3InKX07XG4gICAgb3V0bGluZS1vZmZzZXQ6ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuZm9jdXMucmluZy5vZmZzZXQnKX07XG59XG5cbi5wLWltYWdlY29tcGFyZS1zbGlkZXI6Zm9jdXMtdmlzaWJsZTo6LW1vei1yYW5nZS10aHVtYiB7XG4gICAgYm94LXNoYWRvdzogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5mb2N1cy5yaW5nLnNoYWRvdycpfTtcbiAgICBvdXRsaW5lOiAke2R0KCdpbWFnZWNvbXBhcmUuaGFuZGxlLmZvY3VzLnJpbmcud2lkdGgnKX0gJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5mb2N1cy5yaW5nLnN0eWxlJyl9ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuZm9jdXMucmluZy5jb2xvcicpfTtcbiAgICBvdXRsaW5lLW9mZnNldDogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5mb2N1cy5yaW5nLm9mZnNldCcpfTtcbn1cblxuLnAtaW1hZ2Vjb21wYXJlLXNsaWRlcjpob3ZlciB7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSArICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuaG92ZXIuc2l6ZScpfSk7XG4gICAgbWFyZ2luLWlubGluZS1zdGFydDogY2FsYygtMSAqIGNhbGMoJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5ob3Zlci5zaXplJyl9IC8gMikpO1xufVxuXG4ucC1pbWFnZWNvbXBhcmUtc2xpZGVyOmhvdmVyOjotd2Via2l0LXNsaWRlci10aHVtYiB7XG4gICAgYmFja2dyb3VuZDogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5ob3Zlci5iYWNrZ3JvdW5kJyl9O1xuICAgIGJvcmRlci1jb2xvcjogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5ob3Zlci5ib3JkZXIuY29sb3InKX07XG4gICAgaGVpZ2h0OiAke2R0KCdpbWFnZWNvbXBhcmUuaGFuZGxlLmhvdmVyLnNpemUnKX07XG4gICAgd2lkdGg6ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuaG92ZXIuc2l6ZScpfTtcbn1cblxuLnAtaW1hZ2Vjb21wYXJlLXNsaWRlcjpob3Zlcjo6LW1vei1yYW5nZS10aHVtYiB7XG4gICAgYmFja2dyb3VuZDogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5ob3Zlci5iYWNrZ3JvdW5kJyl9O1xuICAgIGJvcmRlci1jb2xvcjogJHtkdCgnaW1hZ2Vjb21wYXJlLmhhbmRsZS5ob3Zlci5ib3JkZXIuY29sb3InKX07XG4gICAgaGVpZ2h0OiAke2R0KCdpbWFnZWNvbXBhcmUuaGFuZGxlLmhvdmVyLnNpemUnKX07XG4gICAgd2lkdGg6ICR7ZHQoJ2ltYWdlY29tcGFyZS5oYW5kbGUuaG92ZXIuc2l6ZScpfTtcbn1cbmA7XG5cbmNvbnN0IGNsYXNzZXMgPSB7XG4gICAgcm9vdDogJ3AtaW1hZ2Vjb21wYXJlJyxcbiAgICBzbGlkZXI6ICdwLWltYWdlY29tcGFyZS1zbGlkZXInXG59O1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSW1hZ2VDb21wYXJlU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge1xuICAgIG5hbWUgPSAnaW1hZ2Vjb21wYXJlJztcblxuICAgIHRoZW1lID0gdGhlbWU7XG5cbiAgICBjbGFzc2VzID0gY2xhc3Nlcztcbn1cblxuLyoqXG4gKlxuICogSW1hZ2VDb21wYXJlIGNvbXBhcmVzIHR3byBpbWFnZXMgc2lkZSBieSBzaWRlIHdpdGggYSBzbGlkZXIuXG4gKlxuICogW0xpdmUgRGVtb10oaHR0cHM6Ly93d3cucHJpbWVuZy5vcmcvaW1hZ2Vjb21wYXJlLylcbiAqXG4gKiBAbW9kdWxlIGltYWdlY29tcGFyZXN0eWxlXG4gKlxuICovXG5leHBvcnQgZW51bSBJbWFnZUNvbXBhcmVDbGFzc2VzIHtcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSByb290IGVsZW1lbnRcbiAgICAgKi9cbiAgICByb290ID0gJ3AtaW1hZ2Vjb21wYXJlJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBzbGlkZXIgZWxlbWVudFxuICAgICAqL1xuICAgIHNsaWRlciA9ICdwLWltYWdlY29tcGFyZS1zbGlkZXInXG59XG5leHBvcnQgaW50ZXJmYWNlIEltYWdlQ29tcGFyZVN0eWxlIGV4dGVuZHMgQmFzZVN0eWxlIHt9XG4iXX0=