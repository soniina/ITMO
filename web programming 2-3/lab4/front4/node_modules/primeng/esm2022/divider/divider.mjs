import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, HostBinding, inject, Input, NgModule, ViewEncapsulation } from '@angular/core';
import { SharedModule } from 'primeng/api';
import { BaseComponent } from 'primeng/basecomponent';
import { DividerStyle } from './style/dividerstyle';
import * as i0 from "@angular/core";
const _c0 = ["*"];
/**
 * Divider is used to separate contents.
 * @group Components
 */
export class Divider extends BaseComponent {
    /**
     * Inline style of the component.
     * @group Props
     */
    style;
    /**
     * Style class of the component.
     * @group Props
     */
    styleClass;
    /**
     * Specifies the orientation.
     * @group Props
     */
    layout = 'horizontal';
    /**
     * Border style type.
     * @group Props
     */
    type = 'solid';
    /**
     * Alignment of the content.
     * @group Props
     */
    align;
    _componentStyle = inject(DividerStyle);
    get hostClass() {
        return this.styleClass;
    }
    static ɵfac = /*@__PURE__*/ (() => { let ɵDivider_BaseFactory; return function Divider_Factory(__ngFactoryType__) { return (ɵDivider_BaseFactory || (ɵDivider_BaseFactory = i0.ɵɵgetInheritedFactory(Divider)))(__ngFactoryType__ || Divider); }; })();
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Divider, selectors: [["p-divider"]], hostVars: 35, hostBindings: function Divider_HostBindings(rf, ctx) { if (rf & 2) {
            i0.ɵɵattribute("aria-orientation", ctx.layout)("data-pc-name", "divider")("role", "separator");
            i0.ɵɵstyleMap(ctx.inlineStyles);
            i0.ɵɵclassMap(ctx.hostClass);
            i0.ɵɵstyleProp("justify-content", ctx.layout === "horizontal" ? ctx.align === "center" || ctx.align === undefined ? "center" : ctx.align === "left" ? "flex-start" : ctx.align === "right" ? "flex-end" : null : null)("align-items", ctx.layout === "vertical" ? ctx.align === "center" || ctx.align === undefined ? "center" : ctx.align === "top" ? "flex-start" : ctx.align === "bottom" ? "flex-end" : null : null);
            i0.ɵɵclassProp("p-divider", true)("p-component", true)("p-divider-horizontal", ctx.layout === "horizontal")("p-divider-vertical", ctx.layout === "vertical")("p-divider-solid", ctx.type === "solid")("p-divider-dashed", ctx.type === "dashed")("p-divider-dotted", ctx.type === "dotted")("p-divider-left", ctx.layout === "horizontal" && (!ctx.align || ctx.align === "left"))("p-divider-center", ctx.layout === "horizontal" && ctx.align === "center" || ctx.layout === "vertical" && (!ctx.align || ctx.align === "center"))("p-divider-right", ctx.layout === "horizontal" && ctx.align === "right")("p-divider-top", ctx.layout === "vertical" && ctx.align === "top")("p-divider-bottom", ctx.layout === "vertical" && ctx.align === "bottom");
        } }, inputs: { style: "style", styleClass: "styleClass", layout: "layout", type: "type", align: "align" }, standalone: true, features: [i0.ɵɵProvidersFeature([DividerStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, "p-divider-content"]], template: function Divider_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵelementStart(0, "div", 0);
            i0.ɵɵprojection(1);
            i0.ɵɵelementEnd();
        } }, dependencies: [CommonModule, SharedModule], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(Divider, [{
        type: Component,
        args: [{
                selector: 'p-divider',
                standalone: true,
                imports: [CommonModule, SharedModule],
                template: `
        <div class="p-divider-content">
            <ng-content></ng-content>
        </div>
    `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                host: {
                    '[class.p-divider]': 'true',
                    '[class.p-component]': 'true',
                    '[class.p-divider-horizontal]': 'layout === "horizontal"',
                    '[class.p-divider-vertical]': 'layout === "vertical"',
                    '[class.p-divider-solid]': 'type === "solid"',
                    '[class.p-divider-dashed]': 'type === "dashed"',
                    '[class.p-divider-dotted]': 'type === "dotted"',
                    '[class.p-divider-left]': 'layout === "horizontal" && (!align || align === "left")',
                    '[class.p-divider-center]': '(layout === "horizontal" && align === "center") || (layout === "vertical" && (!align || align === "center"))',
                    '[class.p-divider-right]': 'layout === "horizontal" && align === "right"',
                    '[class.p-divider-top]': 'layout === "vertical" && align === "top"',
                    '[class.p-divider-bottom]': 'layout === "vertical" && align === "bottom"',
                    '[style]': 'inlineStyles',
                    '[attr.aria-orientation]': 'layout',
                    '[attr.data-pc-name]': "'divider'",
                    '[attr.role]': '"separator"',
                    '[style.justifyContent]': 'layout === "horizontal" ? (align === "center" || align === undefined ? "center" : (align === "left" ? "flex-start" : (align === "right" ? "flex-end" : null))) : null',
                    '[style.alignItems]': 'layout === "vertical" ? (align === "center" || align === undefined ? "center" : (align === "top" ? "flex-start" : (align === "bottom" ? "flex-end" : null))) : null'
                },
                providers: [DividerStyle]
            }]
    }], null, { style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], layout: [{
            type: Input
        }], type: [{
            type: Input
        }], align: [{
            type: Input
        }], hostClass: [{
            type: HostBinding,
            args: ['class']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(Divider, { className: "Divider" }); })();
export class DividerModule {
    static ɵfac = function DividerModule_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || DividerModule)(); };
    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: DividerModule });
    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [Divider] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DividerModule, [{
        type: NgModule,
        args: [{
                imports: [Divider],
                exports: [Divider]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(DividerModule, { imports: [Divider], exports: [Divider] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGl2aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9kaXZpZGVyL2RpdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7O0FBRXBEOzs7R0FHRztBQWtDSCxNQUFNLE9BQU8sT0FBUSxTQUFRLGFBQWE7SUFDdEM7OztPQUdHO0lBQ00sS0FBSyxDQUE4QztJQUM1RDs7O09BR0c7SUFDTSxVQUFVLENBQXFCO0lBQ3hDOzs7T0FHRztJQUNNLE1BQU0sR0FBMEMsWUFBWSxDQUFDO0lBQ3RFOzs7T0FHRztJQUNNLElBQUksR0FBOEMsT0FBTyxDQUFDO0lBQ25FOzs7T0FHRztJQUNNLEtBQUssQ0FBd0U7SUFFdEYsZUFBZSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUV2QyxJQUEwQixTQUFTO1FBQy9CLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztJQUMzQixDQUFDO3lNQS9CUSxPQUFPLHlCQUFQLE9BQU87NkRBQVAsT0FBTzsyRUFBUCxTQUFTLFVBQVQsV0FBVztZQUFYLCtCQUFPO1lBQVAsNEJBQU87WUFBUCxpREFBVyxZQUFZLGlCQUMvQixRQUNBLGtCQUFjLFNBQVMsR0FBRyxRQUM5QixpQkFBYyxNQUNkLEdBQUcsWUFDSSxpQkFBYyxPQUFPLEdBQUcsVUFBVSxHQUFHLElBQUksR0FBTSxJQUFJLENBTHZDLCtCQUFJLFVBQVUsaUJBQy9CLFFBQ0Esa0JBQWMsU0FBUyxHQUFHLFFBQVEsaUJBQ3hCLEtBQUssR0FDakIsWUFDSSxpQkFBYyxRQUFRLEdBQUcsVUFBVSxHQUFHLElBQUksR0FBTSxJQUFJLENBTHJDO1lBQVAsNEJBQUEsSUFBSSxDQUFHLGdCQUFQLElBQUksQ0FBRyx3Q0FBSSxZQUFZLENBQWhCLHNDQUFJLFVBQVUsQ0FBZCxpQ0FBRSxPQUFPLENBQVQsa0NBQUUsUUFBUSxDQUFWLGtDQUFFLFFBQVEsQ0FBVixrQ0FBSSxZQUFZLGlDQUU1QixNQUFNLEVBRk0sb0NBQUssWUFBWSxrQkFDL0IsUUFDQSxtQkFBaUIsVUFBVSxpQ0FFakMsUUFDQSxFQUxvQixtQ0FBSSxZQUFZLGtCQUMvQixPQUNELENBRmdCLGlDQUFJLFVBQVUsa0JBQy9CLEtBQ0gsQ0FGb0Isb0NBQUksVUFBVSxrQkFDL0IsUUFDQSxDQUZpQjtzS0FGTCxDQUFDLFlBQVksQ0FBQzs7WUExQnJCLDhCQUErQjtZQUMzQixrQkFBeUI7WUFDN0IsaUJBQU07NEJBSkEsWUFBWSxFQUFFLFlBQVk7O2lGQThCM0IsT0FBTztjQWpDbkIsU0FBUztlQUFDO2dCQUNQLFFBQVEsRUFBRSxXQUFXO2dCQUNyQixVQUFVLEVBQUUsSUFBSTtnQkFDaEIsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQztnQkFDckMsUUFBUSxFQUFFOzs7O0tBSVQ7Z0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07Z0JBQy9DLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2dCQUNyQyxJQUFJLEVBQUU7b0JBQ0YsbUJBQW1CLEVBQUUsTUFBTTtvQkFDM0IscUJBQXFCLEVBQUUsTUFBTTtvQkFDN0IsOEJBQThCLEVBQUUseUJBQXlCO29CQUN6RCw0QkFBNEIsRUFBRSx1QkFBdUI7b0JBQ3JELHlCQUF5QixFQUFFLGtCQUFrQjtvQkFDN0MsMEJBQTBCLEVBQUUsbUJBQW1CO29CQUMvQywwQkFBMEIsRUFBRSxtQkFBbUI7b0JBQy9DLHdCQUF3QixFQUFFLHlEQUF5RDtvQkFDbkYsMEJBQTBCLEVBQUUsOEdBQThHO29CQUMxSSx5QkFBeUIsRUFBRSw4Q0FBOEM7b0JBQ3pFLHVCQUF1QixFQUFFLDBDQUEwQztvQkFDbkUsMEJBQTBCLEVBQUUsNkNBQTZDO29CQUN6RSxTQUFTLEVBQUUsY0FBYztvQkFDekIseUJBQXlCLEVBQUUsUUFBUTtvQkFDbkMscUJBQXFCLEVBQUUsV0FBVztvQkFDbEMsYUFBYSxFQUFFLGFBQWE7b0JBQzVCLHdCQUF3QixFQUFFLHVLQUF1SztvQkFDak0sb0JBQW9CLEVBQUUscUtBQXFLO2lCQUM5TDtnQkFDRCxTQUFTLEVBQUUsQ0FBQyxZQUFZLENBQUM7YUFDNUI7Z0JBTVksS0FBSztrQkFBYixLQUFLO1lBS0csVUFBVTtrQkFBbEIsS0FBSztZQUtHLE1BQU07a0JBQWQsS0FBSztZQUtHLElBQUk7a0JBQVosS0FBSztZQUtHLEtBQUs7a0JBQWIsS0FBSztZQUlvQixTQUFTO2tCQUFsQyxXQUFXO21CQUFDLE9BQU87O2tGQTdCWCxPQUFPO0FBc0NwQixNQUFNLE9BQU8sYUFBYTt1R0FBYixhQUFhOzREQUFiLGFBQWE7Z0VBSFosT0FBTzs7aUZBR1IsYUFBYTtjQUp6QixRQUFRO2VBQUM7Z0JBQ04sT0FBTyxFQUFFLENBQUMsT0FBTyxDQUFDO2dCQUNsQixPQUFPLEVBQUUsQ0FBQyxPQUFPLENBQUM7YUFDckI7O3dGQUNZLGFBQWEsY0F0Q2IsT0FBTyxhQUFQLE9BQU8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIGluamVjdCwgSW5wdXQsIE5nTW9kdWxlLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2hhcmVkTW9kdWxlIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgQmFzZUNvbXBvbmVudCB9IGZyb20gJ3ByaW1lbmcvYmFzZWNvbXBvbmVudCc7XG5pbXBvcnQgeyBEaXZpZGVyU3R5bGUgfSBmcm9tICcuL3N0eWxlL2RpdmlkZXJzdHlsZSc7XG5cbi8qKlxuICogRGl2aWRlciBpcyB1c2VkIHRvIHNlcGFyYXRlIGNvbnRlbnRzLlxuICogQGdyb3VwIENvbXBvbmVudHNcbiAqL1xuQENvbXBvbmVudCh7XG4gICAgc2VsZWN0b3I6ICdwLWRpdmlkZXInLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgU2hhcmVkTW9kdWxlXSxcbiAgICB0ZW1wbGF0ZTogYFxuICAgICAgICA8ZGl2IGNsYXNzPVwicC1kaXZpZGVyLWNvbnRlbnRcIj5cbiAgICAgICAgICAgIDxuZy1jb250ZW50PjwvbmctY29udGVudD5cbiAgICAgICAgPC9kaXY+XG4gICAgYCxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxuICAgIGhvc3Q6IHtcbiAgICAgICAgJ1tjbGFzcy5wLWRpdmlkZXJdJzogJ3RydWUnLFxuICAgICAgICAnW2NsYXNzLnAtY29tcG9uZW50XSc6ICd0cnVlJyxcbiAgICAgICAgJ1tjbGFzcy5wLWRpdmlkZXItaG9yaXpvbnRhbF0nOiAnbGF5b3V0ID09PSBcImhvcml6b250YWxcIicsXG4gICAgICAgICdbY2xhc3MucC1kaXZpZGVyLXZlcnRpY2FsXSc6ICdsYXlvdXQgPT09IFwidmVydGljYWxcIicsXG4gICAgICAgICdbY2xhc3MucC1kaXZpZGVyLXNvbGlkXSc6ICd0eXBlID09PSBcInNvbGlkXCInLFxuICAgICAgICAnW2NsYXNzLnAtZGl2aWRlci1kYXNoZWRdJzogJ3R5cGUgPT09IFwiZGFzaGVkXCInLFxuICAgICAgICAnW2NsYXNzLnAtZGl2aWRlci1kb3R0ZWRdJzogJ3R5cGUgPT09IFwiZG90dGVkXCInLFxuICAgICAgICAnW2NsYXNzLnAtZGl2aWRlci1sZWZ0XSc6ICdsYXlvdXQgPT09IFwiaG9yaXpvbnRhbFwiICYmICghYWxpZ24gfHwgYWxpZ24gPT09IFwibGVmdFwiKScsXG4gICAgICAgICdbY2xhc3MucC1kaXZpZGVyLWNlbnRlcl0nOiAnKGxheW91dCA9PT0gXCJob3Jpem9udGFsXCIgJiYgYWxpZ24gPT09IFwiY2VudGVyXCIpIHx8IChsYXlvdXQgPT09IFwidmVydGljYWxcIiAmJiAoIWFsaWduIHx8IGFsaWduID09PSBcImNlbnRlclwiKSknLFxuICAgICAgICAnW2NsYXNzLnAtZGl2aWRlci1yaWdodF0nOiAnbGF5b3V0ID09PSBcImhvcml6b250YWxcIiAmJiBhbGlnbiA9PT0gXCJyaWdodFwiJyxcbiAgICAgICAgJ1tjbGFzcy5wLWRpdmlkZXItdG9wXSc6ICdsYXlvdXQgPT09IFwidmVydGljYWxcIiAmJiBhbGlnbiA9PT0gXCJ0b3BcIicsXG4gICAgICAgICdbY2xhc3MucC1kaXZpZGVyLWJvdHRvbV0nOiAnbGF5b3V0ID09PSBcInZlcnRpY2FsXCIgJiYgYWxpZ24gPT09IFwiYm90dG9tXCInLFxuICAgICAgICAnW3N0eWxlXSc6ICdpbmxpbmVTdHlsZXMnLFxuICAgICAgICAnW2F0dHIuYXJpYS1vcmllbnRhdGlvbl0nOiAnbGF5b3V0JyxcbiAgICAgICAgJ1thdHRyLmRhdGEtcGMtbmFtZV0nOiBcIidkaXZpZGVyJ1wiLFxuICAgICAgICAnW2F0dHIucm9sZV0nOiAnXCJzZXBhcmF0b3JcIicsXG4gICAgICAgICdbc3R5bGUuanVzdGlmeUNvbnRlbnRdJzogJ2xheW91dCA9PT0gXCJob3Jpem9udGFsXCIgPyAoYWxpZ24gPT09IFwiY2VudGVyXCIgfHwgYWxpZ24gPT09IHVuZGVmaW5lZCA/IFwiY2VudGVyXCIgOiAoYWxpZ24gPT09IFwibGVmdFwiID8gXCJmbGV4LXN0YXJ0XCIgOiAoYWxpZ24gPT09IFwicmlnaHRcIiA/IFwiZmxleC1lbmRcIiA6IG51bGwpKSkgOiBudWxsJyxcbiAgICAgICAgJ1tzdHlsZS5hbGlnbkl0ZW1zXSc6ICdsYXlvdXQgPT09IFwidmVydGljYWxcIiA/IChhbGlnbiA9PT0gXCJjZW50ZXJcIiB8fCBhbGlnbiA9PT0gdW5kZWZpbmVkID8gXCJjZW50ZXJcIiA6IChhbGlnbiA9PT0gXCJ0b3BcIiA/IFwiZmxleC1zdGFydFwiIDogKGFsaWduID09PSBcImJvdHRvbVwiID8gXCJmbGV4LWVuZFwiIDogbnVsbCkpKSA6IG51bGwnXG4gICAgfSxcbiAgICBwcm92aWRlcnM6IFtEaXZpZGVyU3R5bGVdXG59KVxuZXhwb3J0IGNsYXNzIERpdmlkZXIgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcbiAgICAvKipcbiAgICAgKiBJbmxpbmUgc3R5bGUgb2YgdGhlIGNvbXBvbmVudC5cbiAgICAgKiBAZ3JvdXAgUHJvcHNcbiAgICAgKi9cbiAgICBASW5wdXQoKSBzdHlsZTogeyBba2xhc3M6IHN0cmluZ106IGFueSB9IHwgbnVsbCB8IHVuZGVmaW5lZDtcbiAgICAvKipcbiAgICAgKiBTdHlsZSBjbGFzcyBvZiB0aGUgY29tcG9uZW50LlxuICAgICAqIEBncm91cCBQcm9wc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIHN0eWxlQ2xhc3M6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgICAvKipcbiAgICAgKiBTcGVjaWZpZXMgdGhlIG9yaWVudGF0aW9uLlxuICAgICAqIEBncm91cCBQcm9wc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIGxheW91dDogJ2hvcml6b250YWwnIHwgJ3ZlcnRpY2FsJyB8IHVuZGVmaW5lZCA9ICdob3Jpem9udGFsJztcbiAgICAvKipcbiAgICAgKiBCb3JkZXIgc3R5bGUgdHlwZS5cbiAgICAgKiBAZ3JvdXAgUHJvcHNcbiAgICAgKi9cbiAgICBASW5wdXQoKSB0eXBlOiAnc29saWQnIHwgJ2Rhc2hlZCcgfCAnZG90dGVkJyB8IHVuZGVmaW5lZCA9ICdzb2xpZCc7XG4gICAgLyoqXG4gICAgICogQWxpZ25tZW50IG9mIHRoZSBjb250ZW50LlxuICAgICAqIEBncm91cCBQcm9wc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIGFsaWduOiAnbGVmdCcgfCAnY2VudGVyJyB8ICdyaWdodCcgfCAndG9wJyB8ICdjZW50ZXInIHwgJ2JvdHRvbScgfCB1bmRlZmluZWQ7XG5cbiAgICBfY29tcG9uZW50U3R5bGUgPSBpbmplY3QoRGl2aWRlclN0eWxlKTtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MnKSBnZXQgaG9zdENsYXNzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdHlsZUNsYXNzO1xuICAgIH1cbn1cblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbRGl2aWRlcl0sXG4gICAgZXhwb3J0czogW0RpdmlkZXJdXG59KVxuZXhwb3J0IGNsYXNzIERpdmlkZXJNb2R1bGUge31cbiJdfQ==