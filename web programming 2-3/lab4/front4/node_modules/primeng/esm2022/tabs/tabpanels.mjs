import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';
import { BaseComponent } from 'primeng/basecomponent';
import * as i0 from "@angular/core";
const _c0 = ["*"];
/**
 * TabPanels is a helper component for Tabs component.
 * @group Components
 */
export class TabPanels extends BaseComponent {
    static ɵfac = /*@__PURE__*/ (() => { let ɵTabPanels_BaseFactory; return function TabPanels_Factory(__ngFactoryType__) { return (ɵTabPanels_BaseFactory || (ɵTabPanels_BaseFactory = i0.ɵɵgetInheritedFactory(TabPanels)))(__ngFactoryType__ || TabPanels); }; })();
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TabPanels, selectors: [["p-tabpanels"]], hostVars: 6, hostBindings: function TabPanels_HostBindings(rf, ctx) { if (rf & 2) {
            i0.ɵɵattribute("data-pc-name", "tabpanels")("role", "presentation");
            i0.ɵɵclassProp("p-tabpanels", true)("p-component", true);
        } }, standalone: true, features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function TabPanels_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵprojection(0);
        } }, dependencies: [CommonModule], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TabPanels, [{
        type: Component,
        args: [{
                selector: 'p-tabpanels',
                standalone: true,
                imports: [CommonModule],
                template: ` <ng-content></ng-content>`,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                host: {
                    '[class.p-tabpanels]': 'true',
                    '[class.p-component]': 'true',
                    '[attr.data-pc-name]': '"tabpanels"',
                    '[attr.role]': '"presentation"'
                }
            }]
    }], null, null); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(TabPanels, { className: "TabPanels" }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFicGFuZWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3RhYnMvdGFicGFuZWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7O0FBRXREOzs7R0FHRztBQWVILE1BQU0sT0FBTyxTQUFVLFNBQVEsYUFBYTtpTkFBL0IsU0FBUyx5QkFBVCxTQUFTOzZEQUFULFNBQVM7MkNBQVQsV0FBVyxVQUFYLGNBQWM7WUFBZCw4QkFBQSxJQUFJLENBQUssZ0JBQVQsSUFBSSxDQUFLOzs7WUFWTixrQkFBeUI7NEJBRDNCLFlBQVk7O2lGQVdiLFNBQVM7Y0FkckIsU0FBUztlQUFDO2dCQUNQLFFBQVEsRUFBRSxhQUFhO2dCQUN2QixVQUFVLEVBQUUsSUFBSTtnQkFDaEIsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO2dCQUN2QixRQUFRLEVBQUUsNEJBQTRCO2dCQUN0QyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7Z0JBQ3JDLElBQUksRUFBRTtvQkFDRixxQkFBcUIsRUFBRSxNQUFNO29CQUM3QixxQkFBcUIsRUFBRSxNQUFNO29CQUM3QixxQkFBcUIsRUFBRSxhQUFhO29CQUNwQyxhQUFhLEVBQUUsZ0JBQWdCO2lCQUNsQzthQUNKOztrRkFDWSxTQUFTIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlQ29tcG9uZW50IH0gZnJvbSAncHJpbWVuZy9iYXNlY29tcG9uZW50JztcblxuLyoqXG4gKiBUYWJQYW5lbHMgaXMgYSBoZWxwZXIgY29tcG9uZW50IGZvciBUYWJzIGNvbXBvbmVudC5cbiAqIEBncm91cCBDb21wb25lbnRzXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAncC10YWJwYW5lbHMnLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gICAgdGVtcGxhdGU6IGAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmAsXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBob3N0OiB7XG4gICAgICAgICdbY2xhc3MucC10YWJwYW5lbHNdJzogJ3RydWUnLFxuICAgICAgICAnW2NsYXNzLnAtY29tcG9uZW50XSc6ICd0cnVlJyxcbiAgICAgICAgJ1thdHRyLmRhdGEtcGMtbmFtZV0nOiAnXCJ0YWJwYW5lbHNcIicsXG4gICAgICAgICdbYXR0ci5yb2xlXSc6ICdcInByZXNlbnRhdGlvblwiJ1xuICAgIH1cbn0pXG5leHBvcnQgY2xhc3MgVGFiUGFuZWxzIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7fVxuIl19