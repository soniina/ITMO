import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-tag {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background: ${dt('tag.primary.background')};
    color: ${dt('tag.primary.color')};
    font-size: ${dt('tag.font.size')};
    font-weight: ${dt('tag.font.weight')};
    padding: ${dt('tag.padding')};
    border-radius: ${dt('tag.border.radius')};
    gap: ${dt('tag.gap')};
}

.p-tag-icon {
    font-size: ${dt('tag.icon.size')};
    width: ${dt('tag.icon.size')};
    height:${dt('tag.icon.size')};
}

.p-tag-rounded {
    border-radius: ${dt('tag.rounded.border.radius')};
}

.p-tag-success {
    background: ${dt('tag.success.background')};
    color: ${dt('tag.success.color')};
}

.p-tag-info {
    background: ${dt('tag.info.background')};
    color: ${dt('tag.info.color')};
}

.p-tag-warn {
    background: ${dt('tag.warn.background')};
    color: ${dt('tag.warn.color')};
}

.p-tag-danger {
    background: ${dt('tag.danger.background')};
    color: ${dt('tag.danger.color')};
}

.p-tag-secondary {
    background: ${dt('tag.secondary.background')};
    color: ${dt('tag.secondary.color')};
}

.p-tag-contrast {
    background: ${dt('tag.contrast.background')};
    color: ${dt('tag.contrast.color')};
}
`;
const classes = {
    root: ({ props }) => [
        'p-tag p-component',
        {
            'p-tag-info': props.severity === 'info',
            'p-tag-success': props.severity === 'success',
            'p-tag-warn': props.severity === 'warn',
            'p-tag-danger': props.severity === 'danger',
            'p-tag-secondary': props.severity === 'secondary',
            'p-tag-contrast': props.severity === 'contrast',
            'p-tag-rounded': props.rounded
        }
    ],
    icon: 'p-tag-icon',
    label: 'p-tag-label'
};
export class TagStyle extends BaseStyle {
    name = 'tag';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵTagStyle_BaseFactory; return function TagStyle_Factory(__ngFactoryType__) { return (ɵTagStyle_BaseFactory || (ɵTagStyle_BaseFactory = i0.ɵɵgetInheritedFactory(TagStyle)))(__ngFactoryType__ || TagStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TagStyle, factory: TagStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TagStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * Tag component is used to categorize content.
 *
 * [Live Demo](https://www.primeng.org/tag)
 *
 * @module tagstyle
 *
 */
export var TagClasses;
(function (TagClasses) {
    /**
     * Class name of the root element
     */
    TagClasses["root"] = "p-tag";
    /**
     * Class name of the icon element
     */
    TagClasses["icon"] = "p-tag-icon";
    /**
     * Class name of the label element
     */
    TagClasses["label"] = "p-tag-label";
})(TagClasses || (TagClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnc3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdGFnL3N0eWxlL3RhZ3N0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7Ozs7a0JBS1IsRUFBRSxDQUFDLHdCQUF3QixDQUFDO2FBQ2pDLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztpQkFDbkIsRUFBRSxDQUFDLGVBQWUsQ0FBQzttQkFDakIsRUFBRSxDQUFDLGlCQUFpQixDQUFDO2VBQ3pCLEVBQUUsQ0FBQyxhQUFhLENBQUM7cUJBQ1gsRUFBRSxDQUFDLG1CQUFtQixDQUFDO1dBQ2pDLEVBQUUsQ0FBQyxTQUFTLENBQUM7Ozs7aUJBSVAsRUFBRSxDQUFDLGVBQWUsQ0FBQzthQUN2QixFQUFFLENBQUMsZUFBZSxDQUFDO2FBQ25CLEVBQUUsQ0FBQyxlQUFlLENBQUM7Ozs7cUJBSVgsRUFBRSxDQUFDLDJCQUEyQixDQUFDOzs7O2tCQUlsQyxFQUFFLENBQUMsd0JBQXdCLENBQUM7YUFDakMsRUFBRSxDQUFDLG1CQUFtQixDQUFDOzs7O2tCQUlsQixFQUFFLENBQUMscUJBQXFCLENBQUM7YUFDOUIsRUFBRSxDQUFDLGdCQUFnQixDQUFDOzs7O2tCQUlmLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQzthQUM5QixFQUFFLENBQUMsZ0JBQWdCLENBQUM7Ozs7a0JBSWYsRUFBRSxDQUFDLHVCQUF1QixDQUFDO2FBQ2hDLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQzs7OztrQkFJakIsRUFBRSxDQUFDLDBCQUEwQixDQUFDO2FBQ25DLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQzs7OztrQkFJcEIsRUFBRSxDQUFDLHlCQUF5QixDQUFDO2FBQ2xDLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQzs7Q0FFcEMsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFHO0lBQ1osSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUM7UUFDakIsbUJBQW1CO1FBQ25CO1lBQ0ksWUFBWSxFQUFFLEtBQUssQ0FBQyxRQUFRLEtBQUssTUFBTTtZQUN2QyxlQUFlLEVBQUUsS0FBSyxDQUFDLFFBQVEsS0FBSyxTQUFTO1lBQzdDLFlBQVksRUFBRSxLQUFLLENBQUMsUUFBUSxLQUFLLE1BQU07WUFDdkMsY0FBYyxFQUFFLEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUTtZQUMzQyxpQkFBaUIsRUFBRSxLQUFLLENBQUMsUUFBUSxLQUFLLFdBQVc7WUFDakQsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLFFBQVEsS0FBSyxVQUFVO1lBQy9DLGVBQWUsRUFBRSxLQUFLLENBQUMsT0FBTztTQUNqQztLQUNKO0lBQ0QsSUFBSSxFQUFFLFlBQVk7SUFDbEIsS0FBSyxFQUFFLGFBQWE7Q0FDdkIsQ0FBQztBQUdGLE1BQU0sT0FBTyxRQUFTLFNBQVEsU0FBUztJQUNuQyxJQUFJLEdBQUcsS0FBSyxDQUFDO0lBRWIsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUVkLE9BQU8sR0FBRyxPQUFPLENBQUM7Nk1BTFQsUUFBUSx5QkFBUixRQUFRO2dFQUFSLFFBQVEsV0FBUixRQUFROztpRkFBUixRQUFRO2NBRHBCLFVBQVU7O0FBU1g7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLENBQU4sSUFBWSxVQWFYO0FBYkQsV0FBWSxVQUFVO0lBQ2xCOztPQUVHO0lBQ0gsNEJBQWMsQ0FBQTtJQUNkOztPQUVHO0lBQ0gsaUNBQW1CLENBQUE7SUFDbkI7O09BRUc7SUFDSCxtQ0FBcUIsQ0FBQTtBQUN6QixDQUFDLEVBYlcsVUFBVSxLQUFWLFVBQVUsUUFhckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCYXNlU3R5bGUgfSBmcm9tICdwcmltZW5nL2Jhc2UnO1xuXG5jb25zdCB0aGVtZSA9ICh7IGR0IH0pID0+IGBcbi5wLXRhZyB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCd0YWcucHJpbWFyeS5iYWNrZ3JvdW5kJyl9O1xuICAgIGNvbG9yOiAke2R0KCd0YWcucHJpbWFyeS5jb2xvcicpfTtcbiAgICBmb250LXNpemU6ICR7ZHQoJ3RhZy5mb250LnNpemUnKX07XG4gICAgZm9udC13ZWlnaHQ6ICR7ZHQoJ3RhZy5mb250LndlaWdodCcpfTtcbiAgICBwYWRkaW5nOiAke2R0KCd0YWcucGFkZGluZycpfTtcbiAgICBib3JkZXItcmFkaXVzOiAke2R0KCd0YWcuYm9yZGVyLnJhZGl1cycpfTtcbiAgICBnYXA6ICR7ZHQoJ3RhZy5nYXAnKX07XG59XG5cbi5wLXRhZy1pY29uIHtcbiAgICBmb250LXNpemU6ICR7ZHQoJ3RhZy5pY29uLnNpemUnKX07XG4gICAgd2lkdGg6ICR7ZHQoJ3RhZy5pY29uLnNpemUnKX07XG4gICAgaGVpZ2h0OiR7ZHQoJ3RhZy5pY29uLnNpemUnKX07XG59XG5cbi5wLXRhZy1yb3VuZGVkIHtcbiAgICBib3JkZXItcmFkaXVzOiAke2R0KCd0YWcucm91bmRlZC5ib3JkZXIucmFkaXVzJyl9O1xufVxuXG4ucC10YWctc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZDogJHtkdCgndGFnLnN1Y2Nlc3MuYmFja2dyb3VuZCcpfTtcbiAgICBjb2xvcjogJHtkdCgndGFnLnN1Y2Nlc3MuY29sb3InKX07XG59XG5cbi5wLXRhZy1pbmZvIHtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCd0YWcuaW5mby5iYWNrZ3JvdW5kJyl9O1xuICAgIGNvbG9yOiAke2R0KCd0YWcuaW5mby5jb2xvcicpfTtcbn1cblxuLnAtdGFnLXdhcm4ge1xuICAgIGJhY2tncm91bmQ6ICR7ZHQoJ3RhZy53YXJuLmJhY2tncm91bmQnKX07XG4gICAgY29sb3I6ICR7ZHQoJ3RhZy53YXJuLmNvbG9yJyl9O1xufVxuXG4ucC10YWctZGFuZ2VyIHtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCd0YWcuZGFuZ2VyLmJhY2tncm91bmQnKX07XG4gICAgY29sb3I6ICR7ZHQoJ3RhZy5kYW5nZXIuY29sb3InKX07XG59XG5cbi5wLXRhZy1zZWNvbmRhcnkge1xuICAgIGJhY2tncm91bmQ6ICR7ZHQoJ3RhZy5zZWNvbmRhcnkuYmFja2dyb3VuZCcpfTtcbiAgICBjb2xvcjogJHtkdCgndGFnLnNlY29uZGFyeS5jb2xvcicpfTtcbn1cblxuLnAtdGFnLWNvbnRyYXN0IHtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCd0YWcuY29udHJhc3QuYmFja2dyb3VuZCcpfTtcbiAgICBjb2xvcjogJHtkdCgndGFnLmNvbnRyYXN0LmNvbG9yJyl9O1xufVxuYDtcblxuY29uc3QgY2xhc3NlcyA9IHtcbiAgICByb290OiAoeyBwcm9wcyB9KSA9PiBbXG4gICAgICAgICdwLXRhZyBwLWNvbXBvbmVudCcsXG4gICAgICAgIHtcbiAgICAgICAgICAgICdwLXRhZy1pbmZvJzogcHJvcHMuc2V2ZXJpdHkgPT09ICdpbmZvJyxcbiAgICAgICAgICAgICdwLXRhZy1zdWNjZXNzJzogcHJvcHMuc2V2ZXJpdHkgPT09ICdzdWNjZXNzJyxcbiAgICAgICAgICAgICdwLXRhZy13YXJuJzogcHJvcHMuc2V2ZXJpdHkgPT09ICd3YXJuJyxcbiAgICAgICAgICAgICdwLXRhZy1kYW5nZXInOiBwcm9wcy5zZXZlcml0eSA9PT0gJ2RhbmdlcicsXG4gICAgICAgICAgICAncC10YWctc2Vjb25kYXJ5JzogcHJvcHMuc2V2ZXJpdHkgPT09ICdzZWNvbmRhcnknLFxuICAgICAgICAgICAgJ3AtdGFnLWNvbnRyYXN0JzogcHJvcHMuc2V2ZXJpdHkgPT09ICdjb250cmFzdCcsXG4gICAgICAgICAgICAncC10YWctcm91bmRlZCc6IHByb3BzLnJvdW5kZWRcbiAgICAgICAgfVxuICAgIF0sXG4gICAgaWNvbjogJ3AtdGFnLWljb24nLFxuICAgIGxhYmVsOiAncC10YWctbGFiZWwnXG59O1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVGFnU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge1xuICAgIG5hbWUgPSAndGFnJztcblxuICAgIHRoZW1lID0gdGhlbWU7XG5cbiAgICBjbGFzc2VzID0gY2xhc3Nlcztcbn1cblxuLyoqXG4gKlxuICogVGFnIGNvbXBvbmVudCBpcyB1c2VkIHRvIGNhdGVnb3JpemUgY29udGVudC5cbiAqXG4gKiBbTGl2ZSBEZW1vXShodHRwczovL3d3dy5wcmltZW5nLm9yZy90YWcpXG4gKlxuICogQG1vZHVsZSB0YWdzdHlsZVxuICpcbiAqL1xuZXhwb3J0IGVudW0gVGFnQ2xhc3NlcyB7XG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgcm9vdCBlbGVtZW50XG4gICAgICovXG4gICAgcm9vdCA9ICdwLXRhZycsXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgaWNvbiBlbGVtZW50XG4gICAgICovXG4gICAgaWNvbiA9ICdwLXRhZy1pY29uJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBsYWJlbCBlbGVtZW50XG4gICAgICovXG4gICAgbGFiZWwgPSAncC10YWctbGFiZWwnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFnU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge31cbiJdfQ==