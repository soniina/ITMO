import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `

.p-drawer {
    display: flex;
    flex-direction: column;
    pointer-events: auto;
    transform: translate3d(0px, 0px, 0px);
    position: relative;
    transition: transform 0.3s;
    background: ${dt('drawer.background')};
    color: ${dt('drawer.color')};
    border: 1px solid ${dt('drawer.border.color')};
    box-shadow: ${dt('drawer.shadow')};
}

.p-drawer-content {
    overflow-y: auto;
    flex-grow: 1;
    padding: ${dt('drawer.content.padding')};
}

.p-drawer-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-shrink: 0;
    padding: ${dt('drawer.header.padding')};
}

.p-drawer-footer {
    padding: ${dt('drawer.header.padding')};
}

.p-drawer-title {
    font-weight: ${dt('drawer.title.font.weight')};
    font-size: ${dt('drawer.title.font.size')};
}

.p-drawer-full .p-drawer {
    transition: none;
    transform: none;
    width: 100vw !important;
    height: 100vh !important;
    max-height: 100%;
    top: 0px !important;
    left: 0px !important;
    border-width: 1px;
}

/* PrimeVue animations

.p-drawer-left .p-drawer-enter-from,
.p-drawer-left .p-drawer-leave-to {
    transform: translateX(-100%);
}

.p-drawer-right .p-drawer-enter-from,
.p-drawer-right .p-drawer-leave-to {
    transform: translateX(100%);
}

.p-drawer-top .p-drawer-enter-from,
.p-drawer-top .p-drawer-leave-to {
    transform: translateY(-100%);
}

.p-drawer-bottom .p-drawer-enter-from,
.p-drawer-bottom .p-drawer-leave-to {
    transform: translateY(100%);
}

.p-drawer-full .p-drawer-enter-from,
.p-drawer-full .p-drawer-leave-to {
    opacity: 0;
}

.p-drawer-full .p-drawer-enter-active,
.p-drawer-full .p-drawer-leave-active {
    transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);
}
*/

.p-drawer-left .p-drawer {
    align-self: start;
    width: 20rem;
    height: 100%;
    border-right-width: 1px;
}

.p-drawer-right .p-drawer {
    align-self: end;
    width: 20rem;
    height: 100%;
    border-left-width: 1px;
}

.p-drawer-top .p-drawer {

    height: 10rem;
    width: 100%;
    border-bottom-width: 1px;
}

.p-drawer-bottom .p-drawer {
    height: 10rem;
    width: 100%;
    border-top-width: 1px;
}

.p-drawer-left .p-drawer-content,
.p-drawer-right .p-drawer-content,
.p-drawer-top .p-drawer-content,
.p-drawer-bottom .p-drawer-content {
    width: 100%;
    height: 100%;
}

.p-drawer-open {
    display: flex;
}

.p-drawer-top {
    justify-content: flex-start;
}

.p-drawer-bottom {
    justify-content: flex-end;
}
`;
const inlineStyles = {
    mask: ({ instance }) => ({
        position: 'fixed',
        height: '100%',
        width: '100%',
        left: 0,
        top: 0,
        display: 'flex',
        flexDirection: 'column',
        alignItems: instance.position === 'top' ? 'flex-start' : instance.position === 'bottom' ? 'flex-end' : 'center'
    })
};
const classes = {
    mask: ({ instance }) => ({
        'p-drawer-mask': true,
        'p-overlay-mask p-overlay-mask-enter': instance.modal,
        'p-drawer-open': instance.containerVisible,
        'p-drawer-full': instance.fullScreen,
        [`p-drawer-${instance.position}`]: !!instance.position
    }),
    root: ({ instance }) => ({
        'p-drawer p-component': true,
        'p-drawer-full': instance.fullScreen
    }),
    header: 'p-drawer-header',
    title: 'p-drawer-title',
    pcCloseButton: 'p-drawer-close-button',
    content: 'p-drawer-content',
    footer: 'p-drawer-footer'
};
export class DrawerStyle extends BaseStyle {
    name = 'drawer';
    theme = theme;
    classes = classes;
    inlineStyles = inlineStyles;
    static ɵfac = /*@__PURE__*/ (() => { let ɵDrawerStyle_BaseFactory; return function DrawerStyle_Factory(__ngFactoryType__) { return (ɵDrawerStyle_BaseFactory || (ɵDrawerStyle_BaseFactory = i0.ɵɵgetInheritedFactory(DrawerStyle)))(__ngFactoryType__ || DrawerStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DrawerStyle, factory: DrawerStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DrawerStyle, [{
        type: Injectable
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJhd2Vyc3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvc2lkZWJhci9zdHlsZS9kcmF3ZXJzdHlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7O0FBRXpDLE1BQU0sS0FBSyxHQUFHLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLENBQUM7Ozs7Ozs7OztrQkFTUixFQUFFLENBQUMsbUJBQW1CLENBQUM7YUFDNUIsRUFBRSxDQUFDLGNBQWMsQ0FBQzt3QkFDUCxFQUFFLENBQUMscUJBQXFCLENBQUM7a0JBQy9CLEVBQUUsQ0FBQyxlQUFlLENBQUM7Ozs7OztlQU10QixFQUFFLENBQUMsd0JBQXdCLENBQUM7Ozs7Ozs7O2VBUTVCLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQzs7OztlQUkzQixFQUFFLENBQUMsdUJBQXVCLENBQUM7Ozs7bUJBSXZCLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztpQkFDaEMsRUFBRSxDQUFDLHdCQUF3QixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0E2RjVDLENBQUM7QUFFRixNQUFNLFlBQVksR0FBRztJQUNqQixJQUFJLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ3JCLFFBQVEsRUFBRSxPQUFPO1FBQ2pCLE1BQU0sRUFBRSxNQUFNO1FBQ2QsS0FBSyxFQUFFLE1BQU07UUFDYixJQUFJLEVBQUUsQ0FBQztRQUNQLEdBQUcsRUFBRSxDQUFDO1FBQ04sT0FBTyxFQUFFLE1BQU07UUFDZixhQUFhLEVBQUUsUUFBUTtRQUN2QixVQUFVLEVBQUUsUUFBUSxDQUFDLFFBQVEsS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsUUFBUTtLQUNsSCxDQUFDO0NBQ0wsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFHO0lBQ1osSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNyQixlQUFlLEVBQUUsSUFBSTtRQUNyQixxQ0FBcUMsRUFBRSxRQUFRLENBQUMsS0FBSztRQUNyRCxlQUFlLEVBQUUsUUFBUSxDQUFDLGdCQUFnQjtRQUMxQyxlQUFlLEVBQUUsUUFBUSxDQUFDLFVBQVU7UUFDcEMsQ0FBQyxZQUFZLFFBQVEsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUTtLQUN6RCxDQUFDO0lBQ0YsSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNyQixzQkFBc0IsRUFBRSxJQUFJO1FBQzVCLGVBQWUsRUFBRSxRQUFRLENBQUMsVUFBVTtLQUN2QyxDQUFDO0lBQ0YsTUFBTSxFQUFFLGlCQUFpQjtJQUN6QixLQUFLLEVBQUUsZ0JBQWdCO0lBQ3ZCLGFBQWEsRUFBRSx1QkFBdUI7SUFDdEMsT0FBTyxFQUFFLGtCQUFrQjtJQUMzQixNQUFNLEVBQUUsaUJBQWlCO0NBQzVCLENBQUM7QUFHRixNQUFNLE9BQU8sV0FBWSxTQUFRLFNBQVM7SUFDdEMsSUFBSSxHQUFHLFFBQVEsQ0FBQztJQUVoQixLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUVsQixZQUFZLEdBQUcsWUFBWSxDQUFDO3lOQVBuQixXQUFXLHlCQUFYLFdBQVc7Z0VBQVgsV0FBVyxXQUFYLFdBQVc7O2lGQUFYLFdBQVc7Y0FEdkIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTdHlsZSB9IGZyb20gJ3ByaW1lbmcvYmFzZSc7XG5cbmNvbnN0IHRoZW1lID0gKHsgZHQgfSkgPT4gYFxuXG4ucC1kcmF3ZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwb2ludGVyLWV2ZW50czogYXV0bztcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcztcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCdkcmF3ZXIuYmFja2dyb3VuZCcpfTtcbiAgICBjb2xvcjogJHtkdCgnZHJhd2VyLmNvbG9yJyl9O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICR7ZHQoJ2RyYXdlci5ib3JkZXIuY29sb3InKX07XG4gICAgYm94LXNoYWRvdzogJHtkdCgnZHJhd2VyLnNoYWRvdycpfTtcbn1cblxuLnAtZHJhd2VyLWNvbnRlbnQge1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgZmxleC1ncm93OiAxO1xuICAgIHBhZGRpbmc6ICR7ZHQoJ2RyYXdlci5jb250ZW50LnBhZGRpbmcnKX07XG59XG5cbi5wLWRyYXdlci1oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgZmxleC1zaHJpbms6IDA7XG4gICAgcGFkZGluZzogJHtkdCgnZHJhd2VyLmhlYWRlci5wYWRkaW5nJyl9O1xufVxuXG4ucC1kcmF3ZXItZm9vdGVyIHtcbiAgICBwYWRkaW5nOiAke2R0KCdkcmF3ZXIuaGVhZGVyLnBhZGRpbmcnKX07XG59XG5cbi5wLWRyYXdlci10aXRsZSB7XG4gICAgZm9udC13ZWlnaHQ6ICR7ZHQoJ2RyYXdlci50aXRsZS5mb250LndlaWdodCcpfTtcbiAgICBmb250LXNpemU6ICR7ZHQoJ2RyYXdlci50aXRsZS5mb250LnNpemUnKX07XG59XG5cbi5wLWRyYXdlci1mdWxsIC5wLWRyYXdlciB7XG4gICAgdHJhbnNpdGlvbjogbm9uZTtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gICAgd2lkdGg6IDEwMHZ3ICFpbXBvcnRhbnQ7XG4gICAgaGVpZ2h0OiAxMDB2aCAhaW1wb3J0YW50O1xuICAgIG1heC1oZWlnaHQ6IDEwMCU7XG4gICAgdG9wOiAwcHggIWltcG9ydGFudDtcbiAgICBsZWZ0OiAwcHggIWltcG9ydGFudDtcbiAgICBib3JkZXItd2lkdGg6IDFweDtcbn1cblxuLyogUHJpbWVWdWUgYW5pbWF0aW9uc1xuXG4ucC1kcmF3ZXItbGVmdCAucC1kcmF3ZXItZW50ZXItZnJvbSxcbi5wLWRyYXdlci1sZWZ0IC5wLWRyYXdlci1sZWF2ZS10byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDAlKTtcbn1cblxuLnAtZHJhd2VyLXJpZ2h0IC5wLWRyYXdlci1lbnRlci1mcm9tLFxuLnAtZHJhd2VyLXJpZ2h0IC5wLWRyYXdlci1sZWF2ZS10byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwMCUpO1xufVxuXG4ucC1kcmF3ZXItdG9wIC5wLWRyYXdlci1lbnRlci1mcm9tLFxuLnAtZHJhd2VyLXRvcCAucC1kcmF3ZXItbGVhdmUtdG8ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMTAwJSk7XG59XG5cbi5wLWRyYXdlci1ib3R0b20gLnAtZHJhd2VyLWVudGVyLWZyb20sXG4ucC1kcmF3ZXItYm90dG9tIC5wLWRyYXdlci1sZWF2ZS10byB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDEwMCUpO1xufVxuXG4ucC1kcmF3ZXItZnVsbCAucC1kcmF3ZXItZW50ZXItZnJvbSxcbi5wLWRyYXdlci1mdWxsIC5wLWRyYXdlci1sZWF2ZS10byB7XG4gICAgb3BhY2l0eTogMDtcbn1cblxuLnAtZHJhd2VyLWZ1bGwgLnAtZHJhd2VyLWVudGVyLWFjdGl2ZSxcbi5wLWRyYXdlci1mdWxsIC5wLWRyYXdlci1sZWF2ZS1hY3RpdmUge1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgNDAwbXMgY3ViaWMtYmV6aWVyKDAuMjUsIDAuOCwgMC4yNSwgMSk7XG59XG4qL1xuXG4ucC1kcmF3ZXItbGVmdCAucC1kcmF3ZXIge1xuICAgIGFsaWduLXNlbGY6IHN0YXJ0O1xuICAgIHdpZHRoOiAyMHJlbTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAxcHg7XG59XG5cbi5wLWRyYXdlci1yaWdodCAucC1kcmF3ZXIge1xuICAgIGFsaWduLXNlbGY6IGVuZDtcbiAgICB3aWR0aDogMjByZW07XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIGJvcmRlci1sZWZ0LXdpZHRoOiAxcHg7XG59XG5cbi5wLWRyYXdlci10b3AgLnAtZHJhd2VyIHtcblxuICAgIGhlaWdodDogMTByZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xufVxuXG4ucC1kcmF3ZXItYm90dG9tIC5wLWRyYXdlciB7XG4gICAgaGVpZ2h0OiAxMHJlbTtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3JkZXItdG9wLXdpZHRoOiAxcHg7XG59XG5cbi5wLWRyYXdlci1sZWZ0IC5wLWRyYXdlci1jb250ZW50LFxuLnAtZHJhd2VyLXJpZ2h0IC5wLWRyYXdlci1jb250ZW50LFxuLnAtZHJhd2VyLXRvcCAucC1kcmF3ZXItY29udGVudCxcbi5wLWRyYXdlci1ib3R0b20gLnAtZHJhd2VyLWNvbnRlbnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLnAtZHJhd2VyLW9wZW4ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG59XG5cbi5wLWRyYXdlci10b3Age1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbn1cblxuLnAtZHJhd2VyLWJvdHRvbSB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbn1cbmA7XG5cbmNvbnN0IGlubGluZVN0eWxlcyA9IHtcbiAgICBtYXNrOiAoeyBpbnN0YW5jZSB9KSA9PiAoe1xuICAgICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIGxlZnQ6IDAsXG4gICAgICAgIHRvcDogMCxcbiAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICBmbGV4RGlyZWN0aW9uOiAnY29sdW1uJyxcbiAgICAgICAgYWxpZ25JdGVtczogaW5zdGFuY2UucG9zaXRpb24gPT09ICd0b3AnID8gJ2ZsZXgtc3RhcnQnIDogaW5zdGFuY2UucG9zaXRpb24gPT09ICdib3R0b20nID8gJ2ZsZXgtZW5kJyA6ICdjZW50ZXInXG4gICAgfSlcbn07XG5cbmNvbnN0IGNsYXNzZXMgPSB7XG4gICAgbWFzazogKHsgaW5zdGFuY2UgfSkgPT4gKHtcbiAgICAgICAgJ3AtZHJhd2VyLW1hc2snOiB0cnVlLFxuICAgICAgICAncC1vdmVybGF5LW1hc2sgcC1vdmVybGF5LW1hc2stZW50ZXInOiBpbnN0YW5jZS5tb2RhbCxcbiAgICAgICAgJ3AtZHJhd2VyLW9wZW4nOiBpbnN0YW5jZS5jb250YWluZXJWaXNpYmxlLFxuICAgICAgICAncC1kcmF3ZXItZnVsbCc6IGluc3RhbmNlLmZ1bGxTY3JlZW4sXG4gICAgICAgIFtgcC1kcmF3ZXItJHtpbnN0YW5jZS5wb3NpdGlvbn1gXTogISFpbnN0YW5jZS5wb3NpdGlvblxuICAgIH0pLFxuICAgIHJvb3Q6ICh7IGluc3RhbmNlIH0pID0+ICh7XG4gICAgICAgICdwLWRyYXdlciBwLWNvbXBvbmVudCc6IHRydWUsXG4gICAgICAgICdwLWRyYXdlci1mdWxsJzogaW5zdGFuY2UuZnVsbFNjcmVlblxuICAgIH0pLFxuICAgIGhlYWRlcjogJ3AtZHJhd2VyLWhlYWRlcicsXG4gICAgdGl0bGU6ICdwLWRyYXdlci10aXRsZScsXG4gICAgcGNDbG9zZUJ1dHRvbjogJ3AtZHJhd2VyLWNsb3NlLWJ1dHRvbicsXG4gICAgY29udGVudDogJ3AtZHJhd2VyLWNvbnRlbnQnLFxuICAgIGZvb3RlcjogJ3AtZHJhd2VyLWZvb3Rlcidcbn07XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBEcmF3ZXJTdHlsZSBleHRlbmRzIEJhc2VTdHlsZSB7XG4gICAgbmFtZSA9ICdkcmF3ZXInO1xuXG4gICAgdGhlbWUgPSB0aGVtZTtcblxuICAgIGNsYXNzZXMgPSBjbGFzc2VzO1xuXG4gICAgaW5saW5lU3R5bGVzID0gaW5saW5lU3R5bGVzO1xufVxuIl19