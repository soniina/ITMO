import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-organizationchart-table {
    border-spacing: 0;
    border-collapse: separate;
    margin: 0 auto;
}

.p-organizationchart-table > tbody > tr > td {
    text-align: center;
    vertical-align: top;
    padding: 0 ${dt('organizationchart.gutter')};
}

.p-organizationchart-node {
    display: inline-block;
    position: relative;
    border: 1px solid ${dt('organizationchart.node.border.color')};
    background: ${dt('organizationchart.node.background')};
    color: ${dt('organizationchart.node.color')};
    padding: ${dt('organizationchart.node.padding')};
    border-radius: ${dt('organizationchart.node.border.radius')};
    transition: background ${dt('organizationchart.transition.duration')}, border-color ${dt('organizationchart.transition.duration')}, color ${dt('organizationchart.transition.duration')}, box-shadow ${dt('organizationchart.transition.duration')};
}

.p-organizationchart-node:has(.p-organizationchart-node-toggle-button) {
    padding: ${dt('organizationchart.node.toggleable.padding')};
}

.p-organizationchart-node.p-organizationchart-node-selectable:not(.p-organizationchart-node-selected):hover {
    background: ${dt('organizationchart.node.hover.background')};
    color: ${dt('organizationchart.node.hover.color')};
}

.p-organizationchart-node-selected {
    background: ${dt('organizationchart.node.selected.background')};
    color: ${dt('organizationchart.node.selected.color')};
}

.p-organizationchart-node-toggle-button {
    position: absolute;
    inset-block-end: calc(-1 * calc(${dt('organizationchart.node.toggle.button.size')} / 2));
    margin-inline-start: calc(-1 * calc(${dt('organizationchart.node.toggle.button.size')} / 2));
    z-index: 2;
    inset-inline-start: 50%;
    user-select: none;
    cursor: pointer;
    width: ${dt('organizationchart.node.toggle.button.size')};
    height: ${dt('organizationchart.node.toggle.button.size')};
    text-decoration: none;
    background: ${dt('organizationchart.node.toggle.button.background')};
    color: ${dt('organizationchart.node.toggle.button.color')};
    border-radius: ${dt('organizationchart.node.toggle.button.border.radius')};
    border: 1px solid ${dt('organizationchart.node.toggle.button.border.color')};
    display: inline-flex;
    justify-content: center;
    align-items: center;
    outline-color: transparent;
    transition: background ${dt('organizationchart.transition.duration')}, color ${dt('organizationchart.transition.duration')}, border-color ${dt('organizationchart.transition.duration')}, outline-color ${dt('organizationchart.transition.duration')}, box-shadow ${dt('organizationchart.transition.duration')};
}

.p-organizationchart-node-toggle-button:hover {
    background: ${dt('organizationchart.node.toggle.button.hover.background')};
    color: ${dt('organizationchart.node.toggle.button.hover.color')};
}

.p-organizationchart-node-toggle-button:focus-visible {
    box-shadow: ${dt('breadcrumb.item.focus.ring.shadow')};
    outline: ${dt('breadcrumb.item.focus.ring.width')} ${dt('breadcrumb.item.focus.ring.style')} ${dt('breadcrumb.item.focus.ring.color')};
    outline-offset: ${dt('breadcrumb.item.focus.ring.offset')};
}

.p-organizationchart-node-toggle-button-icon {
    position: relative;
    inset-block-start: 1px;
}

.p-organizationchart-connector-down {
    margin: 0 auto;
    height: ${dt('organizationchart.connector.height')};
    width: 1px;
    background: ${dt('organizationchart.connector.color')};
}

.p-organizationchart-connector-right {
    border-radius: 0;
}

.p-organizationchart-connector-left {
    border-radius: 0;
    border-inline-end: 1px solid ${dt('organizationchart.connector.color')};
}

.p-organizationchart-connector-top {
    border-block-start: 1px solid ${dt('organizationchart.connector.color')};
}

.p-organizationchart-node-selectable {
    cursor: pointer;
}

.p-organizationchart-connectors :nth-child(1 of .p-organizationchart-connector-left) {
    border-inline-end: 0 none;
}

.p-organizationchart-connectors :nth-last-child(1 of .p-organizationchart-connector-left) {
    border-start-end-radius: ${dt('organizationchart.connector.border.radius')};
}

.p-organizationchart-connectors :nth-child(1 of .p-organizationchart-connector-right) {
    border-inline-start: 1px solid ${dt('organizationchart.connector.color')};
    border-start-start-radius: ${dt('organizationchart.connector.border.radius')};
}
`;
const classes = {
    root: 'p-organizationchart p-component',
    table: 'p-organizationchart-table',
    node: ({ instance }) => ['p-organizationchart-node', { 'p-organizationchart-node-selectable': instance.selectable, 'p-organizationchart-node-selected': instance.selected }],
    nodeToggleButton: 'p-organizationchart-node-toggle-button',
    nodeToggleButtonIcon: 'p-organizationchart-node-toggle-button-icon',
    connectors: 'p-organizationchart-connectors',
    connectorDown: 'p-organizationchart-connector-down',
    connectorLeft: ({ index }) => ['p-organizationchart-connector-left', { 'p-organizationchart-connector-top': !(index === 0) }],
    connectorRight: ({ props, index }) => ['p-organizationchart-connector-right', { 'p-organizationchart-connector-top': !(index === props.node.children.length - 1) }],
    nodeChildren: 'p-organizationchart-node-children'
};
export class OrganizationChartStyle extends BaseStyle {
    name = 'organizationchart';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵOrganizationChartStyle_BaseFactory; return function OrganizationChartStyle_Factory(__ngFactoryType__) { return (ɵOrganizationChartStyle_BaseFactory || (ɵOrganizationChartStyle_BaseFactory = i0.ɵɵgetInheritedFactory(OrganizationChartStyle)))(__ngFactoryType__ || OrganizationChartStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: OrganizationChartStyle, factory: OrganizationChartStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationChartStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * OrganizationChart visualizes hierarchical organization data.
 *
 * [Live Demo](https://www.primeng.org/organizationchart)
 *
 * @module organizationchartstyle
 *
 */
export var OrganizationChartClasses;
(function (OrganizationChartClasses) {
    /**
     * Class name of the root element
     */
    OrganizationChartClasses["root"] = "p-organizationchart";
    /**
     * Class name of the table element
     */
    OrganizationChartClasses["table"] = "p-organizationchart-table";
    /**
     * Class name of the node element
     */
    OrganizationChartClasses["node"] = "p-organizationchart-node";
    /**
     * Class name of the node toggle button element
     */
    OrganizationChartClasses["nodeToggleButton"] = "p-organizationchart-node-toggle-button";
    /**
     * Class name of the node toggle button icon element
     */
    OrganizationChartClasses["nodeToggleButtonIcon"] = "p-organizationchart-node-toggle-button-icon";
    /**
     * Class name of the connectors element
     */
    OrganizationChartClasses["connectors"] = "p-organizationchart-connectors";
    /**
     * Class name of the connector down element
     */
    OrganizationChartClasses["connectorDown"] = "p-organizationchart-connector-down";
    /**
     * Class name of the connector left element
     */
    OrganizationChartClasses["connectorLeft"] = "p-organizationchart-connector-left";
    /**
     * Class name of the connector right element
     */
    OrganizationChartClasses["connectorRight"] = "p-organizationchart-connector-right";
    /**
     * Class name of the node children element
     */
    OrganizationChartClasses["nodeChildren"] = "p-organizationchart-node-children";
})(OrganizationChartClasses || (OrganizationChartClasses = {}));
//# sourceMappingURL=data:application/json;base64,