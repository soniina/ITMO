import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-dock {
    position: absolute;
    z-index: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
}

.p-dock-list-container {
    display: flex;
    pointer-events: auto;
    background: ${dt('dock.background')};
    border: 1px solid ${dt('dock.border.color')};
    padding: ${dt('dock.padding')};
    border-radius: ${dt('dock.border.radius')};
}

.p-dock-list {
    margin: 0;
    padding: 0;
    list-style: none;
    display: flex;
    align-items: center;
    justify-content: center;
    outline: 0 none;
}

.p-dock-item {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: transform;
    padding: ${dt('dock.item.padding')};
    border-radius: ${dt('dock.item.border.radius')};
}

.p-dock-item.p-focus {
    box-shadow: ${dt('dock.item.focus.ring.shadow')};
    outline: ${dt('dock.item.focus.ring.width')} ${dt('dock.item.focus.ring.style')} ${dt('dock.item.focus.ring.color')};
    outline-offset: ${dt('dock.item.focus.ring.offset')};
}

.p-dock-item-link {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    position: relative;
    overflow: hidden;
    cursor: default;
    width: ${dt('dock.item.size')};
    height: ${dt('dock.item.size')};
}

.p-dock-top {
    left: 0;
    top: 0;
    width: 100%;
}

.p-dock-top .p-dock-item {
    transform-origin: center top;
}

.p-dock-bottom {
    left: 0;
    bottom: 0;
    width: 100%;
}

.p-dock-bottom .p-dock-item {
    transform-origin: center bottom;
}

.p-dock-right {
    right: 0;
    top: 0;
    height: 100%;
}

.p-dock-right:dir(rtl) {
    right: auto;
    left: 0;
}

.p-dock-right .p-dock-item {
    transform-origin: center right;
}

.p-dock-right .p-dock-list {
    flex-direction: column;
}

.p-dock-left {
    left: 0;
    top: 0;
    height: 100%;
}

.p-dock-left:dir(rtl) {
    left: auto;
    right: 0;
}

.p-dock-left .p-dock-item {
    transform-origin: center left;
}

.p-dock-left .p-dock-list {
    flex-direction: column;
}

.p-dock-mobile.p-dock-top .p-dock-list-container,
.p-dock-mobile.p-dock-bottom .p-dock-list-container {
    overflow-x: auto;
    width: 100%;
}
.p-dock-mobile.p-dock-top .p-dock-list-container .p-dock-list,
.p-dock-mobile.p-dock-bottom .p-dock-list-container .p-dock-list {
    margin: 0 auto;
}
.p-dock-mobile.p-dock-left .p-dock-list-container,
.p-dock-mobile.p-dock-right .p-dock-list-container {
    overflow-y: auto;
    height: 100%;
}
.p-dock-mobile.p-dock-left .p-dock-list-container .p-dock-list,
.p-dock-mobile.p-dock-right .p-dock-list-container .p-dock-list {
    margin: auto 0;
}
.p-dock-mobile .p-dock-list .p-dock-item {
    transform: none;
    margin: 0;
}
`;
const classes = {
    root: ({ instance, props }) => [
        'p-dock p-component',
        `p-dock-${props.position}`,
        {
            'p-dock-mobile': instance.queryMatches
        }
    ],
    listContainer: 'p-dock-list-container',
    list: 'p-dock-list',
    item: ({ instance, processedItem, id }) => [
        'p-dock-item',
        {
            'p-focus': instance.isItemActive(id),
            'p-disabled': instance.disabled(processedItem)
        }
    ],
    itemContent: 'p-dock-item-content',
    itemLink: 'p-dock-item-link',
    itemIcon: 'p-dock-item-icon'
};
export class DockStyle extends BaseStyle {
    name = 'dock';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵDockStyle_BaseFactory; return function DockStyle_Factory(__ngFactoryType__) { return (ɵDockStyle_BaseFactory || (ɵDockStyle_BaseFactory = i0.ɵɵgetInheritedFactory(DockStyle)))(__ngFactoryType__ || DockStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DockStyle, factory: DockStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DockStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * Dock is a navigation component consisting of menuitems.
 *
 * [Live Demo](https://www.primeng.org/dock/)
 *
 * @module dockstyle
 *
 */
export var DockClasses;
(function (DockClasses) {
    /**
     * Class name of the root element
     */
    DockClasses["root"] = "p-dock";
    /**
     * Class name of the list container element
     */
    DockClasses["listContainer"] = "p-dock-list-container";
    /**
     * Class name of the list element
     */
    DockClasses["list"] = "p-dock-list";
    /**
     * Class name of the item element
     */
    DockClasses["item"] = "p-dock-item";
    /**
     * Class name of the item content element
     */
    DockClasses["itemContent"] = "p-dock-item-content";
    /**
     * Class name of the item link element
     */
    DockClasses["itemLink"] = "p-dock-item-link";
    /**
     * Class name of the item icon element
     */
    DockClasses["itemIcon"] = "p-dock-item-icon";
})(DockClasses || (DockClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9ja3N0eWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2RvY2svc3R5bGUvZG9ja3N0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7Ozs7Ozs7Ozs7OztrQkFhUixFQUFFLENBQUMsaUJBQWlCLENBQUM7d0JBQ2YsRUFBRSxDQUFDLG1CQUFtQixDQUFDO2VBQ2hDLEVBQUUsQ0FBQyxjQUFjLENBQUM7cUJBQ1osRUFBRSxDQUFDLG9CQUFvQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O2VBZ0I5QixFQUFFLENBQUMsbUJBQW1CLENBQUM7cUJBQ2pCLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQzs7OztrQkFJaEMsRUFBRSxDQUFDLDZCQUE2QixDQUFDO2VBQ3BDLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQyxJQUFJLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQyxJQUFJLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztzQkFDakcsRUFBRSxDQUFDLDZCQUE2QixDQUFDOzs7Ozs7Ozs7OzthQVcxQyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Y0FDbkIsRUFBRSxDQUFDLGdCQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQW1GakMsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFHO0lBQ1osSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxDQUFDO1FBQzNCLG9CQUFvQjtRQUNwQixVQUFVLEtBQUssQ0FBQyxRQUFRLEVBQUU7UUFDMUI7WUFDSSxlQUFlLEVBQUUsUUFBUSxDQUFDLFlBQVk7U0FDekM7S0FDSjtJQUNELGFBQWEsRUFBRSx1QkFBdUI7SUFDdEMsSUFBSSxFQUFFLGFBQWE7SUFDbkIsSUFBSSxFQUFFLENBQUMsRUFBRSxRQUFRLEVBQUUsYUFBYSxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUN2QyxhQUFhO1FBQ2I7WUFDSSxTQUFTLEVBQUUsUUFBUSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUM7WUFDcEMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDO1NBQ2pEO0tBQ0o7SUFDRCxXQUFXLEVBQUUscUJBQXFCO0lBQ2xDLFFBQVEsRUFBRSxrQkFBa0I7SUFDNUIsUUFBUSxFQUFFLGtCQUFrQjtDQUMvQixDQUFDO0FBR0YsTUFBTSxPQUFPLFNBQVUsU0FBUSxTQUFTO0lBQ3BDLElBQUksR0FBRyxNQUFNLENBQUM7SUFFZCxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsT0FBTyxHQUFHLE9BQU8sQ0FBQztpTkFMVCxTQUFTLHlCQUFULFNBQVM7Z0VBQVQsU0FBUyxXQUFULFNBQVM7O2lGQUFULFNBQVM7Y0FEckIsVUFBVTs7QUFTWDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sQ0FBTixJQUFZLFdBNkJYO0FBN0JELFdBQVksV0FBVztJQUNuQjs7T0FFRztJQUNILDhCQUFlLENBQUE7SUFDZjs7T0FFRztJQUNILHNEQUF1QyxDQUFBO0lBQ3ZDOztPQUVHO0lBQ0gsbUNBQW9CLENBQUE7SUFDcEI7O09BRUc7SUFDSCxtQ0FBb0IsQ0FBQTtJQUNwQjs7T0FFRztJQUNILGtEQUFtQyxDQUFBO0lBQ25DOztPQUVHO0lBQ0gsNENBQTZCLENBQUE7SUFDN0I7O09BRUc7SUFDSCw0Q0FBNkIsQ0FBQTtBQUNqQyxDQUFDLEVBN0JXLFdBQVcsS0FBWCxXQUFXLFFBNkJ0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTdHlsZSB9IGZyb20gJ3ByaW1lbmcvYmFzZSc7XG5cbmNvbnN0IHRoZW1lID0gKHsgZHQgfSkgPT4gYFxuLnAtZG9jayB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IDE7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xufVxuXG4ucC1kb2NrLWxpc3QtY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xuICAgIGJhY2tncm91bmQ6ICR7ZHQoJ2RvY2suYmFja2dyb3VuZCcpfTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAke2R0KCdkb2NrLmJvcmRlci5jb2xvcicpfTtcbiAgICBwYWRkaW5nOiAke2R0KCdkb2NrLnBhZGRpbmcnKX07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkdCgnZG9jay5ib3JkZXIucmFkaXVzJyl9O1xufVxuXG4ucC1kb2NrLWxpc3Qge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIG91dGxpbmU6IDAgbm9uZTtcbn1cblxuLnAtZG9jay1pdGVtIHtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBjdWJpYy1iZXppZXIoMC40LCAwLCAwLjIsIDEpO1xuICAgIHdpbGwtY2hhbmdlOiB0cmFuc2Zvcm07XG4gICAgcGFkZGluZzogJHtkdCgnZG9jay5pdGVtLnBhZGRpbmcnKX07XG4gICAgYm9yZGVyLXJhZGl1czogJHtkdCgnZG9jay5pdGVtLmJvcmRlci5yYWRpdXMnKX07XG59XG5cbi5wLWRvY2staXRlbS5wLWZvY3VzIHtcbiAgICBib3gtc2hhZG93OiAke2R0KCdkb2NrLml0ZW0uZm9jdXMucmluZy5zaGFkb3cnKX07XG4gICAgb3V0bGluZTogJHtkdCgnZG9jay5pdGVtLmZvY3VzLnJpbmcud2lkdGgnKX0gJHtkdCgnZG9jay5pdGVtLmZvY3VzLnJpbmcuc3R5bGUnKX0gJHtkdCgnZG9jay5pdGVtLmZvY3VzLnJpbmcuY29sb3InKX07XG4gICAgb3V0bGluZS1vZmZzZXQ6ICR7ZHQoJ2RvY2suaXRlbS5mb2N1cy5yaW5nLm9mZnNldCcpfTtcbn1cblxuLnAtZG9jay1pdGVtLWxpbmsge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIGN1cnNvcjogZGVmYXVsdDtcbiAgICB3aWR0aDogJHtkdCgnZG9jay5pdGVtLnNpemUnKX07XG4gICAgaGVpZ2h0OiAke2R0KCdkb2NrLml0ZW0uc2l6ZScpfTtcbn1cblxuLnAtZG9jay10b3Age1xuICAgIGxlZnQ6IDA7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuXG4ucC1kb2NrLXRvcCAucC1kb2NrLWl0ZW0ge1xuICAgIHRyYW5zZm9ybS1vcmlnaW46IGNlbnRlciB0b3A7XG59XG5cbi5wLWRvY2stYm90dG9tIHtcbiAgICBsZWZ0OiAwO1xuICAgIGJvdHRvbTogMDtcbiAgICB3aWR0aDogMTAwJTtcbn1cblxuLnAtZG9jay1ib3R0b20gLnAtZG9jay1pdGVtIHtcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBjZW50ZXIgYm90dG9tO1xufVxuXG4ucC1kb2NrLXJpZ2h0IHtcbiAgICByaWdodDogMDtcbiAgICB0b3A6IDA7XG4gICAgaGVpZ2h0OiAxMDAlO1xufVxuXG4ucC1kb2NrLXJpZ2h0OmRpcihydGwpIHtcbiAgICByaWdodDogYXV0bztcbiAgICBsZWZ0OiAwO1xufVxuXG4ucC1kb2NrLXJpZ2h0IC5wLWRvY2staXRlbSB7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIHJpZ2h0O1xufVxuXG4ucC1kb2NrLXJpZ2h0IC5wLWRvY2stbGlzdCB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLnAtZG9jay1sZWZ0IHtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5wLWRvY2stbGVmdDpkaXIocnRsKSB7XG4gICAgbGVmdDogYXV0bztcbiAgICByaWdodDogMDtcbn1cblxuLnAtZG9jay1sZWZ0IC5wLWRvY2staXRlbSB7XG4gICAgdHJhbnNmb3JtLW9yaWdpbjogY2VudGVyIGxlZnQ7XG59XG5cbi5wLWRvY2stbGVmdCAucC1kb2NrLWxpc3Qge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5wLWRvY2stbW9iaWxlLnAtZG9jay10b3AgLnAtZG9jay1saXN0LWNvbnRhaW5lcixcbi5wLWRvY2stbW9iaWxlLnAtZG9jay1ib3R0b20gLnAtZG9jay1saXN0LWNvbnRhaW5lciB7XG4gICAgb3ZlcmZsb3cteDogYXV0bztcbiAgICB3aWR0aDogMTAwJTtcbn1cbi5wLWRvY2stbW9iaWxlLnAtZG9jay10b3AgLnAtZG9jay1saXN0LWNvbnRhaW5lciAucC1kb2NrLWxpc3QsXG4ucC1kb2NrLW1vYmlsZS5wLWRvY2stYm90dG9tIC5wLWRvY2stbGlzdC1jb250YWluZXIgLnAtZG9jay1saXN0IHtcbiAgICBtYXJnaW46IDAgYXV0bztcbn1cbi5wLWRvY2stbW9iaWxlLnAtZG9jay1sZWZ0IC5wLWRvY2stbGlzdC1jb250YWluZXIsXG4ucC1kb2NrLW1vYmlsZS5wLWRvY2stcmlnaHQgLnAtZG9jay1saXN0LWNvbnRhaW5lciB7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG4ucC1kb2NrLW1vYmlsZS5wLWRvY2stbGVmdCAucC1kb2NrLWxpc3QtY29udGFpbmVyIC5wLWRvY2stbGlzdCxcbi5wLWRvY2stbW9iaWxlLnAtZG9jay1yaWdodCAucC1kb2NrLWxpc3QtY29udGFpbmVyIC5wLWRvY2stbGlzdCB7XG4gICAgbWFyZ2luOiBhdXRvIDA7XG59XG4ucC1kb2NrLW1vYmlsZSAucC1kb2NrLWxpc3QgLnAtZG9jay1pdGVtIHtcbiAgICB0cmFuc2Zvcm06IG5vbmU7XG4gICAgbWFyZ2luOiAwO1xufVxuYDtcblxuY29uc3QgY2xhc3NlcyA9IHtcbiAgICByb290OiAoeyBpbnN0YW5jZSwgcHJvcHMgfSkgPT4gW1xuICAgICAgICAncC1kb2NrIHAtY29tcG9uZW50JyxcbiAgICAgICAgYHAtZG9jay0ke3Byb3BzLnBvc2l0aW9ufWAsXG4gICAgICAgIHtcbiAgICAgICAgICAgICdwLWRvY2stbW9iaWxlJzogaW5zdGFuY2UucXVlcnlNYXRjaGVzXG4gICAgICAgIH1cbiAgICBdLFxuICAgIGxpc3RDb250YWluZXI6ICdwLWRvY2stbGlzdC1jb250YWluZXInLFxuICAgIGxpc3Q6ICdwLWRvY2stbGlzdCcsXG4gICAgaXRlbTogKHsgaW5zdGFuY2UsIHByb2Nlc3NlZEl0ZW0sIGlkIH0pID0+IFtcbiAgICAgICAgJ3AtZG9jay1pdGVtJyxcbiAgICAgICAge1xuICAgICAgICAgICAgJ3AtZm9jdXMnOiBpbnN0YW5jZS5pc0l0ZW1BY3RpdmUoaWQpLFxuICAgICAgICAgICAgJ3AtZGlzYWJsZWQnOiBpbnN0YW5jZS5kaXNhYmxlZChwcm9jZXNzZWRJdGVtKVxuICAgICAgICB9XG4gICAgXSxcbiAgICBpdGVtQ29udGVudDogJ3AtZG9jay1pdGVtLWNvbnRlbnQnLFxuICAgIGl0ZW1MaW5rOiAncC1kb2NrLWl0ZW0tbGluaycsXG4gICAgaXRlbUljb246ICdwLWRvY2staXRlbS1pY29uJ1xufTtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIERvY2tTdHlsZSBleHRlbmRzIEJhc2VTdHlsZSB7XG4gICAgbmFtZSA9ICdkb2NrJztcblxuICAgIHRoZW1lID0gdGhlbWU7XG5cbiAgICBjbGFzc2VzID0gY2xhc3Nlcztcbn1cblxuLyoqXG4gKlxuICogRG9jayBpcyBhIG5hdmlnYXRpb24gY29tcG9uZW50IGNvbnNpc3Rpbmcgb2YgbWVudWl0ZW1zLlxuICpcbiAqIFtMaXZlIERlbW9dKGh0dHBzOi8vd3d3LnByaW1lbmcub3JnL2RvY2svKVxuICpcbiAqIEBtb2R1bGUgZG9ja3N0eWxlXG4gKlxuICovXG5leHBvcnQgZW51bSBEb2NrQ2xhc3NlcyB7XG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgcm9vdCBlbGVtZW50XG4gICAgICovXG4gICAgcm9vdCA9ICdwLWRvY2snLFxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIGxpc3QgY29udGFpbmVyIGVsZW1lbnRcbiAgICAgKi9cbiAgICBsaXN0Q29udGFpbmVyID0gJ3AtZG9jay1saXN0LWNvbnRhaW5lcicsXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgbGlzdCBlbGVtZW50XG4gICAgICovXG4gICAgbGlzdCA9ICdwLWRvY2stbGlzdCcsXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgaXRlbSBlbGVtZW50XG4gICAgICovXG4gICAgaXRlbSA9ICdwLWRvY2staXRlbScsXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgaXRlbSBjb250ZW50IGVsZW1lbnRcbiAgICAgKi9cbiAgICBpdGVtQ29udGVudCA9ICdwLWRvY2staXRlbS1jb250ZW50JyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBpdGVtIGxpbmsgZWxlbWVudFxuICAgICAqL1xuICAgIGl0ZW1MaW5rID0gJ3AtZG9jay1pdGVtLWxpbmsnLFxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIGl0ZW0gaWNvbiBlbGVtZW50XG4gICAgICovXG4gICAgaXRlbUljb24gPSAncC1kb2NrLWl0ZW0taWNvbidcbn1cblxuZXhwb3J0IGludGVyZmFjZSBEb2NrU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge31cbiJdfQ==