import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-tooltip {
    position: absolute;
    display: none;
    max-width: ${dt('tooltip.max.width')};
}

.p-tooltip-right,
.p-tooltip-left {
    padding: 0 ${dt('tooltip.gutter')};
}

.p-tooltip-top,
.p-tooltip-bottom {
    padding: ${dt('tooltip.gutter')} 0;
}

.p-tooltip-text {
    white-space: pre-line;
    word-break: break-word;
    background: ${dt('tooltip.background')};
    color: ${dt('tooltip.color')};
    padding: ${dt('tooltip.padding')};
    box-shadow: ${dt('tooltip.shadow')};
    border-radius: ${dt('tooltip.border.radius')};
}

.p-tooltip-arrow {
    position: absolute;
    width: 0;
    height: 0;
    border-color: transparent;
    border-style: solid;
    scale: 2;
}

.p-tooltip-right .p-tooltip-arrow {
    top: 50%;
    left: 0;
    margin-top: calc(-1 * ${dt('tooltip.gutter')});
    border-width: ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} 0;
    border-right-color: ${dt('tooltip.background')};
}

.p-tooltip-left .p-tooltip-arrow {
    top: 50%;
    right: 0;
    margin-top: calc(-1 * ${dt('tooltip.gutter')});
    border-width: ${dt('tooltip.gutter')} 0 ${dt('tooltip.gutter')} ${dt('tooltip.gutter')};
    border-left-color: ${dt('tooltip.background')};
}

.p-tooltip-top .p-tooltip-arrow {
    bottom: 0;
    left: 50%;
    margin-left: calc(-1 * ${dt('tooltip.gutter')});
    border-width: ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} 0 ${dt('tooltip.gutter')};
    border-top-color: ${dt('tooltip.background')};
    border-bottom-color: ${dt('tooltip.background')};
}

.p-tooltip-bottom .p-tooltip-arrow {
    top: 0;
    left: 50%;
    margin-left: calc(-1 * ${dt('tooltip.gutter')});
    border-width: 0 ${dt('tooltip.gutter')} ${dt('tooltip.gutter')} ${dt('tooltip.gutter')};
    border-top-color: ${dt('tooltip.background')};
    border-bottom-color: ${dt('tooltip.background')};
}
`;
const classes = {
    root: 'p-tooltip p-component',
    arrow: 'p-tooltip-arrow',
    text: 'p-tooltip-text'
};
export class TooltipStyle extends BaseStyle {
    name = 'tooltip';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵTooltipStyle_BaseFactory; return function TooltipStyle_Factory(__ngFactoryType__) { return (ɵTooltipStyle_BaseFactory || (ɵTooltipStyle_BaseFactory = i0.ɵɵgetInheritedFactory(TooltipStyle)))(__ngFactoryType__ || TooltipStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: TooltipStyle, factory: TooltipStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(TooltipStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * Tooltip directive provides advisory information for a component.
 *
 * [Live Demo](https://www.primeng.org/tooltip)
 *
 * @module tooltipstyle
 *
 */
export var TooltipClasses;
(function (TooltipClasses) {
    /**
     * Class name of the root element
     */
    TooltipClasses["root"] = "p-tooltip";
    /**
     * Class name of the arrow element
     */
    TooltipClasses["arrow"] = "p-tooltip-arrow";
    /**
     * Class name of the text element
     */
    TooltipClasses["text"] = "p-tooltip-text";
})(TooltipClasses || (TooltipClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcHN0eWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Rvb2x0aXAvc3R5bGUvdG9vbHRpcHN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7OztpQkFJVCxFQUFFLENBQUMsbUJBQW1CLENBQUM7Ozs7O2lCQUt2QixFQUFFLENBQUMsZ0JBQWdCLENBQUM7Ozs7O2VBS3RCLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQzs7Ozs7O2tCQU1qQixFQUFFLENBQUMsb0JBQW9CLENBQUM7YUFDN0IsRUFBRSxDQUFDLGVBQWUsQ0FBQztlQUNqQixFQUFFLENBQUMsaUJBQWlCLENBQUM7a0JBQ2xCLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztxQkFDakIsRUFBRSxDQUFDLHVCQUF1QixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7NEJBZXBCLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztvQkFDNUIsRUFBRSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDLGdCQUFnQixDQUFDLElBQUksRUFBRSxDQUFDLGdCQUFnQixDQUFDOzBCQUM5RCxFQUFFLENBQUMsb0JBQW9CLENBQUM7Ozs7Ozs0QkFNdEIsRUFBRSxDQUFDLGdCQUFnQixDQUFDO29CQUM1QixFQUFFLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7eUJBQ2pFLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQzs7Ozs7OzZCQU1wQixFQUFFLENBQUMsZ0JBQWdCLENBQUM7b0JBQzdCLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQzt3QkFDbEUsRUFBRSxDQUFDLG9CQUFvQixDQUFDOzJCQUNyQixFQUFFLENBQUMsb0JBQW9CLENBQUM7Ozs7Ozs2QkFNdEIsRUFBRSxDQUFDLGdCQUFnQixDQUFDO3NCQUMzQixFQUFFLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7d0JBQ2xFLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQzsyQkFDckIsRUFBRSxDQUFDLG9CQUFvQixDQUFDOztDQUVsRCxDQUFDO0FBRUYsTUFBTSxPQUFPLEdBQUc7SUFDWixJQUFJLEVBQUUsdUJBQXVCO0lBQzdCLEtBQUssRUFBRSxpQkFBaUI7SUFDeEIsSUFBSSxFQUFFLGdCQUFnQjtDQUN6QixDQUFDO0FBR0YsTUFBTSxPQUFPLFlBQWEsU0FBUSxTQUFTO0lBQ3ZDLElBQUksR0FBRyxTQUFTLENBQUM7SUFFakIsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUVkLE9BQU8sR0FBRyxPQUFPLENBQUM7Nk5BTFQsWUFBWSx5QkFBWixZQUFZO2dFQUFaLFlBQVksV0FBWixZQUFZOztpRkFBWixZQUFZO2NBRHhCLFVBQVU7O0FBU1g7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLENBQU4sSUFBWSxjQWFYO0FBYkQsV0FBWSxjQUFjO0lBQ3RCOztPQUVHO0lBQ0gsb0NBQWtCLENBQUE7SUFDbEI7O09BRUc7SUFDSCwyQ0FBeUIsQ0FBQTtJQUN6Qjs7T0FFRztJQUNILHlDQUF1QixDQUFBO0FBQzNCLENBQUMsRUFiVyxjQUFjLEtBQWQsY0FBYyxRQWF6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTdHlsZSB9IGZyb20gJ3ByaW1lbmcvYmFzZSc7XG5cbmNvbnN0IHRoZW1lID0gKHsgZHQgfSkgPT4gYFxuLnAtdG9vbHRpcCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgbWF4LXdpZHRoOiAke2R0KCd0b29sdGlwLm1heC53aWR0aCcpfTtcbn1cblxuLnAtdG9vbHRpcC1yaWdodCxcbi5wLXRvb2x0aXAtbGVmdCB7XG4gICAgcGFkZGluZzogMCAke2R0KCd0b29sdGlwLmd1dHRlcicpfTtcbn1cblxuLnAtdG9vbHRpcC10b3AsXG4ucC10b29sdGlwLWJvdHRvbSB7XG4gICAgcGFkZGluZzogJHtkdCgndG9vbHRpcC5ndXR0ZXInKX0gMDtcbn1cblxuLnAtdG9vbHRpcC10ZXh0IHtcbiAgICB3aGl0ZS1zcGFjZTogcHJlLWxpbmU7XG4gICAgd29yZC1icmVhazogYnJlYWstd29yZDtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCd0b29sdGlwLmJhY2tncm91bmQnKX07XG4gICAgY29sb3I6ICR7ZHQoJ3Rvb2x0aXAuY29sb3InKX07XG4gICAgcGFkZGluZzogJHtkdCgndG9vbHRpcC5wYWRkaW5nJyl9O1xuICAgIGJveC1zaGFkb3c6ICR7ZHQoJ3Rvb2x0aXAuc2hhZG93Jyl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZHQoJ3Rvb2x0aXAuYm9yZGVyLnJhZGl1cycpfTtcbn1cblxuLnAtdG9vbHRpcC1hcnJvdyB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiAwO1xuICAgIGhlaWdodDogMDtcbiAgICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgc2NhbGU6IDI7XG59XG5cbi5wLXRvb2x0aXAtcmlnaHQgLnAtdG9vbHRpcC1hcnJvdyB7XG4gICAgdG9wOiA1MCU7XG4gICAgbGVmdDogMDtcbiAgICBtYXJnaW4tdG9wOiBjYWxjKC0xICogJHtkdCgndG9vbHRpcC5ndXR0ZXInKX0pO1xuICAgIGJvcmRlci13aWR0aDogJHtkdCgndG9vbHRpcC5ndXR0ZXInKX0gJHtkdCgndG9vbHRpcC5ndXR0ZXInKX0gJHtkdCgndG9vbHRpcC5ndXR0ZXInKX0gMDtcbiAgICBib3JkZXItcmlnaHQtY29sb3I6ICR7ZHQoJ3Rvb2x0aXAuYmFja2dyb3VuZCcpfTtcbn1cblxuLnAtdG9vbHRpcC1sZWZ0IC5wLXRvb2x0aXAtYXJyb3cge1xuICAgIHRvcDogNTAlO1xuICAgIHJpZ2h0OiAwO1xuICAgIG1hcmdpbi10b3A6IGNhbGMoLTEgKiAke2R0KCd0b29sdGlwLmd1dHRlcicpfSk7XG4gICAgYm9yZGVyLXdpZHRoOiAke2R0KCd0b29sdGlwLmd1dHRlcicpfSAwICR7ZHQoJ3Rvb2x0aXAuZ3V0dGVyJyl9ICR7ZHQoJ3Rvb2x0aXAuZ3V0dGVyJyl9O1xuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAke2R0KCd0b29sdGlwLmJhY2tncm91bmQnKX07XG59XG5cbi5wLXRvb2x0aXAtdG9wIC5wLXRvb2x0aXAtYXJyb3cge1xuICAgIGJvdHRvbTogMDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IGNhbGMoLTEgKiAke2R0KCd0b29sdGlwLmd1dHRlcicpfSk7XG4gICAgYm9yZGVyLXdpZHRoOiAke2R0KCd0b29sdGlwLmd1dHRlcicpfSAke2R0KCd0b29sdGlwLmd1dHRlcicpfSAwICR7ZHQoJ3Rvb2x0aXAuZ3V0dGVyJyl9O1xuICAgIGJvcmRlci10b3AtY29sb3I6ICR7ZHQoJ3Rvb2x0aXAuYmFja2dyb3VuZCcpfTtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAke2R0KCd0b29sdGlwLmJhY2tncm91bmQnKX07XG59XG5cbi5wLXRvb2x0aXAtYm90dG9tIC5wLXRvb2x0aXAtYXJyb3cge1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IGNhbGMoLTEgKiAke2R0KCd0b29sdGlwLmd1dHRlcicpfSk7XG4gICAgYm9yZGVyLXdpZHRoOiAwICR7ZHQoJ3Rvb2x0aXAuZ3V0dGVyJyl9ICR7ZHQoJ3Rvb2x0aXAuZ3V0dGVyJyl9ICR7ZHQoJ3Rvb2x0aXAuZ3V0dGVyJyl9O1xuICAgIGJvcmRlci10b3AtY29sb3I6ICR7ZHQoJ3Rvb2x0aXAuYmFja2dyb3VuZCcpfTtcbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAke2R0KCd0b29sdGlwLmJhY2tncm91bmQnKX07XG59XG5gO1xuXG5jb25zdCBjbGFzc2VzID0ge1xuICAgIHJvb3Q6ICdwLXRvb2x0aXAgcC1jb21wb25lbnQnLFxuICAgIGFycm93OiAncC10b29sdGlwLWFycm93JyxcbiAgICB0ZXh0OiAncC10b29sdGlwLXRleHQnXG59O1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgVG9vbHRpcFN0eWxlIGV4dGVuZHMgQmFzZVN0eWxlIHtcbiAgICBuYW1lID0gJ3Rvb2x0aXAnO1xuXG4gICAgdGhlbWUgPSB0aGVtZTtcblxuICAgIGNsYXNzZXMgPSBjbGFzc2VzO1xufVxuXG4vKipcbiAqXG4gKiBUb29sdGlwIGRpcmVjdGl2ZSBwcm92aWRlcyBhZHZpc29yeSBpbmZvcm1hdGlvbiBmb3IgYSBjb21wb25lbnQuXG4gKlxuICogW0xpdmUgRGVtb10oaHR0cHM6Ly93d3cucHJpbWVuZy5vcmcvdG9vbHRpcClcbiAqXG4gKiBAbW9kdWxlIHRvb2x0aXBzdHlsZVxuICpcbiAqL1xuZXhwb3J0IGVudW0gVG9vbHRpcENsYXNzZXMge1xuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIHJvb3QgZWxlbWVudFxuICAgICAqL1xuICAgIHJvb3QgPSAncC10b29sdGlwJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBhcnJvdyBlbGVtZW50XG4gICAgICovXG4gICAgYXJyb3cgPSAncC10b29sdGlwLWFycm93JyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSB0ZXh0IGVsZW1lbnRcbiAgICAgKi9cbiAgICB0ZXh0ID0gJ3AtdG9vbHRpcC10ZXh0J1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRvb2x0aXBTdHlsZSBleHRlbmRzIEJhc2VTdHlsZSB7fVxuIl19