import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-confirmdialog .p-dialog-content {
    display: flex;
    align-items: center;
    gap:  ${dt('confirmdialog.content.gap')};
}

.p-confirmdialog-icon {
    color: ${dt('confirmdialog.icon.color')};
    font-size: ${dt('confirmdialog.icon.size')};
    width: ${dt('confirmdialog.icon.size')};
    height: ${dt('confirmdialog.icon.size')};
}
`;
const classes = {
    root: 'p-confirmdialog',
    icon: 'p-confirmdialog-icon',
    message: 'p-confirmdialog-message',
    pcRejectButton: 'p-confirmdialog-reject-button',
    pcAcceptButton: 'p-confirmdialog-accept-button'
};
export class ConfirmDialogStyle extends BaseStyle {
    name = 'confirmdialog';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵConfirmDialogStyle_BaseFactory; return function ConfirmDialogStyle_Factory(__ngFactoryType__) { return (ɵConfirmDialogStyle_BaseFactory || (ɵConfirmDialogStyle_BaseFactory = i0.ɵɵgetInheritedFactory(ConfirmDialogStyle)))(__ngFactoryType__ || ConfirmDialogStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: ConfirmDialogStyle, factory: ConfirmDialogStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(ConfirmDialogStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * ConfirmDialog uses a Dialog UI with confirmDialog method or <ConfirmDialog> tag.
 *
 * [Live Demo](https://www.primeng.org/confirmdialog)
 *
 * @module confirmdialogstyle
 *
 */
export var ConfirmDialogClasses;
(function (ConfirmDialogClasses) {
    /**
     * Class name of the root element
     */
    ConfirmDialogClasses["root"] = "p-confirmdialog";
    /**
     * Class name of the icon element
     */
    ConfirmDialogClasses["icon"] = "p-confirmdialog-icon";
    /**
     * Class name of the message element
     */
    ConfirmDialogClasses["message"] = "p-confirmdialog-message";
    /**
     * Class name of the reject button element
     */
    ConfirmDialogClasses["pcRejectButton"] = "p-confirmdialog-reject-button";
    /**
     * Class name of the accept button element
     */
    ConfirmDialogClasses["pcAcceptButton"] = "p-confirmdialog-accept-button";
})(ConfirmDialogClasses || (ConfirmDialogClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWRpYWxvZ3N0eWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbmZpcm1kaWFsb2cvc3R5bGUvY29uZmlybWRpYWxvZ3N0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7OztZQUlkLEVBQUUsQ0FBQywyQkFBMkIsQ0FBQzs7OzthQUk5QixFQUFFLENBQUMsMEJBQTBCLENBQUM7aUJBQzFCLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQzthQUNqQyxFQUFFLENBQUMseUJBQXlCLENBQUM7Y0FDNUIsRUFBRSxDQUFDLHlCQUF5QixDQUFDOztDQUUxQyxDQUFDO0FBRUYsTUFBTSxPQUFPLEdBQUc7SUFDWixJQUFJLEVBQUUsaUJBQWlCO0lBQ3ZCLElBQUksRUFBRSxzQkFBc0I7SUFDNUIsT0FBTyxFQUFFLHlCQUF5QjtJQUNsQyxjQUFjLEVBQUUsK0JBQStCO0lBQy9DLGNBQWMsRUFBRSwrQkFBK0I7Q0FDbEQsQ0FBQztBQUdGLE1BQU0sT0FBTyxrQkFBbUIsU0FBUSxTQUFTO0lBQzdDLElBQUksR0FBRyxlQUFlLENBQUM7SUFFdkIsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUVkLE9BQU8sR0FBRyxPQUFPLENBQUM7cVBBTFQsa0JBQWtCLHlCQUFsQixrQkFBa0I7Z0VBQWxCLGtCQUFrQixXQUFsQixrQkFBa0I7O2lGQUFsQixrQkFBa0I7Y0FEOUIsVUFBVTs7QUFTWDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sQ0FBTixJQUFZLG9CQXFCWDtBQXJCRCxXQUFZLG9CQUFvQjtJQUM1Qjs7T0FFRztJQUNILGdEQUF3QixDQUFBO0lBQ3hCOztPQUVHO0lBQ0gscURBQTZCLENBQUE7SUFDN0I7O09BRUc7SUFDSCwyREFBbUMsQ0FBQTtJQUNuQzs7T0FFRztJQUNILHdFQUFnRCxDQUFBO0lBQ2hEOztPQUVHO0lBQ0gsd0VBQWdELENBQUE7QUFDcEQsQ0FBQyxFQXJCVyxvQkFBb0IsS0FBcEIsb0JBQW9CLFFBcUIvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTdHlsZSB9IGZyb20gJ3ByaW1lbmcvYmFzZSc7XG5cbmNvbnN0IHRoZW1lID0gKHsgZHQgfSkgPT4gYFxuLnAtY29uZmlybWRpYWxvZyAucC1kaWFsb2ctY29udGVudCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGdhcDogICR7ZHQoJ2NvbmZpcm1kaWFsb2cuY29udGVudC5nYXAnKX07XG59XG5cbi5wLWNvbmZpcm1kaWFsb2ctaWNvbiB7XG4gICAgY29sb3I6ICR7ZHQoJ2NvbmZpcm1kaWFsb2cuaWNvbi5jb2xvcicpfTtcbiAgICBmb250LXNpemU6ICR7ZHQoJ2NvbmZpcm1kaWFsb2cuaWNvbi5zaXplJyl9O1xuICAgIHdpZHRoOiAke2R0KCdjb25maXJtZGlhbG9nLmljb24uc2l6ZScpfTtcbiAgICBoZWlnaHQ6ICR7ZHQoJ2NvbmZpcm1kaWFsb2cuaWNvbi5zaXplJyl9O1xufVxuYDtcblxuY29uc3QgY2xhc3NlcyA9IHtcbiAgICByb290OiAncC1jb25maXJtZGlhbG9nJyxcbiAgICBpY29uOiAncC1jb25maXJtZGlhbG9nLWljb24nLFxuICAgIG1lc3NhZ2U6ICdwLWNvbmZpcm1kaWFsb2ctbWVzc2FnZScsXG4gICAgcGNSZWplY3RCdXR0b246ICdwLWNvbmZpcm1kaWFsb2ctcmVqZWN0LWJ1dHRvbicsXG4gICAgcGNBY2NlcHRCdXR0b246ICdwLWNvbmZpcm1kaWFsb2ctYWNjZXB0LWJ1dHRvbidcbn07XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBDb25maXJtRGlhbG9nU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge1xuICAgIG5hbWUgPSAnY29uZmlybWRpYWxvZyc7XG5cbiAgICB0aGVtZSA9IHRoZW1lO1xuXG4gICAgY2xhc3NlcyA9IGNsYXNzZXM7XG59XG5cbi8qKlxuICpcbiAqIENvbmZpcm1EaWFsb2cgdXNlcyBhIERpYWxvZyBVSSB3aXRoIGNvbmZpcm1EaWFsb2cgbWV0aG9kIG9yIDxDb25maXJtRGlhbG9nPiB0YWcuXG4gKlxuICogW0xpdmUgRGVtb10oaHR0cHM6Ly93d3cucHJpbWVuZy5vcmcvY29uZmlybWRpYWxvZylcbiAqXG4gKiBAbW9kdWxlIGNvbmZpcm1kaWFsb2dzdHlsZVxuICpcbiAqL1xuZXhwb3J0IGVudW0gQ29uZmlybURpYWxvZ0NsYXNzZXMge1xuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIHJvb3QgZWxlbWVudFxuICAgICAqL1xuICAgIHJvb3QgPSAncC1jb25maXJtZGlhbG9nJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBpY29uIGVsZW1lbnRcbiAgICAgKi9cbiAgICBpY29uID0gJ3AtY29uZmlybWRpYWxvZy1pY29uJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBtZXNzYWdlIGVsZW1lbnRcbiAgICAgKi9cbiAgICBtZXNzYWdlID0gJ3AtY29uZmlybWRpYWxvZy1tZXNzYWdlJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSByZWplY3QgYnV0dG9uIGVsZW1lbnRcbiAgICAgKi9cbiAgICBwY1JlamVjdEJ1dHRvbiA9ICdwLWNvbmZpcm1kaWFsb2ctcmVqZWN0LWJ1dHRvbicsXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgYWNjZXB0IGJ1dHRvbiBlbGVtZW50XG4gICAgICovXG4gICAgcGNBY2NlcHRCdXR0b24gPSAncC1jb25maXJtZGlhbG9nLWFjY2VwdC1idXR0b24nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlybURpYWxvZ1N0eWxlIGV4dGVuZHMgQmFzZVN0eWxlIHt9XG4iXX0=