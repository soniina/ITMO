import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-splitbutton {
    display: inline-flex;
    position: relative;
    border-radius: ${dt('splitbutton.border.radius')};
}

.p-splitbutton-button.p-button {
    border-start-end-radius: 0;
    border-end-end-radius: 0;
    border-right: 0 none;
}

.p-splitbutton-button.p-button:focus-visible,
.p-splitbutton-dropdown.p-button:focus-visible {
    z-index: 1;
}

.p-splitbutton-button.p-button:not(:disabled):hover,
.p-splitbutton-button.p-button:not(:disabled):active {
    border-right: 0 none;
}

.p-splitbutton-dropdown.p-button {
    border-start-start-radius: 0;
    border-end-start-radius: 0;
}

.p-splitbutton .p-menu {
    min-width: 100%;
}

.p-splitbutton-fluid {
    display: flex;
}

.p-splitbutton-rounded .p-splitbutton-dropdown {
    border-start-end-radius: ${dt('splitbutton.rounded.border.radius')};
    border-end-end-radius: ${dt('splitbutton.rounded.border.radius')};
}

.p-splitbutton-rounded > .p-splitbutton-button {
    border-start-start-radius: ${dt('splitbutton.rounded.border.radius')};
    border-end-start-radius: ${dt('splitbutton.rounded.border.radius')};
}

.p-splitbutton-raised {
    box-shadow: ${dt('splitbutton.raised.shadow')};
}
`;
const classes = {
    root: ({ props }) => [
        'p-splitbutton p-component',
        {
            'p-splitbutton-raised': props.raised,
            'p-splitbutton-rounded': props.rounded,
            'p-splitbutton-fluid': props.fluid
        }
    ],
    pcButton: 'p-splitbutton-button',
    pcDropdown: 'p-splitbutton-dropdown'
};
export class SplitButtonStyle extends BaseStyle {
    name = 'splitbutton';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵSplitButtonStyle_BaseFactory; return function SplitButtonStyle_Factory(__ngFactoryType__) { return (ɵSplitButtonStyle_BaseFactory || (ɵSplitButtonStyle_BaseFactory = i0.ɵɵgetInheritedFactory(SplitButtonStyle)))(__ngFactoryType__ || SplitButtonStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: SplitButtonStyle, factory: SplitButtonStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(SplitButtonStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * SplitButton groups a set of commands in an overlay with a default command.
 *
 * [Live Demo](https://www.primeng.org/splitbutton/)
 *
 * @module splitbuttonstyle
 *
 */
export var SplitButtonClasses;
(function (SplitButtonClasses) {
    /**
     * Class name of the root element
     */
    SplitButtonClasses["root"] = "p-splitbutton";
    /**
     * Class name of the button element
     */
    SplitButtonClasses["pcButton"] = "p-splitbutton-button";
    /**
     * Class name of the dropdown element
     */
    SplitButtonClasses["pcDropdown"] = "p-splitbutton-dropdown";
})(SplitButtonClasses || (SplitButtonClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXRidXR0b25zdHlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zcGxpdGJ1dHRvbi9zdHlsZS9zcGxpdGJ1dHRvbnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7OztxQkFJTCxFQUFFLENBQUMsMkJBQTJCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFpQ3JCLEVBQUUsQ0FBQyxtQ0FBbUMsQ0FBQzs2QkFDekMsRUFBRSxDQUFDLG1DQUFtQyxDQUFDOzs7O2lDQUluQyxFQUFFLENBQUMsbUNBQW1DLENBQUM7K0JBQ3pDLEVBQUUsQ0FBQyxtQ0FBbUMsQ0FBQzs7OztrQkFJcEQsRUFBRSxDQUFDLDJCQUEyQixDQUFDOztDQUVoRCxDQUFDO0FBRUYsTUFBTSxPQUFPLEdBQUc7SUFDWixJQUFJLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsQ0FBQztRQUNqQiwyQkFBMkI7UUFDM0I7WUFDSSxzQkFBc0IsRUFBRSxLQUFLLENBQUMsTUFBTTtZQUNwQyx1QkFBdUIsRUFBRSxLQUFLLENBQUMsT0FBTztZQUN0QyxxQkFBcUIsRUFBRSxLQUFLLENBQUMsS0FBSztTQUNyQztLQUNKO0lBQ0QsUUFBUSxFQUFFLHNCQUFzQjtJQUNoQyxVQUFVLEVBQUUsd0JBQXdCO0NBQ3ZDLENBQUM7QUFHRixNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsU0FBUztJQUMzQyxJQUFJLEdBQUcsYUFBYSxDQUFDO0lBRXJCLEtBQUssR0FBRyxLQUFLLENBQUM7SUFFZCxPQUFPLEdBQUcsT0FBTyxDQUFDOzZPQUxULGdCQUFnQix5QkFBaEIsZ0JBQWdCO2dFQUFoQixnQkFBZ0IsV0FBaEIsZ0JBQWdCOztpRkFBaEIsZ0JBQWdCO2NBRDVCLFVBQVU7O0FBU1g7Ozs7Ozs7O0dBUUc7QUFDSCxNQUFNLENBQU4sSUFBWSxrQkFhWDtBQWJELFdBQVksa0JBQWtCO0lBQzFCOztPQUVHO0lBQ0gsNENBQXNCLENBQUE7SUFDdEI7O09BRUc7SUFDSCx1REFBaUMsQ0FBQTtJQUNqQzs7T0FFRztJQUNILDJEQUFxQyxDQUFBO0FBQ3pDLENBQUMsRUFiVyxrQkFBa0IsS0FBbEIsa0JBQWtCLFFBYTdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZVN0eWxlIH0gZnJvbSAncHJpbWVuZy9iYXNlJztcblxuY29uc3QgdGhlbWUgPSAoeyBkdCB9KSA9PiBgXG4ucC1zcGxpdGJ1dHRvbiB7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZHQoJ3NwbGl0YnV0dG9uLmJvcmRlci5yYWRpdXMnKX07XG59XG5cbi5wLXNwbGl0YnV0dG9uLWJ1dHRvbi5wLWJ1dHRvbiB7XG4gICAgYm9yZGVyLXN0YXJ0LWVuZC1yYWRpdXM6IDA7XG4gICAgYm9yZGVyLWVuZC1lbmQtcmFkaXVzOiAwO1xuICAgIGJvcmRlci1yaWdodDogMCBub25lO1xufVxuXG4ucC1zcGxpdGJ1dHRvbi1idXR0b24ucC1idXR0b246Zm9jdXMtdmlzaWJsZSxcbi5wLXNwbGl0YnV0dG9uLWRyb3Bkb3duLnAtYnV0dG9uOmZvY3VzLXZpc2libGUge1xuICAgIHotaW5kZXg6IDE7XG59XG5cbi5wLXNwbGl0YnV0dG9uLWJ1dHRvbi5wLWJ1dHRvbjpub3QoOmRpc2FibGVkKTpob3Zlcixcbi5wLXNwbGl0YnV0dG9uLWJ1dHRvbi5wLWJ1dHRvbjpub3QoOmRpc2FibGVkKTphY3RpdmUge1xuICAgIGJvcmRlci1yaWdodDogMCBub25lO1xufVxuXG4ucC1zcGxpdGJ1dHRvbi1kcm9wZG93bi5wLWJ1dHRvbiB7XG4gICAgYm9yZGVyLXN0YXJ0LXN0YXJ0LXJhZGl1czogMDtcbiAgICBib3JkZXItZW5kLXN0YXJ0LXJhZGl1czogMDtcbn1cblxuLnAtc3BsaXRidXR0b24gLnAtbWVudSB7XG4gICAgbWluLXdpZHRoOiAxMDAlO1xufVxuXG4ucC1zcGxpdGJ1dHRvbi1mbHVpZCB7XG4gICAgZGlzcGxheTogZmxleDtcbn1cblxuLnAtc3BsaXRidXR0b24tcm91bmRlZCAucC1zcGxpdGJ1dHRvbi1kcm9wZG93biB7XG4gICAgYm9yZGVyLXN0YXJ0LWVuZC1yYWRpdXM6ICR7ZHQoJ3NwbGl0YnV0dG9uLnJvdW5kZWQuYm9yZGVyLnJhZGl1cycpfTtcbiAgICBib3JkZXItZW5kLWVuZC1yYWRpdXM6ICR7ZHQoJ3NwbGl0YnV0dG9uLnJvdW5kZWQuYm9yZGVyLnJhZGl1cycpfTtcbn1cblxuLnAtc3BsaXRidXR0b24tcm91bmRlZCA+IC5wLXNwbGl0YnV0dG9uLWJ1dHRvbiB7XG4gICAgYm9yZGVyLXN0YXJ0LXN0YXJ0LXJhZGl1czogJHtkdCgnc3BsaXRidXR0b24ucm91bmRlZC5ib3JkZXIucmFkaXVzJyl9O1xuICAgIGJvcmRlci1lbmQtc3RhcnQtcmFkaXVzOiAke2R0KCdzcGxpdGJ1dHRvbi5yb3VuZGVkLmJvcmRlci5yYWRpdXMnKX07XG59XG5cbi5wLXNwbGl0YnV0dG9uLXJhaXNlZCB7XG4gICAgYm94LXNoYWRvdzogJHtkdCgnc3BsaXRidXR0b24ucmFpc2VkLnNoYWRvdycpfTtcbn1cbmA7XG5cbmNvbnN0IGNsYXNzZXMgPSB7XG4gICAgcm9vdDogKHsgcHJvcHMgfSkgPT4gW1xuICAgICAgICAncC1zcGxpdGJ1dHRvbiBwLWNvbXBvbmVudCcsXG4gICAgICAgIHtcbiAgICAgICAgICAgICdwLXNwbGl0YnV0dG9uLXJhaXNlZCc6IHByb3BzLnJhaXNlZCxcbiAgICAgICAgICAgICdwLXNwbGl0YnV0dG9uLXJvdW5kZWQnOiBwcm9wcy5yb3VuZGVkLFxuICAgICAgICAgICAgJ3Atc3BsaXRidXR0b24tZmx1aWQnOiBwcm9wcy5mbHVpZFxuICAgICAgICB9XG4gICAgXSxcbiAgICBwY0J1dHRvbjogJ3Atc3BsaXRidXR0b24tYnV0dG9uJyxcbiAgICBwY0Ryb3Bkb3duOiAncC1zcGxpdGJ1dHRvbi1kcm9wZG93bidcbn07XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTcGxpdEJ1dHRvblN0eWxlIGV4dGVuZHMgQmFzZVN0eWxlIHtcbiAgICBuYW1lID0gJ3NwbGl0YnV0dG9uJztcblxuICAgIHRoZW1lID0gdGhlbWU7XG5cbiAgICBjbGFzc2VzID0gY2xhc3Nlcztcbn1cblxuLyoqXG4gKlxuICogU3BsaXRCdXR0b24gZ3JvdXBzIGEgc2V0IG9mIGNvbW1hbmRzIGluIGFuIG92ZXJsYXkgd2l0aCBhIGRlZmF1bHQgY29tbWFuZC5cbiAqXG4gKiBbTGl2ZSBEZW1vXShodHRwczovL3d3dy5wcmltZW5nLm9yZy9zcGxpdGJ1dHRvbi8pXG4gKlxuICogQG1vZHVsZSBzcGxpdGJ1dHRvbnN0eWxlXG4gKlxuICovXG5leHBvcnQgZW51bSBTcGxpdEJ1dHRvbkNsYXNzZXMge1xuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIHJvb3QgZWxlbWVudFxuICAgICAqL1xuICAgIHJvb3QgPSAncC1zcGxpdGJ1dHRvbicsXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgYnV0dG9uIGVsZW1lbnRcbiAgICAgKi9cbiAgICBwY0J1dHRvbiA9ICdwLXNwbGl0YnV0dG9uLWJ1dHRvbicsXG4gICAgLyoqXG4gICAgICogQ2xhc3MgbmFtZSBvZiB0aGUgZHJvcGRvd24gZWxlbWVudFxuICAgICAqL1xuICAgIHBjRHJvcGRvd24gPSAncC1zcGxpdGJ1dHRvbi1kcm9wZG93bidcbn1cblxuZXhwb3J0IGludGVyZmFjZSBTcGxpdEJ1dHRvblN0eWxlIGV4dGVuZHMgQmFzZVN0eWxlIHt9XG4iXX0=