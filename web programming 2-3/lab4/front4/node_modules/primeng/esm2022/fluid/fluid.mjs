import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, inject, NgModule, ViewEncapsulation } from '@angular/core';
import { BaseComponent } from 'primeng/basecomponent';
import { FluidStyle } from './style/fluidstyle';
import * as i0 from "@angular/core";
const _c0 = ["*"];
/**
 * Fluid is a layout component to make descendant components span full width of their container.
 * @group Components
 */
export class Fluid extends BaseComponent {
    _componentStyle = inject(FluidStyle);
    static ɵfac = /*@__PURE__*/ (() => { let ɵFluid_BaseFactory; return function Fluid_Factory(__ngFactoryType__) { return (ɵFluid_BaseFactory || (ɵFluid_BaseFactory = i0.ɵɵgetInheritedFactory(Fluid)))(__ngFactoryType__ || Fluid); }; })();
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: Fluid, selectors: [["p-fluid"]], hostVars: 2, hostBindings: function Fluid_HostBindings(rf, ctx) { if (rf & 2) {
            i0.ɵɵclassProp("p-fluid", true);
        } }, standalone: true, features: [i0.ɵɵProvidersFeature([FluidStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function Fluid_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵprojection(0);
        } }, dependencies: [CommonModule], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(Fluid, [{
        type: Component,
        args: [{
                selector: 'p-fluid',
                template: ` <ng-content></ng-content> `,
                standalone: true,
                imports: [CommonModule],
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.None,
                providers: [FluidStyle],
                host: {
                    '[class.p-fluid]': 'true'
                }
            }]
    }], null, null); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(Fluid, { className: "Fluid" }); })();
export class FluidModule {
    static ɵfac = function FluidModule_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || FluidModule)(); };
    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: FluidModule });
    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [Fluid] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(FluidModule, [{
        type: NgModule,
        args: [{
                imports: [Fluid],
                exports: [Fluid]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(FluidModule, { imports: [Fluid], exports: [Fluid] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmx1aWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZmx1aWQvZmx1aWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFFBQVEsRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN4RyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDOzs7QUFFaEQ7OztHQUdHO0FBYUgsTUFBTSxPQUFPLEtBQU0sU0FBUSxhQUFhO0lBQ3BDLGVBQWUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7aU1BRDVCLEtBQUsseUJBQUwsS0FBSzs2REFBTCxLQUFLO1lBQUwsMEJBQUEsSUFBSSxDQUFDO2dFQUxILENBQUMsVUFBVSxDQUFDOztZQUxYLGtCQUF5Qjs0QkFFM0IsWUFBWTs7aUZBUWIsS0FBSztjQVpqQixTQUFTO2VBQUM7Z0JBQ1AsUUFBUSxFQUFFLFNBQVM7Z0JBQ25CLFFBQVEsRUFBRSw2QkFBNkI7Z0JBQ3ZDLFVBQVUsRUFBRSxJQUFJO2dCQUNoQixPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7Z0JBQ3ZCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2dCQUMvQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTtnQkFDckMsU0FBUyxFQUFFLENBQUMsVUFBVSxDQUFDO2dCQUN2QixJQUFJLEVBQUU7b0JBQ0YsaUJBQWlCLEVBQUUsTUFBTTtpQkFDNUI7YUFDSjs7a0ZBQ1ksS0FBSztBQVFsQixNQUFNLE9BQU8sV0FBVztxR0FBWCxXQUFXOzREQUFYLFdBQVc7Z0VBSFYsS0FBSzs7aUZBR04sV0FBVztjQUp2QixRQUFRO2VBQUM7Z0JBQ04sT0FBTyxFQUFFLENBQUMsS0FBSyxDQUFDO2dCQUNoQixPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUM7YUFDbkI7O3dGQUNZLFdBQVcsY0FSWCxLQUFLLGFBQUwsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBpbmplY3QsIE5nTW9kdWxlLCBWaWV3RW5jYXBzdWxhdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQmFzZUNvbXBvbmVudCB9IGZyb20gJ3ByaW1lbmcvYmFzZWNvbXBvbmVudCc7XG5pbXBvcnQgeyBGbHVpZFN0eWxlIH0gZnJvbSAnLi9zdHlsZS9mbHVpZHN0eWxlJztcblxuLyoqXG4gKiBGbHVpZCBpcyBhIGxheW91dCBjb21wb25lbnQgdG8gbWFrZSBkZXNjZW5kYW50IGNvbXBvbmVudHMgc3BhbiBmdWxsIHdpZHRoIG9mIHRoZWlyIGNvbnRhaW5lci5cbiAqIEBncm91cCBDb21wb25lbnRzXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAncC1mbHVpZCcsXG4gICAgdGVtcGxhdGU6IGAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PiBgLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBwcm92aWRlcnM6IFtGbHVpZFN0eWxlXSxcbiAgICBob3N0OiB7XG4gICAgICAgICdbY2xhc3MucC1mbHVpZF0nOiAndHJ1ZSdcbiAgICB9XG59KVxuZXhwb3J0IGNsYXNzIEZsdWlkIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gICAgX2NvbXBvbmVudFN0eWxlID0gaW5qZWN0KEZsdWlkU3R5bGUpO1xufVxuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtGbHVpZF0sXG4gICAgZXhwb3J0czogW0ZsdWlkXVxufSlcbmV4cG9ydCBjbGFzcyBGbHVpZE1vZHVsZSB7fVxuIl19