import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-iftalabel {
    display: block;
    position: relative;
}

.p-iftalabel label {
    position: absolute;
    pointer-events: none;
    top: ${dt('iftalabel.top')};
    transition-property: all;
    transition-timing-function: ease;
    line-height: 1;
    font-size: ${dt('iftalabel.font.size')};
    font-weight: ${dt('iftalabel.font.weight')};
    inset-inline-start: ${dt('iftalabel.position.x')};
    color: ${dt('iftalabel.color')};
    transition-duration: ${dt('iftalabel.transition.duration')};
}

.p-iftalabel .p-inputtext,
.p-iftalabel .p-textarea,
.p-iftalabel .p-select-label,
.p-iftalabel .p-multiselect-label-container,
.p-iftalabel .p-autocomplete-input-multiple,
.p-iftalabel .p-cascadeselect-label,
.p-iftalabel .p-treeselect-label {
    padding-top: ${dt('iftalabel.input.padding.top')};
}

.p-iftalabel:has(.ng-invalid.ng-dirty) label {
    color: ${dt('iftalabel.invalid.color')};
}

.p-iftalabel:has(input:focus) label,
.p-iftalabel:has(input:-webkit-autofill) label,
.p-iftalabel:has(textarea:focus) label,
.p-iftalabel:has(.p-inputwrapper-focus) label {
    color: ${dt('iftalabel.focus.color')};
}

.p-iftalabel .p-inputicon {
    top: ${dt('iftalabel.input.padding.top')};
    transform: translateY(25%);
    margin-top: 0;
}

/*.p-iftalabel .p-placeholder,
.p-iftalabel input::placeholder,
.p-iftalabel .p-inputtext::placeholder {
    opacity: 0;
    transition-property: all;
    transition-timing-function: ease;
}

.p-iftalabel .p-focus .p-placeholder,
.p-iftalabel input:focus::placeholder,
.p-iftalabel .p-inputtext:focus::placeholder {
    opacity: 1;
    transition-property: all;
    transition-timing-function: ease;
}*/
`;
const classes = {
    root: 'p-iftalabel'
};
export class IftaLabelStyle extends BaseStyle {
    name = 'iftalabel';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵIftaLabelStyle_BaseFactory; return function IftaLabelStyle_Factory(__ngFactoryType__) { return (ɵIftaLabelStyle_BaseFactory || (ɵIftaLabelStyle_BaseFactory = i0.ɵɵgetInheritedFactory(IftaLabelStyle)))(__ngFactoryType__ || IftaLabelStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: IftaLabelStyle, factory: IftaLabelStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(IftaLabelStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * IftaLabel visually integrates a label within its form element.
 *
 * [Live Demo](https://www.primeng.org/iftalabel/)
 *
 * @module iftalabelstyle
 *
 */
export var IftaLabelClasses;
(function (IftaLabelClasses) {
    /**
     * Class name of the root element
     */
    IftaLabelClasses["root"] = "p-iftalabel";
})(IftaLabelClasses || (IftaLabelClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWZ0YWxhYmVsc3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvaWZ0YWxhYmVsL3N0eWxlL2lmdGFsYWJlbHN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7Ozs7Ozs7O1dBU2YsRUFBRSxDQUFDLGVBQWUsQ0FBQzs7OztpQkFJYixFQUFFLENBQUMscUJBQXFCLENBQUM7bUJBQ3ZCLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQzswQkFDcEIsRUFBRSxDQUFDLHNCQUFzQixDQUFDO2FBQ3ZDLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQzsyQkFDUCxFQUFFLENBQUMsK0JBQStCLENBQUM7Ozs7Ozs7Ozs7bUJBVTNDLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQzs7OzthQUl2QyxFQUFFLENBQUMseUJBQXlCLENBQUM7Ozs7Ozs7YUFPN0IsRUFBRSxDQUFDLHVCQUF1QixDQUFDOzs7O1dBSTdCLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQjNDLENBQUM7QUFFRixNQUFNLE9BQU8sR0FBRztJQUNaLElBQUksRUFBRSxhQUFhO0NBQ3RCLENBQUM7QUFHRixNQUFNLE9BQU8sY0FBZSxTQUFRLFNBQVM7SUFDekMsSUFBSSxHQUFHLFdBQVcsQ0FBQztJQUVuQixLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsT0FBTyxHQUFHLE9BQU8sQ0FBQztxT0FMVCxjQUFjLHlCQUFkLGNBQWM7Z0VBQWQsY0FBYyxXQUFkLGNBQWM7O2lGQUFkLGNBQWM7Y0FEMUIsVUFBVTs7QUFTWDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sQ0FBTixJQUFZLGdCQUtYO0FBTEQsV0FBWSxnQkFBZ0I7SUFDeEI7O09BRUc7SUFDSCx3Q0FBb0IsQ0FBQTtBQUN4QixDQUFDLEVBTFcsZ0JBQWdCLEtBQWhCLGdCQUFnQixRQUszQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTdHlsZSB9IGZyb20gJ3ByaW1lbmcvYmFzZSc7XG5cbmNvbnN0IHRoZW1lID0gKHsgZHQgfSkgPT4gYFxuLnAtaWZ0YWxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5wLWlmdGFsYWJlbCBsYWJlbCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgIHRvcDogJHtkdCgnaWZ0YWxhYmVsLnRvcCcpfTtcbiAgICB0cmFuc2l0aW9uLXByb3BlcnR5OiBhbGw7XG4gICAgdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgZm9udC1zaXplOiAke2R0KCdpZnRhbGFiZWwuZm9udC5zaXplJyl9O1xuICAgIGZvbnQtd2VpZ2h0OiAke2R0KCdpZnRhbGFiZWwuZm9udC53ZWlnaHQnKX07XG4gICAgaW5zZXQtaW5saW5lLXN0YXJ0OiAke2R0KCdpZnRhbGFiZWwucG9zaXRpb24ueCcpfTtcbiAgICBjb2xvcjogJHtkdCgnaWZ0YWxhYmVsLmNvbG9yJyl9O1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246ICR7ZHQoJ2lmdGFsYWJlbC50cmFuc2l0aW9uLmR1cmF0aW9uJyl9O1xufVxuXG4ucC1pZnRhbGFiZWwgLnAtaW5wdXR0ZXh0LFxuLnAtaWZ0YWxhYmVsIC5wLXRleHRhcmVhLFxuLnAtaWZ0YWxhYmVsIC5wLXNlbGVjdC1sYWJlbCxcbi5wLWlmdGFsYWJlbCAucC1tdWx0aXNlbGVjdC1sYWJlbC1jb250YWluZXIsXG4ucC1pZnRhbGFiZWwgLnAtYXV0b2NvbXBsZXRlLWlucHV0LW11bHRpcGxlLFxuLnAtaWZ0YWxhYmVsIC5wLWNhc2NhZGVzZWxlY3QtbGFiZWwsXG4ucC1pZnRhbGFiZWwgLnAtdHJlZXNlbGVjdC1sYWJlbCB7XG4gICAgcGFkZGluZy10b3A6ICR7ZHQoJ2lmdGFsYWJlbC5pbnB1dC5wYWRkaW5nLnRvcCcpfTtcbn1cblxuLnAtaWZ0YWxhYmVsOmhhcygubmctaW52YWxpZC5uZy1kaXJ0eSkgbGFiZWwge1xuICAgIGNvbG9yOiAke2R0KCdpZnRhbGFiZWwuaW52YWxpZC5jb2xvcicpfTtcbn1cblxuLnAtaWZ0YWxhYmVsOmhhcyhpbnB1dDpmb2N1cykgbGFiZWwsXG4ucC1pZnRhbGFiZWw6aGFzKGlucHV0Oi13ZWJraXQtYXV0b2ZpbGwpIGxhYmVsLFxuLnAtaWZ0YWxhYmVsOmhhcyh0ZXh0YXJlYTpmb2N1cykgbGFiZWwsXG4ucC1pZnRhbGFiZWw6aGFzKC5wLWlucHV0d3JhcHBlci1mb2N1cykgbGFiZWwge1xuICAgIGNvbG9yOiAke2R0KCdpZnRhbGFiZWwuZm9jdXMuY29sb3InKX07XG59XG5cbi5wLWlmdGFsYWJlbCAucC1pbnB1dGljb24ge1xuICAgIHRvcDogJHtkdCgnaWZ0YWxhYmVsLmlucHV0LnBhZGRpbmcudG9wJyl9O1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgyNSUpO1xuICAgIG1hcmdpbi10b3A6IDA7XG59XG5cbi8qLnAtaWZ0YWxhYmVsIC5wLXBsYWNlaG9sZGVyLFxuLnAtaWZ0YWxhYmVsIGlucHV0OjpwbGFjZWhvbGRlcixcbi5wLWlmdGFsYWJlbCAucC1pbnB1dHRleHQ6OnBsYWNlaG9sZGVyIHtcbiAgICBvcGFjaXR5OiAwO1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbn1cblxuLnAtaWZ0YWxhYmVsIC5wLWZvY3VzIC5wLXBsYWNlaG9sZGVyLFxuLnAtaWZ0YWxhYmVsIGlucHV0OmZvY3VzOjpwbGFjZWhvbGRlcixcbi5wLWlmdGFsYWJlbCAucC1pbnB1dHRleHQ6Zm9jdXM6OnBsYWNlaG9sZGVyIHtcbiAgICBvcGFjaXR5OiAxO1xuICAgIHRyYW5zaXRpb24tcHJvcGVydHk6IGFsbDtcbiAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcbn0qL1xuYDtcblxuY29uc3QgY2xhc3NlcyA9IHtcbiAgICByb290OiAncC1pZnRhbGFiZWwnXG59O1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSWZ0YUxhYmVsU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge1xuICAgIG5hbWUgPSAnaWZ0YWxhYmVsJztcblxuICAgIHRoZW1lID0gdGhlbWU7XG5cbiAgICBjbGFzc2VzID0gY2xhc3Nlcztcbn1cblxuLyoqXG4gKlxuICogSWZ0YUxhYmVsIHZpc3VhbGx5IGludGVncmF0ZXMgYSBsYWJlbCB3aXRoaW4gaXRzIGZvcm0gZWxlbWVudC5cbiAqXG4gKiBbTGl2ZSBEZW1vXShodHRwczovL3d3dy5wcmltZW5nLm9yZy9pZnRhbGFiZWwvKVxuICpcbiAqIEBtb2R1bGUgaWZ0YWxhYmVsc3R5bGVcbiAqXG4gKi9cbmV4cG9ydCBlbnVtIElmdGFMYWJlbENsYXNzZXMge1xuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIHJvb3QgZWxlbWVudFxuICAgICAqL1xuICAgIHJvb3QgPSAncC1pZnRhbGFiZWwnXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSWZ0YUxhYmVsU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge31cbiJdfQ==