import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-popover {
    margin-top: ${dt('popover.gutter')};
    background: ${dt('popover.background')};
    color: ${dt('popover.color')};
    border: 1px solid ${dt('popover.border.color')};
    border-radius: ${dt('popover.border.radius')};
    box-shadow: ${dt('popover.shadow')};
    position: absolute
}

.p-popover-content {
    padding: ${dt('popover.content.padding')};
}

.p-popover-flipped {
    margin-top: calc(${dt('popover.gutter')} * -1);
    margin-bottom: ${dt('popover.gutter')};
}

.p-popover-enter-from {
    opacity: 0;
    transform: scaleY(0.8);
}

.p-popover-leave-to {
    opacity: 0;
}

.p-popover-enter-active {
    transition: transform 0.12s cubic-bezier(0, 0, 0.2, 1), opacity 0.12s cubic-bezier(0, 0, 0.2, 1);
}

.p-popover-leave-active {
    transition: opacity 0.1s linear;
}

.p-popover:after,
.p-popover:before {
    bottom: 100%;
    left: ${dt('popover.arrow.offset')};
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
}

.p-popover:after {
    border-width: calc(${dt('popover.gutter')} - 2px);
    margin-left: calc(-1 * (${dt('popover.gutter')} - 2px));
    border-style: solid;
    border-color: transparent;
    border-bottom-color: ${dt('popover.background')};
}

.p-popover:before {
    border-width: ${dt('popover.gutter')};
    margin-left: calc(-1 * ${dt('popover.gutter')});
    border-style: solid;
    border-color: transparent;
    border-bottom-color: ${dt('popover.border.color')};
}

.p-popover-flipped:after,
.p-popover-flipped:before {
    bottom: auto;
    top: 100%;
}

.p-popover.p-popover-flipped:after {
    border-bottom-color: transparent;
    border-top-color: ${dt('popover.background')};
}

.p-popover.p-popover-flipped:before {
    border-bottom-color: transparent;
    border-top-color: ${dt('popover.border.color')};
}

`;
const classes = {
    root: 'p-popover p-component',
    content: 'p-popover-content'
};
export class PopoverStyle extends BaseStyle {
    name = 'popover';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵPopoverStyle_BaseFactory; return function PopoverStyle_Factory(__ngFactoryType__) { return (ɵPopoverStyle_BaseFactory || (ɵPopoverStyle_BaseFactory = i0.ɵɵgetInheritedFactory(PopoverStyle)))(__ngFactoryType__ || PopoverStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PopoverStyle, factory: PopoverStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(PopoverStyle, [{
        type: Injectable
    }], null, null); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3ZlcnN0eWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3BvcG92ZXIvc3R5bGUvcG9wb3ZlcnN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7a0JBRVIsRUFBRSxDQUFDLGdCQUFnQixDQUFDO2tCQUNwQixFQUFFLENBQUMsb0JBQW9CLENBQUM7YUFDN0IsRUFBRSxDQUFDLGVBQWUsQ0FBQzt3QkFDUixFQUFFLENBQUMsc0JBQXNCLENBQUM7cUJBQzdCLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztrQkFDOUIsRUFBRSxDQUFDLGdCQUFnQixDQUFDOzs7OztlQUt2QixFQUFFLENBQUMseUJBQXlCLENBQUM7Ozs7dUJBSXJCLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQztxQkFDdEIsRUFBRSxDQUFDLGdCQUFnQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQXVCN0IsRUFBRSxDQUFDLHNCQUFzQixDQUFDOzs7Ozs7Ozs7eUJBU2IsRUFBRSxDQUFDLGdCQUFnQixDQUFDOzhCQUNmLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQzs7OzJCQUd2QixFQUFFLENBQUMsb0JBQW9CLENBQUM7Ozs7b0JBSS9CLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQzs2QkFDWCxFQUFFLENBQUMsZ0JBQWdCLENBQUM7OzsyQkFHdEIsRUFBRSxDQUFDLHNCQUFzQixDQUFDOzs7Ozs7Ozs7Ozt3QkFXN0IsRUFBRSxDQUFDLG9CQUFvQixDQUFDOzs7Ozt3QkFLeEIsRUFBRSxDQUFDLHNCQUFzQixDQUFDOzs7Q0FHakQsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFHO0lBQ1osSUFBSSxFQUFFLHVCQUF1QjtJQUM3QixPQUFPLEVBQUUsbUJBQW1CO0NBQy9CLENBQUM7QUFHRixNQUFNLE9BQU8sWUFBYSxTQUFRLFNBQVM7SUFDdkMsSUFBSSxHQUFHLFNBQVMsQ0FBQztJQUVqQixLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsT0FBTyxHQUFHLE9BQU8sQ0FBQzs2TkFMVCxZQUFZLHlCQUFaLFlBQVk7Z0VBQVosWUFBWSxXQUFaLFlBQVk7O2lGQUFaLFlBQVk7Y0FEeEIsVUFBVSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTdHlsZSB9IGZyb20gJ3ByaW1lbmcvYmFzZSc7XG5cbmNvbnN0IHRoZW1lID0gKHsgZHQgfSkgPT4gYFxuLnAtcG9wb3ZlciB7XG4gICAgbWFyZ2luLXRvcDogJHtkdCgncG9wb3Zlci5ndXR0ZXInKX07XG4gICAgYmFja2dyb3VuZDogJHtkdCgncG9wb3Zlci5iYWNrZ3JvdW5kJyl9O1xuICAgIGNvbG9yOiAke2R0KCdwb3BvdmVyLmNvbG9yJyl9O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICR7ZHQoJ3BvcG92ZXIuYm9yZGVyLmNvbG9yJyl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZHQoJ3BvcG92ZXIuYm9yZGVyLnJhZGl1cycpfTtcbiAgICBib3gtc2hhZG93OiAke2R0KCdwb3BvdmVyLnNoYWRvdycpfTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGVcbn1cblxuLnAtcG9wb3Zlci1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAke2R0KCdwb3BvdmVyLmNvbnRlbnQucGFkZGluZycpfTtcbn1cblxuLnAtcG9wb3Zlci1mbGlwcGVkIHtcbiAgICBtYXJnaW4tdG9wOiBjYWxjKCR7ZHQoJ3BvcG92ZXIuZ3V0dGVyJyl9ICogLTEpO1xuICAgIG1hcmdpbi1ib3R0b206ICR7ZHQoJ3BvcG92ZXIuZ3V0dGVyJyl9O1xufVxuXG4ucC1wb3BvdmVyLWVudGVyLWZyb20ge1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdHJhbnNmb3JtOiBzY2FsZVkoMC44KTtcbn1cblxuLnAtcG9wb3Zlci1sZWF2ZS10byB7XG4gICAgb3BhY2l0eTogMDtcbn1cblxuLnAtcG9wb3Zlci1lbnRlci1hY3RpdmUge1xuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjEycyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKSwgb3BhY2l0eSAwLjEycyBjdWJpYy1iZXppZXIoMCwgMCwgMC4yLCAxKTtcbn1cblxuLnAtcG9wb3Zlci1sZWF2ZS1hY3RpdmUge1xuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC4xcyBsaW5lYXI7XG59XG5cbi5wLXBvcG92ZXI6YWZ0ZXIsXG4ucC1wb3BvdmVyOmJlZm9yZSB7XG4gICAgYm90dG9tOiAxMDAlO1xuICAgIGxlZnQ6ICR7ZHQoJ3BvcG92ZXIuYXJyb3cub2Zmc2V0Jyl9O1xuICAgIGNvbnRlbnQ6IFwiIFwiO1xuICAgIGhlaWdodDogMDtcbiAgICB3aWR0aDogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG59XG5cbi5wLXBvcG92ZXI6YWZ0ZXIge1xuICAgIGJvcmRlci13aWR0aDogY2FsYygke2R0KCdwb3BvdmVyLmd1dHRlcicpfSAtIDJweCk7XG4gICAgbWFyZ2luLWxlZnQ6IGNhbGMoLTEgKiAoJHtkdCgncG9wb3Zlci5ndXR0ZXInKX0gLSAycHgpKTtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJHtkdCgncG9wb3Zlci5iYWNrZ3JvdW5kJyl9O1xufVxuXG4ucC1wb3BvdmVyOmJlZm9yZSB7XG4gICAgYm9yZGVyLXdpZHRoOiAke2R0KCdwb3BvdmVyLmd1dHRlcicpfTtcbiAgICBtYXJnaW4tbGVmdDogY2FsYygtMSAqICR7ZHQoJ3BvcG92ZXIuZ3V0dGVyJyl9KTtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJHtkdCgncG9wb3Zlci5ib3JkZXIuY29sb3InKX07XG59XG5cbi5wLXBvcG92ZXItZmxpcHBlZDphZnRlcixcbi5wLXBvcG92ZXItZmxpcHBlZDpiZWZvcmUge1xuICAgIGJvdHRvbTogYXV0bztcbiAgICB0b3A6IDEwMCU7XG59XG5cbi5wLXBvcG92ZXIucC1wb3BvdmVyLWZsaXBwZWQ6YWZ0ZXIge1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci10b3AtY29sb3I6ICR7ZHQoJ3BvcG92ZXIuYmFja2dyb3VuZCcpfTtcbn1cblxuLnAtcG9wb3Zlci5wLXBvcG92ZXItZmxpcHBlZDpiZWZvcmUge1xuICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIGJvcmRlci10b3AtY29sb3I6ICR7ZHQoJ3BvcG92ZXIuYm9yZGVyLmNvbG9yJyl9O1xufVxuXG5gO1xuXG5jb25zdCBjbGFzc2VzID0ge1xuICAgIHJvb3Q6ICdwLXBvcG92ZXIgcC1jb21wb25lbnQnLFxuICAgIGNvbnRlbnQ6ICdwLXBvcG92ZXItY29udGVudCdcbn07XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQb3BvdmVyU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge1xuICAgIG5hbWUgPSAncG9wb3Zlcic7XG5cbiAgICB0aGVtZSA9IHRoZW1lO1xuXG4gICAgY2xhc3NlcyA9IGNsYXNzZXM7XG59XG4iXX0=