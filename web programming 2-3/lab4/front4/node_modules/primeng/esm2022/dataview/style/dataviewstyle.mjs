import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
.p-dataview {
    border-color: ${dt('dataview.border.color')};
    border-width: ${dt('dataview.border.width')};
    border-style: solid;
    border-radius: ${dt('dataview.border.radius')};
    padding: ${dt('dataview.padding')};
}

.p-dataview-header {
    background: ${dt('dataview.header.background')};
    color: ${dt('dataview.header.color')};
    border-color: ${dt('dataview.header.border.color')};
    border-width: ${dt('dataview.header.border.width')};
    border-style: solid;
    padding: ${dt('dataview.header.padding')};
    border-radius: ${dt('dataview.header.border.radius')};
}

.p-dataview-content {
    background: ${dt('dataview.content.background')};
    border-color: ${dt('dataview.content.border.color')};
    border-width: ${dt('dataview.content.border.width')};
    border-style: solid;
    color: ${dt('dataview.content.color')};
    padding: ${dt('dataview.content.padding')};
    border-radius: ${dt('dataview.content.border.radius')};
}

.p-dataview-footer {
    background: ${dt('dataview.footer.background')};
    color: ${dt('dataview.footer.color')};
    border-color: ${dt('dataview.footer.border.color')};
    border-width: ${dt('dataview.footer.border.width')};
    border-style: solid;
    padding: ${dt('dataview.footer.padding')};
    border-radius: ${dt('dataview.footer.border.radius')};
}

.p-dataview-paginator-top {
    border-width: ${dt('dataview.paginator.top.border.width')};
    border-color: ${dt('dataview.paginator.top.border.color')};
    border-style: solid;
}

.p-dataview-paginator-bottom {
    border-width: ${dt('dataview.paginator.bottom.border.width')};
    border-color: ${dt('dataview.paginator.bottom.border.color')};
    border-style: solid;
}
`;
const classes = {
    root: ({ props }) => [
        'p-dataview p-component',
        {
            'p-dataview-list': props.layout === 'list',
            'p-dataview-grid': props.layout === 'grid'
        }
    ],
    header: 'p-dataview-header',
    pcPaginator: ({ position }) => 'p-dataview-paginator-' + position,
    content: 'p-dataview-content',
    emptyMessage: 'p-dataview-empty-message', // TODO: remove?
    footer: 'p-dataview-footer'
};
export class DataViewStyle extends BaseStyle {
    name = 'dataview';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵDataViewStyle_BaseFactory; return function DataViewStyle_Factory(__ngFactoryType__) { return (ɵDataViewStyle_BaseFactory || (ɵDataViewStyle_BaseFactory = i0.ɵɵgetInheritedFactory(DataViewStyle)))(__ngFactoryType__ || DataViewStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: DataViewStyle, factory: DataViewStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(DataViewStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * DataView displays data in grid or list layout with pagination and sorting features.
 *
 * [Live Demo](https://www.primeng.org/dataview/)
 *
 * @module dataviewstyle
 *
 */
export var DataViewClasses;
(function (DataViewClasses) {
    /**
     * Class name of the root element
     */
    DataViewClasses["root"] = "p-dataview";
    /**
     * Class name of the header element
     */
    DataViewClasses["header"] = "p-dataview-header";
    /**
     * Class name of the paginator element
     */
    DataViewClasses["pcPaginator"] = "p-dataview-paginator-[position]";
    /**
     * Class name of the content element
     */
    DataViewClasses["content"] = "p-dataview-content";
    /**
     * Class name of the empty message element
     */
    DataViewClasses["emptyMessage"] = "p-dataview-empty-message";
    /**
     * Class name of the footer element
     */
    DataViewClasses["footer"] = "p-dataview-footer";
})(DataViewClasses || (DataViewClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXZpZXdzdHlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9kYXRhdmlldy9zdHlsZS9kYXRhdmlld3N0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7b0JBRU4sRUFBRSxDQUFDLHVCQUF1QixDQUFDO29CQUMzQixFQUFFLENBQUMsdUJBQXVCLENBQUM7O3FCQUUxQixFQUFFLENBQUMsd0JBQXdCLENBQUM7ZUFDbEMsRUFBRSxDQUFDLGtCQUFrQixDQUFDOzs7O2tCQUluQixFQUFFLENBQUMsNEJBQTRCLENBQUM7YUFDckMsRUFBRSxDQUFDLHVCQUF1QixDQUFDO29CQUNwQixFQUFFLENBQUMsOEJBQThCLENBQUM7b0JBQ2xDLEVBQUUsQ0FBQyw4QkFBOEIsQ0FBQzs7ZUFFdkMsRUFBRSxDQUFDLHlCQUF5QixDQUFDO3FCQUN2QixFQUFFLENBQUMsK0JBQStCLENBQUM7Ozs7a0JBSXRDLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQztvQkFDL0IsRUFBRSxDQUFDLCtCQUErQixDQUFDO29CQUNuQyxFQUFFLENBQUMsK0JBQStCLENBQUM7O2FBRTFDLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQztlQUMxQixFQUFFLENBQUMsMEJBQTBCLENBQUM7cUJBQ3hCLEVBQUUsQ0FBQyxnQ0FBZ0MsQ0FBQzs7OztrQkFJdkMsRUFBRSxDQUFDLDRCQUE0QixDQUFDO2FBQ3JDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztvQkFDcEIsRUFBRSxDQUFDLDhCQUE4QixDQUFDO29CQUNsQyxFQUFFLENBQUMsOEJBQThCLENBQUM7O2VBRXZDLEVBQUUsQ0FBQyx5QkFBeUIsQ0FBQztxQkFDdkIsRUFBRSxDQUFDLCtCQUErQixDQUFDOzs7O29CQUlwQyxFQUFFLENBQUMscUNBQXFDLENBQUM7b0JBQ3pDLEVBQUUsQ0FBQyxxQ0FBcUMsQ0FBQzs7Ozs7b0JBS3pDLEVBQUUsQ0FBQyx3Q0FBd0MsQ0FBQztvQkFDNUMsRUFBRSxDQUFDLHdDQUF3QyxDQUFDOzs7Q0FHL0QsQ0FBQztBQUVGLE1BQU0sT0FBTyxHQUFHO0lBQ1osSUFBSSxFQUFFLENBQUMsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLENBQUM7UUFDakIsd0JBQXdCO1FBQ3hCO1lBQ0ksaUJBQWlCLEVBQUUsS0FBSyxDQUFDLE1BQU0sS0FBSyxNQUFNO1lBQzFDLGlCQUFpQixFQUFFLEtBQUssQ0FBQyxNQUFNLEtBQUssTUFBTTtTQUM3QztLQUNKO0lBQ0QsTUFBTSxFQUFFLG1CQUFtQjtJQUMzQixXQUFXLEVBQUUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsQ0FBQyx1QkFBdUIsR0FBRyxRQUFRO0lBQ2pFLE9BQU8sRUFBRSxvQkFBb0I7SUFDN0IsWUFBWSxFQUFFLDBCQUEwQixFQUFFLGdCQUFnQjtJQUMxRCxNQUFNLEVBQUUsbUJBQW1CO0NBQzlCLENBQUM7QUFHRixNQUFNLE9BQU8sYUFBYyxTQUFRLFNBQVM7SUFDeEMsSUFBSSxHQUFHLFVBQVUsQ0FBQztJQUVsQixLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsT0FBTyxHQUFHLE9BQU8sQ0FBQztpT0FMVCxhQUFhLHlCQUFiLGFBQWE7Z0VBQWIsYUFBYSxXQUFiLGFBQWE7O2lGQUFiLGFBQWE7Y0FEekIsVUFBVTs7QUFTWDs7Ozs7Ozs7R0FRRztBQUNILE1BQU0sQ0FBTixJQUFZLGVBeUJYO0FBekJELFdBQVksZUFBZTtJQUN2Qjs7T0FFRztJQUNILHNDQUFtQixDQUFBO0lBQ25COztPQUVHO0lBQ0gsK0NBQTRCLENBQUE7SUFDNUI7O09BRUc7SUFDSCxrRUFBK0MsQ0FBQTtJQUMvQzs7T0FFRztJQUNILGlEQUE4QixDQUFBO0lBQzlCOztPQUVHO0lBQ0gsNERBQXlDLENBQUE7SUFDekM7O09BRUc7SUFDSCwrQ0FBNEIsQ0FBQTtBQUNoQyxDQUFDLEVBekJXLGVBQWUsS0FBZixlQUFlLFFBeUIxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTdHlsZSB9IGZyb20gJ3ByaW1lbmcvYmFzZSc7XG5cbmNvbnN0IHRoZW1lID0gKHsgZHQgfSkgPT4gYFxuLnAtZGF0YXZpZXcge1xuICAgIGJvcmRlci1jb2xvcjogJHtkdCgnZGF0YXZpZXcuYm9yZGVyLmNvbG9yJyl9O1xuICAgIGJvcmRlci13aWR0aDogJHtkdCgnZGF0YXZpZXcuYm9yZGVyLndpZHRoJyl9O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgYm9yZGVyLXJhZGl1czogJHtkdCgnZGF0YXZpZXcuYm9yZGVyLnJhZGl1cycpfTtcbiAgICBwYWRkaW5nOiAke2R0KCdkYXRhdmlldy5wYWRkaW5nJyl9O1xufVxuXG4ucC1kYXRhdmlldy1oZWFkZXIge1xuICAgIGJhY2tncm91bmQ6ICR7ZHQoJ2RhdGF2aWV3LmhlYWRlci5iYWNrZ3JvdW5kJyl9O1xuICAgIGNvbG9yOiAke2R0KCdkYXRhdmlldy5oZWFkZXIuY29sb3InKX07XG4gICAgYm9yZGVyLWNvbG9yOiAke2R0KCdkYXRhdmlldy5oZWFkZXIuYm9yZGVyLmNvbG9yJyl9O1xuICAgIGJvcmRlci13aWR0aDogJHtkdCgnZGF0YXZpZXcuaGVhZGVyLmJvcmRlci53aWR0aCcpfTtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIHBhZGRpbmc6ICR7ZHQoJ2RhdGF2aWV3LmhlYWRlci5wYWRkaW5nJyl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZHQoJ2RhdGF2aWV3LmhlYWRlci5ib3JkZXIucmFkaXVzJyl9O1xufVxuXG4ucC1kYXRhdmlldy1jb250ZW50IHtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCdkYXRhdmlldy5jb250ZW50LmJhY2tncm91bmQnKX07XG4gICAgYm9yZGVyLWNvbG9yOiAke2R0KCdkYXRhdmlldy5jb250ZW50LmJvcmRlci5jb2xvcicpfTtcbiAgICBib3JkZXItd2lkdGg6ICR7ZHQoJ2RhdGF2aWV3LmNvbnRlbnQuYm9yZGVyLndpZHRoJyl9O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG4gICAgY29sb3I6ICR7ZHQoJ2RhdGF2aWV3LmNvbnRlbnQuY29sb3InKX07XG4gICAgcGFkZGluZzogJHtkdCgnZGF0YXZpZXcuY29udGVudC5wYWRkaW5nJyl9O1xuICAgIGJvcmRlci1yYWRpdXM6ICR7ZHQoJ2RhdGF2aWV3LmNvbnRlbnQuYm9yZGVyLnJhZGl1cycpfTtcbn1cblxuLnAtZGF0YXZpZXctZm9vdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiAke2R0KCdkYXRhdmlldy5mb290ZXIuYmFja2dyb3VuZCcpfTtcbiAgICBjb2xvcjogJHtkdCgnZGF0YXZpZXcuZm9vdGVyLmNvbG9yJyl9O1xuICAgIGJvcmRlci1jb2xvcjogJHtkdCgnZGF0YXZpZXcuZm9vdGVyLmJvcmRlci5jb2xvcicpfTtcbiAgICBib3JkZXItd2lkdGg6ICR7ZHQoJ2RhdGF2aWV3LmZvb3Rlci5ib3JkZXIud2lkdGgnKX07XG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgICBwYWRkaW5nOiAke2R0KCdkYXRhdmlldy5mb290ZXIucGFkZGluZycpfTtcbiAgICBib3JkZXItcmFkaXVzOiAke2R0KCdkYXRhdmlldy5mb290ZXIuYm9yZGVyLnJhZGl1cycpfTtcbn1cblxuLnAtZGF0YXZpZXctcGFnaW5hdG9yLXRvcCB7XG4gICAgYm9yZGVyLXdpZHRoOiAke2R0KCdkYXRhdmlldy5wYWdpbmF0b3IudG9wLmJvcmRlci53aWR0aCcpfTtcbiAgICBib3JkZXItY29sb3I6ICR7ZHQoJ2RhdGF2aWV3LnBhZ2luYXRvci50b3AuYm9yZGVyLmNvbG9yJyl9O1xuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XG59XG5cbi5wLWRhdGF2aWV3LXBhZ2luYXRvci1ib3R0b20ge1xuICAgIGJvcmRlci13aWR0aDogJHtkdCgnZGF0YXZpZXcucGFnaW5hdG9yLmJvdHRvbS5ib3JkZXIud2lkdGgnKX07XG4gICAgYm9yZGVyLWNvbG9yOiAke2R0KCdkYXRhdmlldy5wYWdpbmF0b3IuYm90dG9tLmJvcmRlci5jb2xvcicpfTtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xufVxuYDtcblxuY29uc3QgY2xhc3NlcyA9IHtcbiAgICByb290OiAoeyBwcm9wcyB9KSA9PiBbXG4gICAgICAgICdwLWRhdGF2aWV3IHAtY29tcG9uZW50JyxcbiAgICAgICAge1xuICAgICAgICAgICAgJ3AtZGF0YXZpZXctbGlzdCc6IHByb3BzLmxheW91dCA9PT0gJ2xpc3QnLFxuICAgICAgICAgICAgJ3AtZGF0YXZpZXctZ3JpZCc6IHByb3BzLmxheW91dCA9PT0gJ2dyaWQnXG4gICAgICAgIH1cbiAgICBdLFxuICAgIGhlYWRlcjogJ3AtZGF0YXZpZXctaGVhZGVyJyxcbiAgICBwY1BhZ2luYXRvcjogKHsgcG9zaXRpb24gfSkgPT4gJ3AtZGF0YXZpZXctcGFnaW5hdG9yLScgKyBwb3NpdGlvbixcbiAgICBjb250ZW50OiAncC1kYXRhdmlldy1jb250ZW50JyxcbiAgICBlbXB0eU1lc3NhZ2U6ICdwLWRhdGF2aWV3LWVtcHR5LW1lc3NhZ2UnLCAvLyBUT0RPOiByZW1vdmU/XG4gICAgZm9vdGVyOiAncC1kYXRhdmlldy1mb290ZXInXG59O1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgRGF0YVZpZXdTdHlsZSBleHRlbmRzIEJhc2VTdHlsZSB7XG4gICAgbmFtZSA9ICdkYXRhdmlldyc7XG5cbiAgICB0aGVtZSA9IHRoZW1lO1xuXG4gICAgY2xhc3NlcyA9IGNsYXNzZXM7XG59XG5cbi8qKlxuICpcbiAqIERhdGFWaWV3IGRpc3BsYXlzIGRhdGEgaW4gZ3JpZCBvciBsaXN0IGxheW91dCB3aXRoIHBhZ2luYXRpb24gYW5kIHNvcnRpbmcgZmVhdHVyZXMuXG4gKlxuICogW0xpdmUgRGVtb10oaHR0cHM6Ly93d3cucHJpbWVuZy5vcmcvZGF0YXZpZXcvKVxuICpcbiAqIEBtb2R1bGUgZGF0YXZpZXdzdHlsZVxuICpcbiAqL1xuZXhwb3J0IGVudW0gRGF0YVZpZXdDbGFzc2VzIHtcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSByb290IGVsZW1lbnRcbiAgICAgKi9cbiAgICByb290ID0gJ3AtZGF0YXZpZXcnLFxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIGhlYWRlciBlbGVtZW50XG4gICAgICovXG4gICAgaGVhZGVyID0gJ3AtZGF0YXZpZXctaGVhZGVyJyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBwYWdpbmF0b3IgZWxlbWVudFxuICAgICAqL1xuICAgIHBjUGFnaW5hdG9yID0gJ3AtZGF0YXZpZXctcGFnaW5hdG9yLVtwb3NpdGlvbl0nLFxuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIGNvbnRlbnQgZWxlbWVudFxuICAgICAqL1xuICAgIGNvbnRlbnQgPSAncC1kYXRhdmlldy1jb250ZW50JyxcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSBlbXB0eSBtZXNzYWdlIGVsZW1lbnRcbiAgICAgKi9cbiAgICBlbXB0eU1lc3NhZ2UgPSAncC1kYXRhdmlldy1lbXB0eS1tZXNzYWdlJywgLy8gVE9ETzogcmVtb3ZlP1xuICAgIC8qKlxuICAgICAqIENsYXNzIG5hbWUgb2YgdGhlIGZvb3RlciBlbGVtZW50XG4gICAgICovXG4gICAgZm9vdGVyID0gJ3AtZGF0YXZpZXctZm9vdGVyJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERhdGFWaWV3U3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge31cbiJdfQ==