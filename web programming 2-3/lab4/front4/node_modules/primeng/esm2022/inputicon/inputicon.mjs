import { CommonModule } from '@angular/common';
import { ChangeDetectionStrategy, Component, HostBinding, inject, Input, NgModule, ViewEncapsulation } from '@angular/core';
import { SharedModule } from 'primeng/api';
import { BaseComponent } from 'primeng/basecomponent';
import { InputIconStyle } from './style/inputiconstyle';
import * as i0 from "@angular/core";
const _c0 = ["*"];
/**
 * InputIcon displays an icon.
 * @group Components
 */
export class InputIcon extends BaseComponent {
    /**
     * Style class of the element.
     * @group Props
     */
    styleClass;
    get hostClasses() {
        return this.styleClass;
    }
    _componentStyle = inject(InputIconStyle);
    static ɵfac = /*@__PURE__*/ (() => { let ɵInputIcon_BaseFactory; return function InputIcon_Factory(__ngFactoryType__) { return (ɵInputIcon_BaseFactory || (ɵInputIcon_BaseFactory = i0.ɵɵgetInheritedFactory(InputIcon)))(__ngFactoryType__ || InputIcon); }; })();
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputIcon, selectors: [["p-inputicon"], ["p-inputIcon"]], hostVars: 4, hostBindings: function InputIcon_HostBindings(rf, ctx) { if (rf & 2) {
            i0.ɵɵclassMap(ctx.hostClasses);
            i0.ɵɵclassProp("p-inputicon", true);
        } }, inputs: { styleClass: "styleClass" }, standalone: true, features: [i0.ɵɵProvidersFeature([InputIconStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputIcon_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵprojection(0);
        } }, dependencies: [CommonModule, SharedModule], encapsulation: 2, changeDetection: 0 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(InputIcon, [{
        type: Component,
        args: [{
                selector: 'p-inputicon, p-inputIcon',
                standalone: true,
                imports: [CommonModule, SharedModule],
                template: `<ng-content></ng-content>`,
                encapsulation: ViewEncapsulation.None,
                changeDetection: ChangeDetectionStrategy.OnPush,
                providers: [InputIconStyle],
                host: {
                    '[class]': 'styleClass',
                    '[class.p-inputicon]': 'true'
                }
            }]
    }], null, { styleClass: [{
            type: Input
        }], hostClasses: [{
            type: HostBinding,
            args: ['class']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(InputIcon, { className: "InputIcon" }); })();
export class InputIconModule {
    static ɵfac = function InputIconModule_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || InputIconModule)(); };
    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: InputIconModule });
    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [InputIcon, SharedModule, SharedModule] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(InputIconModule, [{
        type: NgModule,
        args: [{
                imports: [InputIcon, SharedModule],
                exports: [InputIcon, SharedModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(InputIconModule, { imports: [InputIcon, SharedModule], exports: [InputIcon, SharedModule] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRpY29uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2lucHV0aWNvbi9pbnB1dGljb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBRXhEOzs7R0FHRztBQWNILE1BQU0sT0FBTyxTQUFVLFNBQVEsYUFBYTtJQUN4Qzs7O09BR0c7SUFDTSxVQUFVLENBQXFCO0lBRXhDLElBQTBCLFdBQVc7UUFDakMsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQzNCLENBQUM7SUFFRCxlQUFlLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2lOQVhoQyxTQUFTLHlCQUFULFNBQVM7NkRBQVQsU0FBUztZQUFULDhCQUFTO1lBQVQsOEJBQUEsSUFBSSxDQUFLO3NHQU5QLENBQUMsY0FBYyxDQUFDOztZQUhoQixrQkFBeUI7NEJBRDFCLFlBQVksRUFBRSxZQUFZOztpRkFVM0IsU0FBUztjQWJyQixTQUFTO2VBQUM7Z0JBQ1AsUUFBUSxFQUFFLDBCQUEwQjtnQkFDcEMsVUFBVSxFQUFFLElBQUk7Z0JBQ2hCLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUM7Z0JBQ3JDLFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO2dCQUNyQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtnQkFDL0MsU0FBUyxFQUFFLENBQUMsY0FBYyxDQUFDO2dCQUMzQixJQUFJLEVBQUU7b0JBQ0YsU0FBUyxFQUFFLFlBQVk7b0JBQ3ZCLHFCQUFxQixFQUFFLE1BQU07aUJBQ2hDO2FBQ0o7Z0JBTVksVUFBVTtrQkFBbEIsS0FBSztZQUVvQixXQUFXO2tCQUFwQyxXQUFXO21CQUFDLE9BQU87O2tGQVBYLFNBQVM7QUFrQnRCLE1BQU0sT0FBTyxlQUFlO3lHQUFmLGVBQWU7NERBQWYsZUFBZTtnRUFIZCxTQUFTLEVBQUUsWUFBWSxFQUNaLFlBQVk7O2lGQUV4QixlQUFlO2NBSjNCLFFBQVE7ZUFBQztnQkFDTixPQUFPLEVBQUUsQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDO2dCQUNsQyxPQUFPLEVBQUUsQ0FBQyxTQUFTLEVBQUUsWUFBWSxDQUFDO2FBQ3JDOzt3RkFDWSxlQUFlLGNBbEJmLFNBQVMsRUFlRyxZQUFZLGFBZnhCLFNBQVMsRUFnQkcsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBIb3N0QmluZGluZywgaW5qZWN0LCBJbnB1dCwgTmdNb2R1bGUsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaGFyZWRNb2R1bGUgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBCYXNlQ29tcG9uZW50IH0gZnJvbSAncHJpbWVuZy9iYXNlY29tcG9uZW50JztcbmltcG9ydCB7IElucHV0SWNvblN0eWxlIH0gZnJvbSAnLi9zdHlsZS9pbnB1dGljb25zdHlsZSc7XG5cbi8qKlxuICogSW5wdXRJY29uIGRpc3BsYXlzIGFuIGljb24uXG4gKiBAZ3JvdXAgQ29tcG9uZW50c1xuICovXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ3AtaW5wdXRpY29uLCBwLWlucHV0SWNvbicsXG4gICAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBTaGFyZWRNb2R1bGVdLFxuICAgIHRlbXBsYXRlOiBgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PmAsXG4gICAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgICBwcm92aWRlcnM6IFtJbnB1dEljb25TdHlsZV0sXG4gICAgaG9zdDoge1xuICAgICAgICAnW2NsYXNzXSc6ICdzdHlsZUNsYXNzJyxcbiAgICAgICAgJ1tjbGFzcy5wLWlucHV0aWNvbl0nOiAndHJ1ZSdcbiAgICB9XG59KVxuZXhwb3J0IGNsYXNzIElucHV0SWNvbiBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuICAgIC8qKlxuICAgICAqIFN0eWxlIGNsYXNzIG9mIHRoZSBlbGVtZW50LlxuICAgICAqIEBncm91cCBQcm9wc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIHN0eWxlQ2xhc3M6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MnKSBnZXQgaG9zdENsYXNzZXMoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3R5bGVDbGFzcztcbiAgICB9XG5cbiAgICBfY29tcG9uZW50U3R5bGUgPSBpbmplY3QoSW5wdXRJY29uU3R5bGUpO1xufVxuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtJbnB1dEljb24sIFNoYXJlZE1vZHVsZV0sXG4gICAgZXhwb3J0czogW0lucHV0SWNvbiwgU2hhcmVkTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dEljb25Nb2R1bGUge31cbiJdfQ==