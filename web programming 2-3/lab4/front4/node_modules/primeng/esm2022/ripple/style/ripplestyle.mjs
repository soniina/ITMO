import { Injectable } from '@angular/core';
import { BaseStyle } from 'primeng/base';
import * as i0 from "@angular/core";
const theme = ({ dt }) => `
/* For PrimeNG */
.p-ripple {
    overflow: hidden;
    position: relative;
}

.p-ink {
    display: block;
    position: absolute;
    background: ${dt('ripple.background')};
    border-radius: 100%;
    transform: scale(0);
}

.p-ink-active {
    animation: ripple 0.4s linear;
}

.p-ripple-disabled .p-ink {
    display: none !important;
}

@keyframes ripple {
    100% {
        opacity: 0;
        transform: scale(2.5);
    }
}
`;
const classes = {
    root: 'p-ink'
};
export class RippleStyle extends BaseStyle {
    name = 'ripple';
    theme = theme;
    classes = classes;
    static ɵfac = /*@__PURE__*/ (() => { let ɵRippleStyle_BaseFactory; return function RippleStyle_Factory(__ngFactoryType__) { return (ɵRippleStyle_BaseFactory || (ɵRippleStyle_BaseFactory = i0.ɵɵgetInheritedFactory(RippleStyle)))(__ngFactoryType__ || RippleStyle); }; })();
    static ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: RippleStyle, factory: RippleStyle.ɵfac });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(RippleStyle, [{
        type: Injectable
    }], null, null); })();
/**
 *
 * Ripple directive adds ripple effect to the host element.
 *
 * [Live Demo](https://www.primeng.org/ripple)
 *
 * @module ripplestyle
 *
 */
export var RippleClasses;
(function (RippleClasses) {
    /**
     * Class name of the root element
     */
    RippleClasses["root"] = "p-ink";
})(RippleClasses || (RippleClasses = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmlwcGxlc3R5bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcmlwcGxlL3N0eWxlL3JpcHBsZXN0eWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7QUFFekMsTUFBTSxLQUFLLEdBQUcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEVBQUUsQ0FBQzs7Ozs7Ozs7OztrQkFVUixFQUFFLENBQUMsbUJBQW1CLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FtQnhDLENBQUM7QUFFRixNQUFNLE9BQU8sR0FBRztJQUNaLElBQUksRUFBRSxPQUFPO0NBQ2hCLENBQUM7QUFHRixNQUFNLE9BQU8sV0FBWSxTQUFRLFNBQVM7SUFDdEMsSUFBSSxHQUFHLFFBQVEsQ0FBQztJQUVoQixLQUFLLEdBQUcsS0FBSyxDQUFDO0lBRWQsT0FBTyxHQUFHLE9BQU8sQ0FBQzt5TkFMVCxXQUFXLHlCQUFYLFdBQVc7Z0VBQVgsV0FBVyxXQUFYLFdBQVc7O2lGQUFYLFdBQVc7Y0FEdkIsVUFBVTs7QUFTWDs7Ozs7Ozs7R0FRRztBQUVILE1BQU0sQ0FBTixJQUFZLGFBS1g7QUFMRCxXQUFZLGFBQWE7SUFDckI7O09BRUc7SUFDSCwrQkFBYyxDQUFBO0FBQ2xCLENBQUMsRUFMVyxhQUFhLEtBQWIsYUFBYSxRQUt4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJhc2VTdHlsZSB9IGZyb20gJ3ByaW1lbmcvYmFzZSc7XG5cbmNvbnN0IHRoZW1lID0gKHsgZHQgfSkgPT4gYFxuLyogRm9yIFByaW1lTkcgKi9cbi5wLXJpcHBsZSB7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbi5wLWluayB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJhY2tncm91bmQ6ICR7ZHQoJ3JpcHBsZS5iYWNrZ3JvdW5kJyl9O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcbn1cblxuLnAtaW5rLWFjdGl2ZSB7XG4gICAgYW5pbWF0aW9uOiByaXBwbGUgMC40cyBsaW5lYXI7XG59XG5cbi5wLXJpcHBsZS1kaXNhYmxlZCAucC1pbmsge1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuQGtleWZyYW1lcyByaXBwbGUge1xuICAgIDEwMCUge1xuICAgICAgICBvcGFjaXR5OiAwO1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDIuNSk7XG4gICAgfVxufVxuYDtcblxuY29uc3QgY2xhc3NlcyA9IHtcbiAgICByb290OiAncC1pbmsnXG59O1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUmlwcGxlU3R5bGUgZXh0ZW5kcyBCYXNlU3R5bGUge1xuICAgIG5hbWUgPSAncmlwcGxlJztcblxuICAgIHRoZW1lID0gdGhlbWU7XG5cbiAgICBjbGFzc2VzID0gY2xhc3Nlcztcbn1cblxuLyoqXG4gKlxuICogUmlwcGxlIGRpcmVjdGl2ZSBhZGRzIHJpcHBsZSBlZmZlY3QgdG8gdGhlIGhvc3QgZWxlbWVudC5cbiAqXG4gKiBbTGl2ZSBEZW1vXShodHRwczovL3d3dy5wcmltZW5nLm9yZy9yaXBwbGUpXG4gKlxuICogQG1vZHVsZSByaXBwbGVzdHlsZVxuICpcbiAqL1xuXG5leHBvcnQgZW51bSBSaXBwbGVDbGFzc2VzIHtcbiAgICAvKipcbiAgICAgKiBDbGFzcyBuYW1lIG9mIHRoZSByb290IGVsZW1lbnRcbiAgICAgKi9cbiAgICByb290ID0gJ3AtaW5rJ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJpcHBsZVN0eWxlIGV4dGVuZHMgQmFzZVN0eWxlIHt9XG4iXX0=