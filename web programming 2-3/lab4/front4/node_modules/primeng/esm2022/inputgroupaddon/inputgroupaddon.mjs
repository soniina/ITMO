import { CommonModule } from '@angular/common';
import { Component, HostBinding, inject, Input, NgModule } from '@angular/core';
import { SharedModule } from 'primeng/api';
import { BaseComponent } from 'primeng/basecomponent';
import { InputGroupAddonStyle } from './style/inputgroupaddonstyle';
import * as i0 from "@angular/core";
const _c0 = ["*"];
/**
 * InputGroupAddon displays text, icon, buttons and other content can be grouped next to an input.
 * @group Components
 */
export class InputGroupAddon extends BaseComponent {
    /**
     * Inline style of the element.
     * @group Props
     */
    style;
    /**
     * Class of the element.
     * @group Props
     */
    styleClass;
    _componentStyle = inject(InputGroupAddonStyle);
    get hostStyle() {
        return this.style;
    }
    static ɵfac = /*@__PURE__*/ (() => { let ɵInputGroupAddon_BaseFactory; return function InputGroupAddon_Factory(__ngFactoryType__) { return (ɵInputGroupAddon_BaseFactory || (ɵInputGroupAddon_BaseFactory = i0.ɵɵgetInheritedFactory(InputGroupAddon)))(__ngFactoryType__ || InputGroupAddon); }; })();
    static ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: InputGroupAddon, selectors: [["p-inputgroup-addon"], ["p-inputGroupAddon"]], hostVars: 7, hostBindings: function InputGroupAddon_HostBindings(rf, ctx) { if (rf & 2) {
            i0.ɵɵattribute("data-pc-name", "inputgroupaddon");
            i0.ɵɵstyleMap(ctx.hostStyle);
            i0.ɵɵclassMap(ctx.styleClass);
            i0.ɵɵclassProp("p-inputgroupaddon", true);
        } }, inputs: { style: "style", styleClass: "styleClass" }, standalone: true, features: [i0.ɵɵProvidersFeature([InputGroupAddonStyle]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function InputGroupAddon_Template(rf, ctx) { if (rf & 1) {
            i0.ɵɵprojectionDef();
            i0.ɵɵprojection(0);
        } }, dependencies: [CommonModule], encapsulation: 2 });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(InputGroupAddon, [{
        type: Component,
        args: [{
                selector: 'p-inputgroup-addon, p-inputGroupAddon',
                template: ` <ng-content></ng-content> `,
                standalone: true,
                imports: [CommonModule],
                host: {
                    '[class]': 'styleClass',
                    '[class.p-inputgroupaddon]': 'true',
                    '[attr.data-pc-name]': '"inputgroupaddon"'
                },
                providers: [InputGroupAddonStyle]
            }]
    }], null, { style: [{
            type: Input
        }], styleClass: [{
            type: Input
        }], hostStyle: [{
            type: HostBinding,
            args: ['style']
        }] }); })();
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassDebugInfo(InputGroupAddon, { className: "InputGroupAddon" }); })();
export class InputGroupAddonModule {
    static ɵfac = function InputGroupAddonModule_Factory(__ngFactoryType__) { return new (__ngFactoryType__ || InputGroupAddonModule)(); };
    static ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: InputGroupAddonModule });
    static ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({ imports: [InputGroupAddon, SharedModule, SharedModule] });
}
(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(InputGroupAddonModule, [{
        type: NgModule,
        args: [{
                imports: [InputGroupAddon, SharedModule],
                exports: [InputGroupAddon, SharedModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(InputGroupAddonModule, { imports: [InputGroupAddon, SharedModule], exports: [InputGroupAddon, SharedModule] }); })();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRncm91cGFkZG9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2lucHV0Z3JvdXBhZGRvbi9pbnB1dGdyb3VwYWRkb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDM0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDOzs7QUFFcEU7OztHQUdHO0FBYUgsTUFBTSxPQUFPLGVBQWdCLFNBQVEsYUFBYTtJQUM5Qzs7O09BR0c7SUFDTSxLQUFLLENBQThDO0lBQzVEOzs7T0FHRztJQUNNLFVBQVUsQ0FBcUI7SUFFeEMsZUFBZSxHQUFHLE1BQU0sQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0lBRS9DLElBQTBCLFNBQVM7UUFDL0IsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3RCLENBQUM7eU9BaEJRLGVBQWUseUJBQWYsZUFBZTs2REFBZixlQUFlOzJDQUFmLGlCQUFpQjtZQUFqQiw0QkFBZTtZQUFmLDZCQUFlO1lBQWYsb0NBQUEsSUFBSSxDQUFXO3NIQUZiLENBQUMsb0JBQW9CLENBQUM7O1lBUnJCLGtCQUF5Qjs0QkFFM0IsWUFBWTs7aUZBUWIsZUFBZTtjQVozQixTQUFTO2VBQUM7Z0JBQ1AsUUFBUSxFQUFFLHVDQUF1QztnQkFDakQsUUFBUSxFQUFFLDZCQUE2QjtnQkFDdkMsVUFBVSxFQUFFLElBQUk7Z0JBQ2hCLE9BQU8sRUFBRSxDQUFDLFlBQVksQ0FBQztnQkFDdkIsSUFBSSxFQUFFO29CQUNGLFNBQVMsRUFBRSxZQUFZO29CQUN2QiwyQkFBMkIsRUFBRSxNQUFNO29CQUNuQyxxQkFBcUIsRUFBRSxtQkFBbUI7aUJBQzdDO2dCQUNELFNBQVMsRUFBRSxDQUFDLG9CQUFvQixDQUFDO2FBQ3BDO2dCQU1ZLEtBQUs7a0JBQWIsS0FBSztZQUtHLFVBQVU7a0JBQWxCLEtBQUs7WUFJb0IsU0FBUztrQkFBbEMsV0FBVzttQkFBQyxPQUFPOztrRkFkWCxlQUFlO0FBdUI1QixNQUFNLE9BQU8scUJBQXFCOytHQUFyQixxQkFBcUI7NERBQXJCLHFCQUFxQjtnRUFIcEIsZUFBZSxFQUFFLFlBQVksRUFDWixZQUFZOztpRkFFOUIscUJBQXFCO2NBSmpDLFFBQVE7ZUFBQztnQkFDTixPQUFPLEVBQUUsQ0FBQyxlQUFlLEVBQUUsWUFBWSxDQUFDO2dCQUN4QyxPQUFPLEVBQUUsQ0FBQyxlQUFlLEVBQUUsWUFBWSxDQUFDO2FBQzNDOzt3RkFDWSxxQkFBcUIsY0F2QnJCLGVBQWUsRUFvQkcsWUFBWSxhQXBCOUIsZUFBZSxFQXFCRyxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIGluamVjdCwgSW5wdXQsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTaGFyZWRNb2R1bGUgfSBmcm9tICdwcmltZW5nL2FwaSc7XG5pbXBvcnQgeyBCYXNlQ29tcG9uZW50IH0gZnJvbSAncHJpbWVuZy9iYXNlY29tcG9uZW50JztcbmltcG9ydCB7IElucHV0R3JvdXBBZGRvblN0eWxlIH0gZnJvbSAnLi9zdHlsZS9pbnB1dGdyb3VwYWRkb25zdHlsZSc7XG5cbi8qKlxuICogSW5wdXRHcm91cEFkZG9uIGRpc3BsYXlzIHRleHQsIGljb24sIGJ1dHRvbnMgYW5kIG90aGVyIGNvbnRlbnQgY2FuIGJlIGdyb3VwZWQgbmV4dCB0byBhbiBpbnB1dC5cbiAqIEBncm91cCBDb21wb25lbnRzXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAncC1pbnB1dGdyb3VwLWFkZG9uLCBwLWlucHV0R3JvdXBBZGRvbicsXG4gICAgdGVtcGxhdGU6IGAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PiBgLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV0sXG4gICAgaG9zdDoge1xuICAgICAgICAnW2NsYXNzXSc6ICdzdHlsZUNsYXNzJyxcbiAgICAgICAgJ1tjbGFzcy5wLWlucHV0Z3JvdXBhZGRvbl0nOiAndHJ1ZScsXG4gICAgICAgICdbYXR0ci5kYXRhLXBjLW5hbWVdJzogJ1wiaW5wdXRncm91cGFkZG9uXCInXG4gICAgfSxcbiAgICBwcm92aWRlcnM6IFtJbnB1dEdyb3VwQWRkb25TdHlsZV1cbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRHcm91cEFkZG9uIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogSW5saW5lIHN0eWxlIG9mIHRoZSBlbGVtZW50LlxuICAgICAqIEBncm91cCBQcm9wc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIHN0eWxlOiB7IFtrbGFzczogc3RyaW5nXTogYW55IH0gfCBudWxsIHwgdW5kZWZpbmVkO1xuICAgIC8qKlxuICAgICAqIENsYXNzIG9mIHRoZSBlbGVtZW50LlxuICAgICAqIEBncm91cCBQcm9wc1xuICAgICAqL1xuICAgIEBJbnB1dCgpIHN0eWxlQ2xhc3M6IHN0cmluZyB8IHVuZGVmaW5lZDtcblxuICAgIF9jb21wb25lbnRTdHlsZSA9IGluamVjdChJbnB1dEdyb3VwQWRkb25TdHlsZSk7XG5cbiAgICBASG9zdEJpbmRpbmcoJ3N0eWxlJykgZ2V0IGhvc3RTdHlsZSgpOiB7IFtrbGFzczogc3RyaW5nXTogYW55IH0gfCBudWxsIHwgdW5kZWZpbmVkIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3R5bGU7XG4gICAgfVxufVxuXG5ATmdNb2R1bGUoe1xuICAgIGltcG9ydHM6IFtJbnB1dEdyb3VwQWRkb24sIFNoYXJlZE1vZHVsZV0sXG4gICAgZXhwb3J0czogW0lucHV0R3JvdXBBZGRvbiwgU2hhcmVkTW9kdWxlXVxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dEdyb3VwQWRkb25Nb2R1bGUge31cbiJdfQ==